var H=Object.defineProperty;var A=(l,e,t)=>e in l?H(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var M=(l,e,t)=>A(l,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();let E=class b{constructor(e,t){this.q=e,this.r=t}toCube(){return{x:this.q,y:-this.q-this.r,z:this.r}}distance(e){const t=this.toCube(),i=e.toCube();return(Math.abs(t.x-i.x)+Math.abs(t.y-i.y)+Math.abs(t.z-i.z))/2}neighbors(){return[[1,0],[1,-1],[0,-1],[-1,0],[-1,1],[0,1]].map(([t,i])=>new b(this.q+t,this.r+i))}equals(e){return this.q===e.q&&this.r===e.r}toString(){return`${this.q},${this.r}`}static fromString(e){const[t,i]=e.split(",").map(Number);return new b(t,i)}lineTo(e){const t=this.distance(e),i=[];for(let n=0;n<=t;n++){const s=t===0?0:n/t,a=this.q*(1-s)+e.q*s,o=this.r*(1-s)+e.r*s;i.push(this.round(a,o))}return i}round(e,t){let i=e,n=t,s=-i-n,a=Math.round(i),o=Math.round(s),r=Math.round(n);const h=Math.abs(a-i),c=Math.abs(o-s),d=Math.abs(r-n);return h>c&&h>d?a=-o-r:c>d?o=-a-r:r=-a-o,new b(a,r)}},$=class{constructor(e,t){this.size=e,this.origin=t,this.orientation={f0:3/2,f1:0,f2:Math.sqrt(3)/2,f3:Math.sqrt(3),b0:2/3,b1:0,b2:-1/3,b3:Math.sqrt(3)/3,start_angle:0}}hexToPixel(e){const t=this.orientation,i=(t.f0*e.q+t.f1*e.r)*this.size,n=(t.f2*e.q+t.f3*e.r)*this.size;return{x:i+this.origin.x,y:n+this.origin.y}}pixelToHex(e){const t=this.orientation,i={x:(e.x-this.origin.x)/this.size,y:(e.y-this.origin.y)/this.size},n=t.b0*i.x+t.b1*i.y,s=t.b2*i.x+t.b3*i.y;return new E(0,0).round(n,s)}hexCorners(e){const t=[],i=this.hexToPixel(e);for(let n=0;n<6;n++){const s=2*Math.PI*(this.orientation.start_angle+n)/6;t.push({x:i.x+this.size*Math.cos(s),y:i.y+this.size*Math.sin(s)})}return t}};window.HexCoord=E;window.HexLayout=$;let I=class{constructor(e){this.grid=e}findPath(e,t,i,n){const s=new C;s.push(e.toString(),0);const a=new Map,o=new Map;for(a.set(e.toString(),null),o.set(e.toString(),0);!s.isEmpty();){const c=s.pop(),d=HexCoord.fromString(c);if(d.equals(t))break;const p=d.neighbors();for(const u of p){if(!this.grid.isValidHex(u)||this.grid.isOccupied(u))continue;const m=this.getMoveCost(d,u,i),g=o.get(c)+m;if(g>n)continue;const f=u.toString();if(!o.has(f)||g<o.get(f)){o.set(f,g);const y=g+this.heuristic(u,t);s.push(f,y),a.set(f,c)}}}if(!a.has(t.toString()))return null;const r=[];let h=t.toString();for(;h!==null;)r.push(HexCoord.fromString(h)),h=a.get(h);return r.reverse(),r.slice(1)}getReachableHexes(e,t){const i=t.actionPoints,n=new Map,s=new C;for(s.push(e.toString(),0),n.set(e.toString(),0);!s.isEmpty();){const o=s.pop(),r=HexCoord.fromString(o),h=n.get(o),c=r.neighbors();for(const d of c){if(!this.grid.isValidHex(d)||this.grid.isOccupied(d))continue;const p=this.getMoveCost(r,d,t),u=h+p;if(u>i)continue;const m=d.toString();(!n.has(m)||u<n.get(m))&&(n.set(m,u),s.push(m,u))}}const a=[];for(const[o,r]of n.entries())o!==e.toString()&&a.push({hex:HexCoord.fromString(o),cost:r});return a}getMoveCost(e,t,i){let n=1;if(i.velocity){const s=this.getVelocityDirection(i.velocity),a=this.getDirection(e,t);s===a?n*=.5:this.isOppositeDirection(s,a)&&(n*=1.5)}return n}getVelocityDirection(e){const t=Math.atan2(e.r,e.q);return Math.floor((t+Math.PI)/(Math.PI/3))%6}getDirection(e,t){const i=t.q-e.q,n=t.r-e.r,s=[[1,0],[1,-1],[0,-1],[-1,0],[-1,1],[0,1]];for(let a=0;a<s.length;a++)if(s[a][0]===i&&s[a][1]===n)return a;return-1}isOppositeDirection(e,t){return Math.abs(e-t)===3}heuristic(e,t){return e.distance(t)}};class C{constructor(){this.elements=[]}isEmpty(){return this.elements.length===0}push(e,t){this.elements.push({item:e,priority:t}),this.elements.sort((i,n)=>i.priority-n.priority)}pop(){return this.elements.shift().item}}window.PathFinder=I;window.PriorityQueue=C;let k=class{static calculateDamage(e){const{weapon:t,damage:i,attacker:n,target:s}=e;let a=i;switch(t.damageType){case"kinetic":a*=1.2;break;case"energy":a*=1;break;case"explosive":a*=1.3;break;case"emp":return s.energy=Math.max(0,s.energy-i),{type:"emp",energyDamage:i}}return{type:"damage",...s.takeDamage({damage:a,weapon:t}),totalDamage:a}}static hasLineOfSight(e,t,i){const n=e.position.lineTo(t.position);for(let s=1;s<n.length-1;s++){const a=n[s];if(i.isBlocked(a))return!1}return!0}static getTargetingInfo(e,t,i){const n=e.position.distance(t.position),s=n>=i.minRange&&n<=i.maxRange,a=e.energy>=i.energyCost,o=e.actionPoints>=i.apCost,r=i.cooldownRemaining===0;return{distance:n,inRange:s,hasEnergy:a,hasAP:o,notOnCooldown:r,canFire:s&&a&&o&&r}}},B=class{constructor(e,t,i,n=10){this.start=e,this.end=t,this.position={...e},this.weapon=i,this.speed=n,this.active=!0;const s=t.x-e.x,a=t.y-e.y,o=Math.sqrt(s*s+a*a);this.velocity={x:s/o*n,y:a/o*n},this.lifetime=o/n,this.age=0}update(e){if(this.active){if(this.age+=e,this.age>=this.lifetime){this.active=!1;return}this.position.x+=this.velocity.x*e,this.position.y+=this.velocity.y*e}}draw(e){if(this.active){switch(e.save(),this.weapon.type){case"kinetic":e.fillStyle="#ffaa00",e.beginPath(),e.arc(this.position.x,this.position.y,3,0,Math.PI*2),e.fill(),e.strokeStyle="rgba(255, 170, 0, 0.5)",e.lineWidth=2,e.beginPath(),e.moveTo(this.position.x-this.velocity.x*3,this.position.y-this.velocity.y*3),e.lineTo(this.position.x,this.position.y),e.stroke();break;case"missile":const t=Math.atan2(this.velocity.y,this.velocity.x);e.translate(this.position.x,this.position.y),e.rotate(t),e.fillStyle="#ff4444",e.fillRect(-6,-2,12,4),e.fillStyle="#ffaa00",e.beginPath(),e.moveTo(-6,0),e.lineTo(-10,-3),e.lineTo(-10,3),e.closePath(),e.fill();break}e.restore()}}},L=class{constructor(e,t,i,n=.3){this.start=e,this.end=t,this.weapon=i,this.duration=n,this.age=0,this.active=!0}update(e){this.age+=e,this.age>=this.duration&&(this.active=!1)}draw(e){if(!this.active)return;const t=1-this.age/this.duration;e.save(),e.globalAlpha=t,e.strokeStyle="#00d4ff",e.lineWidth=4,e.shadowBlur=10,e.shadowColor="#00d4ff",e.beginPath(),e.moveTo(this.start.x,this.start.y),e.lineTo(this.end.x,this.end.y),e.stroke(),e.strokeStyle="#ffffff",e.lineWidth=2,e.shadowBlur=0,e.beginPath(),e.moveTo(this.start.x,this.start.y),e.lineTo(this.end.x,this.end.y),e.stroke(),e.restore()}};window.WeaponSystem=k;window.Projectile=B;window.Beam=L;let W=class T{constructor(e){this.id=e.id||Math.random().toString(36),this.name=e.name||"Unknown Ship",this.position=e.position,this.team=e.team||"player",this.shipClass=e.shipClass||"corvette",this.maxHull=e.maxHull||100,this.hull=e.hull||this.maxHull,this.maxShield=e.maxShield||50,this.shield=e.shield||this.maxShield,this.armor=e.armor||10,this.maxEnergy=e.maxEnergy||100,this.energy=this.maxEnergy,this.reactorOutput=e.reactorOutput||50,this.maxAllocationPoints=10,this.energyAllocation=e.energyAllocation||{weapons:3,shields:3,engines:4},this.maxActionPoints=e.maxActionPoints||3,this.actionPoints=this.maxActionPoints,this.velocity={q:0,r:0},this.maxSpeed=e.maxSpeed||3,this.sensors=e.sensors||50,this.initiative=0,this.weapons=e.weapons||[],this.isDestroyed=!1,this.isActive=!1,this.animationPosition=null,this.animationProgress=1,this.animationStart=null,this.animationEnd=null,this.animationDuration=0}startTurn(){this.isActive=!0,this.actionPoints=this.maxActionPoints,this._aiProcessed=!1,this._autoSelected=!1,this.energy=Math.min(this.maxEnergy,this.energy+this.reactorOutput);const t=this.energyAllocation.shields/this.maxAllocationPoints*this.reactorOutput*.5;this.shield=Math.min(this.maxShield,this.shield+t),this.weapons.forEach(i=>{i.cooldownRemaining>0&&i.cooldownRemaining--})}endTurn(){this.isActive=!1,(this.velocity.q!==0||this.velocity.r!==0)&&this.applyDrift()}setEnergyAllocation(e,t,i,n=!0){if(e+t+i!==this.maxAllocationPoints)return!1;if(n&&this.isActive){if(this.actionPoints<1)return!1;this.actionPoints-=1}return this.energyAllocation={weapons:e,shields:t,engines:i},!0}move(e,t){if(!e||e.length===0)return!1;const i=e.length;if(i>this.actionPoints)return!1;if(this.animationStart=this.position,this.animationEnd=e[e.length-1],this.animationProgress=0,this.animationDuration=300*e.length,this.animationPosition=this.position,t.removeShip(this.position),this.position=e[e.length-1],t.placeShip(this,this.position),this.actionPoints-=i,e.length>0){const n=this.energyAllocation.engines/this.maxAllocationPoints,s=e[0],a=e[e.length-1],o=(a.q-s.q)*n*.3,r=(a.r-s.r)*n*.3;this.velocity.q+=o,this.velocity.r+=r;const h=Math.sqrt(this.velocity.q**2+this.velocity.r**2);h>this.maxSpeed&&(this.velocity.q=this.velocity.q/h*this.maxSpeed,this.velocity.r=this.velocity.r/h*this.maxSpeed)}return!0}updateAnimation(e){if(this.animationProgress>=1)return;(!e||e<=0||e>1)&&(e=.016);const t=e*1e3/this.animationDuration;this.animationProgress=Math.min(1,this.animationProgress+t);const i=this.animationProgress,n=i<.5?2*i*i:-1+(4-2*i)*i;this.animationStart&&this.animationEnd&&(this.animationPosition={q:this.animationStart.q+(this.animationEnd.q-this.animationStart.q)*n,r:this.animationStart.r+(this.animationEnd.r-this.animationStart.r)*n})}getRenderPosition(){return this.animationProgress<1&&this.animationPosition?this.animationPosition:this.position}applyDrift(){const e=Math.round(this.velocity.q),t=Math.round(this.velocity.r);if(e!==0||t!==0){const i=new HexCoord(this.position.q+e,this.position.r+t);this.position=i}this.velocity.q*=.9,this.velocity.r*=.9,Math.abs(this.velocity.q)<.1&&(this.velocity.q=0),Math.abs(this.velocity.r)<.1&&(this.velocity.r=0)}fireWeapon(e,t){if(e<0||e>=this.weapons.length)return null;const i=this.weapons[e];if(!this.canFireWeapon(i,t))return null;const n=this.energyAllocation.weapons/this.maxAllocationPoints,s=i.damage*n;return this.energy-=i.energyCost,this.actionPoints-=i.apCost,i.cooldownRemaining=i.cooldown,{weapon:i,damage:s,attacker:this,target:t}}canFireWeapon(e,t){if(this.energy<e.energyCost||this.actionPoints<e.apCost||e.cooldownRemaining>0)return!1;const i=this.position.distance(t.position);return!(i>e.maxRange||i<e.minRange)}takeDamage(e){let t=e.damage;if(e.weapon.damageType,this.shield>0){const i=Math.min(this.shield,t);this.shield-=i,t-=i}if(t>0){const i=this.armor*.5;t=Math.max(1,t-i),this.hull-=t}return this.hull<=0&&(this.hull=0,this.isDestroyed=!0),{shieldDamage:e.damage-t,hullDamage:Math.min(t,this.hull),destroyed:this.isDestroyed}}rollInitiative(){return this.initiative=this.sensors+Math.floor(Math.random()*20),this.initiative}getColor(){return this.team==="player"?"#4a9eff":"#ff4444"}toJSON(){return{id:this.id,name:this.name,position:{q:this.position.q,r:this.position.r},team:this.team,shipClass:this.shipClass,hull:this.hull,maxHull:this.maxHull,shield:this.shield,maxShield:this.maxShield,armor:this.armor,energy:this.energy,maxEnergy:this.maxEnergy,reactorOutput:this.reactorOutput,energyAllocation:this.energyAllocation,actionPoints:this.actionPoints,maxActionPoints:this.maxActionPoints,velocity:this.velocity,maxSpeed:this.maxSpeed,sensors:this.sensors,weapons:this.weapons,upgrades:this.upgrades||[]}}static fromJSON(e){return e.position=new HexCoord(e.position.q,e.position.r),new T(e)}};const D={interceptor:{shipClass:"interceptor",creditCost:200,maxHull:80,maxShield:40,armor:5,maxEnergy:100,reactorOutput:50,maxActionPoints:4,maxSpeed:4,sensors:60,weapons:[{name:"Light Laser",type:"energy",damage:20,energyCost:25,apCost:1,cooldown:0,cooldownRemaining:0,maxRange:6,minRange:0,damageType:"energy"}]},corvette:{shipClass:"corvette",creditCost:400,maxHull:140,maxShield:65,armor:12,maxEnergy:120,reactorOutput:60,maxActionPoints:3,maxSpeed:3,sensors:50,weapons:[{name:"Pulse Cannon",type:"energy",damage:30,energyCost:35,apCost:1,cooldown:0,cooldownRemaining:0,maxRange:6,minRange:0,damageType:"energy"},{name:"Missiles",type:"missile",damage:55,energyCost:50,apCost:1,cooldown:2,cooldownRemaining:0,maxRange:9,minRange:2,damageType:"explosive"}]},destroyer:{shipClass:"destroyer",creditCost:700,maxHull:200,maxShield:80,armor:25,maxEnergy:140,reactorOutput:70,maxActionPoints:2,maxSpeed:2,sensors:40,weapons:[{name:"Heavy Cannon",type:"kinetic",damage:65,energyCost:60,apCost:1,cooldown:1,cooldownRemaining:0,maxRange:7,minRange:0,damageType:"kinetic"},{name:"Point Defense",type:"energy",damage:15,energyCost:20,apCost:0,cooldown:0,cooldownRemaining:0,maxRange:4,minRange:0,damageType:"energy"}]}};window.Ship=W;window.SHIP_PRESETS=D;let q=class{constructor(e,t){this.width=e,this.height=t,this.ships=new Map,this.obstacles=new Set,this.pathfinder=new PathFinder(this)}placeShip(e,t){const i=t.toString();this.ships.set(i,e),e.position=t}removeShip(e){const t=e.toString();this.ships.delete(t)}getShipAt(e){const t=e.toString();return this.ships.get(t)||null}isOccupied(e){return this.ships.has(e.toString())}isBlocked(e){return this.isOccupied(e)||this.obstacles.has(e.toString())}isValidHex(e){const t=Math.floor(this.width/2),i=Math.floor(this.height/2);return e.q>=-t&&e.q<=t&&e.r>=-i&&e.r<=i}getAllShips(){return Array.from(this.ships.values())}getShipsByTeam(e){return this.getAllShips().filter(t=>t.team===e&&!t.isDestroyed)}findPath(e,t,i){return this.pathfinder.findPath(e,t,i,i.actionPoints)}getReachableHexes(e){return this.pathfinder.getReachableHexes(e.position,e)}addObstacle(e){this.obstacles.add(e.toString())}clear(){this.ships.clear(),this.obstacles.clear()}generateObstacles(e){const t=Math.floor(this.width/2),i=Math.floor(this.height/2);for(let n=0;n<e;n++){const s=Math.floor(Math.random()*this.width)-t,a=Math.floor(Math.random()*this.height)-i,o=new HexCoord(s,a);!this.isOccupied(o)&&this.isValidHex(o)&&this.addObstacle(o)}}};window.Grid=q;let O=class{constructor(e,t=null){this.grid=e,this.combatLog=t,this.turnNumber=1,this.initiativeQueue=[],this.currentShipIndex=0,this.phase="initiative"}startRound(){this.phase="initiative",this.initiativeQueue=[],this.currentShipIndex=0,this.combatLog&&this.combatLog.logRoundStart(this.turnNumber),this.grid.getAllShips().filter(t=>!t.isDestroyed).forEach(t=>{t.rollInitiative(),this.initiativeQueue.push(t)}),this.initiativeQueue.sort((t,i)=>i.initiative-t.initiative),this.nextTurn()}nextTurn(){if(console.log(`nextTurn() called. Current index: ${this.currentShipIndex}, Queue length: ${this.initiativeQueue.length}`),this.currentShipIndex<this.initiativeQueue.length){const t=this.initiativeQueue[this.currentShipIndex];t&&(console.log(`Ending turn for ${t.name}`),t.endTurn())}if(this.currentShipIndex++,console.log(`Incremented index to: ${this.currentShipIndex}`),this.currentShipIndex>=this.initiativeQueue.length){console.log("Round is over, calling endRound()"),this.endRound();return}const e=this.getCurrentShip();console.log(`Next ship: ${e?e.name:"null"}, Team: ${e?e.team:"null"}`),e&&(this.combatLog&&this.combatLog.logTurnStart(e.name,this.turnNumber),e.startTurn(),this.phase="action",console.log(`Started turn for ${e.name}, phase: ${this.phase}`))}endRound(){this.phase="end",this.turnNumber++;const e=this.grid.getShipsByTeam("player"),t=this.grid.getShipsByTeam("enemy");return e.length===0?{gameOver:!0,winner:"enemy"}:t.length===0?{gameOver:!0,winner:"player"}:(setTimeout(()=>{this.startRound()},500),{gameOver:!1})}getCurrentShip(){return this.currentShipIndex>=0&&this.currentShipIndex<this.initiativeQueue.length?this.initiativeQueue[this.currentShipIndex]:null}getInitiativeQueue(){return this.initiativeQueue.map((e,t)=>({ship:e,isActive:t===this.currentShipIndex}))}endCurrentTurn(){const e=this.getCurrentShip();e&&e.team==="player"&&this.nextTurn()}isPlayerTurn(){const e=this.getCurrentShip();return e&&e.team==="player"}processEnemyTurn(e){const t=this.getCurrentShip();if(!t||t.team!=="enemy"){console.warn("processEnemyTurn called but no valid enemy ship");return}if(this._processingAI){console.warn("Already processing AI turn, skipping");return}this._processingAI=!0,console.log(`AI processing turn for ${t.name}`);try{const i=this.grid.getShipsByTeam("player");if(i.length===0){console.log("No player ships found, ending turn"),this.nextTurn();return}let n=this.chooseBestTarget(t,i);console.log(`Best target: ${n.name}`);const s=t.weapons[0];let a=!1;if(s){const c=t.position.distance(n.position);a=c>=s.minRange&&c<=s.maxRange}const o=!a||t.actionPoints>=4;if(s&&o&&t.actionPoints>1){const c=t.position.distance(n.position),d=s.minRange+Math.floor((s.maxRange-s.minRange)/2),p=c>s.maxRange||c<s.minRange,u=Math.abs(c-d)>2&&t.actionPoints>=4;if(p||u){const m=this.grid.getReachableHexes(t);if(m.length>0){let g=null,f=-1/0;if(m.forEach(({hex:y,cost:R})=>{const S=y.distance(n.position);let x=0;S>=s.minRange&&S<=s.maxRange?(x+=100,x-=Math.abs(S-d)*10):S<s.maxRange+2?x+=50-(S-s.maxRange)*20:x-=S*5,c>s.maxRange&&(x+=(c-S)*15),t.actionPoints-R<s.apCost&&(x-=50),x>f&&(f=x,g=y)}),g&&!g.equals(t.position)){const y=this.grid.findPath(t.position,g,t);y&&y.length>0&&(console.log(`Moving to better position (${g.q}, ${g.r})`),t.move(y,this.grid))}}}}let r=0;const h=10;for(;t.actionPoints>0&&t.energy>0&&r<h;){const c=this.chooseBestWeapon(t,n);if(c===null){console.log("No weapons can fire");break}const d=t.weapons[c];console.log(`Attacking with ${d.name} (AP: ${t.actionPoints}, Energy: ${t.energy})`);const p=t.fireWeapon(c,n);if(p){const u=WeaponSystem.calculateDamage(p);console.log(`Dealt ${u.hullDamage+u.shieldDamage} damage`);const m=e.layout.hexToPixel(t.position),g=e.layout.hexToPixel(n.position);if(d.type==="energy"?e.addBeam(m,g,d):e.addProjectile(m,g,d),r++,n.isDestroyed){console.log(`Target ${n.name} destroyed!`);break}}else{console.log("Attack failed");break}}console.log(`AI turn complete: ${r} attacks made`)}catch(i){console.error("Error in enemy AI:",i)}finally{console.log("Scheduling turn end"),setTimeout(()=>{console.log("Ending enemy turn"),this._processingAI=!1,this.nextTurn()},1e3)}}chooseBestTarget(e,t){let i=null,n=-1/0;return t.forEach(s=>{let a=0;const o=s.hull/s.maxHull;o<.3?a+=100:o<.5&&(a+=50);const r=s.weapons.reduce((c,d)=>c+(d.damage||0),0);a+=r*.5;const h=e.position.distance(s.position);a-=h*2,s.shield===0&&(a+=30),a>n&&(n=a,i=s)}),i||t[0]}chooseBestWeapon(e,t){let i=null,n=-1/0;return e.weapons.forEach((s,a)=>{const o=e.position.distance(t.position);if(o>s.maxRange||o<s.minRange){console.log(`${s.name} out of range: ${o} (needs ${s.minRange}-${s.maxRange})`);return}if(!e.canFireWeapon(s,t)){console.log(`${s.name} cannot fire: AP=${e.actionPoints}/${s.apCost}, Energy=${e.energy}/${s.energyCost}, CD=${s.cooldownRemaining}`);return}let r=0;r+=s.damage||0,s.type==="energy"&&t.shield>0&&(r+=20),s.type==="kinetic"&&t.shield===0&&(r+=20),r-=s.energyCost*.5,s.cooldownRemaining===0&&(r+=10),r>n&&(n=r,i=a)}),i}reset(){this.turnNumber=1,this.initiativeQueue=[],this.currentShipIndex=0,this.phase="initiative"}};window.TurnManager=O;let z=class{constructor(){this.cache=new Map}generateShipSprite(e,t){const i=`${e}_${t}`;if(this.cache.has(i))return this.cache.get(i);const n=32,s=document.createElement("canvas");s.width=n,s.height=n;const a=s.getContext("2d"),o=t==="player"?"#4a9eff":"#ff4444",r=t==="player"?"#2a5f9f":"#aa2222",h=t==="player"?"#6ab9ff":"#ff6666";switch(a.imageSmoothingEnabled=!1,e){case"interceptor":this.drawInterceptor(a,n,o,r,h);break;case"corvette":this.drawCorvette(a,n,o,r,h);break;case"destroyer":this.drawDestroyer(a,n,o,r,h);break;default:this.drawCorvette(a,n,o,r,h)}return this.cache.set(i,s),s}drawInterceptor(e,t,i,n,s){const a=t/2,o=t/2;e.fillStyle=i,e.beginPath(),e.moveTo(a,o-10),e.lineTo(a+6,o+6),e.lineTo(a,o+4),e.lineTo(a-6,o+6),e.closePath(),e.fill(),e.fillStyle=n,e.fillRect(a-8,o,3,8),e.fillRect(a+5,o,3,8),e.fillStyle=s,e.fillRect(a-1,o-6,2,4),e.fillStyle="#ffaa00",e.fillRect(a-1,o+6,2,2)}drawCorvette(e,t,i,n,s){const a=t/2,o=t/2;e.fillStyle=i,e.fillRect(a-4,o-8,8,16),e.beginPath(),e.moveTo(a,o-12),e.lineTo(a+4,o-8),e.lineTo(a-4,o-8),e.closePath(),e.fill(),e.fillStyle=n,e.fillRect(a-8,o-2,4,10),e.fillRect(a+4,o-2,4,10),e.fillStyle=s,e.fillRect(a-2,o-4,4,3),e.fillStyle="#ffaa00",e.fillRect(a-3,o+8,2,2),e.fillRect(a+1,o+8,2,2)}drawDestroyer(e,t,i,n,s){const a=t/2,o=t/2;e.fillStyle=i,e.fillRect(a-6,o-10,12,20),e.fillStyle=n,e.fillRect(a-6,o-10,12,4),e.fillStyle=n,e.fillRect(a-10,o-4,4,8),e.fillRect(a+6,o-4,4,8),e.fillStyle=s,e.fillRect(a-3,o-6,6,6),e.fillStyle="#ffaa00",e.fillRect(a-5,o+10,2,2),e.fillRect(a-1,o+10,2,2),e.fillRect(a+3,o+10,2,2)}generateExplosion(){const e=[];for(let i=0;i<12;i++){const n=document.createElement("canvas");n.width=64,n.height=64;const s=n.getContext("2d"),a=i/12,o=a*30,r=64/2,h=64/2,c=s.createRadialGradient(r,h,0,r,h,o);if(c.addColorStop(0,`rgba(255, 255, 200, ${1-a})`),c.addColorStop(.3,`rgba(255, 150, 0, ${.8-a*.8})`),c.addColorStop(.6,`rgba(255, 50, 0, ${.5-a*.5})`),c.addColorStop(1,"rgba(100, 0, 0, 0)"),s.fillStyle=c,s.fillRect(0,0,64,64),a<.5){const d=(.5-a)*20,p=s.createRadialGradient(r,h,0,r,h,d);p.addColorStop(0,"rgba(255, 255, 255, 1)"),p.addColorStop(1,"rgba(255, 255, 200, 0)"),s.fillStyle=p,s.fillRect(0,0,64,64)}e.push(n)}return e}generateShieldHit(){const e=[];for(let i=0;i<8;i++){const n=document.createElement("canvas");n.width=48,n.height=48;const s=n.getContext("2d"),a=i/8,o=48/2,r=48/2;s.strokeStyle=`rgba(0, 212, 255, ${1-a})`,s.lineWidth=3;const h=15+a*10;s.beginPath();for(let c=0;c<6;c++){const d=Math.PI/3*c,p=o+h*Math.cos(d),u=r+h*Math.sin(d);c===0?s.moveTo(p,u):s.lineTo(p,u)}s.closePath(),s.stroke(),e.push(n)}return e}};window.SpriteGenerator=z;class w{constructor(e,t,i,n,s,a,o){this.x=e,this.y=t,this.vx=i,this.vy=n,this.life=s,this.maxLife=s,this.color=a,this.size=o,this.alpha=1}update(e){this.x+=this.vx*e,this.y+=this.vy*e,this.life-=e,this.alpha=this.life/this.maxLife,this.vy+=.1,this.vx*=.99,this.vy*=.99}draw(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.beginPath(),e.arc(this.x,this.y,this.size,0,Math.PI*2),e.fill(),e.restore()}isDead(){return this.life<=0}}let N=class{constructor(){this.particles=[]}update(e){for(let t=this.particles.length-1;t>=0;t--)this.particles[t].update(e),this.particles[t].isDead()&&this.particles.splice(t,1)}draw(e){this.particles.forEach(t=>t.draw(e))}createExplosion(e,t,i=30,n="#ff6600"){for(let s=0;s<i;s++){const a=Math.random()*Math.PI*2,o=2+Math.random()*4,r=Math.cos(a)*o,h=Math.sin(a)*o,c=.5+Math.random()*.5,d=2+Math.random()*3,p=[n,"#ffaa00","#ff4444","#ffff00"],u=p[Math.floor(Math.random()*p.length)];this.particles.push(new w(e,t,r,h,c,u,d))}}createEngineTrail(e,t,i,n=5){for(let s=0;s<n;s++){const o=-Math.cos(i)*2+(Math.random()-.5)*.3,r=-Math.sin(i)*2+(Math.random()-.5)*.3,h=.3+Math.random()*.2,c=1+Math.random()*2;this.particles.push(new w(e,t,o,r,h,"#ffaa00",c))}}createShieldImpact(e,t,i=15){for(let n=0;n<i;n++){const s=Math.random()*Math.PI*2,a=1+Math.random()*2,o=Math.cos(s)*a,r=Math.sin(s)*a,h=.3+Math.random()*.3,c=1+Math.random()*2;this.particles.push(new w(e,t,o,r,h,"#00d4ff",c))}}createDebris(e,t,i=20){for(let n=0;n<i;n++){const s=Math.random()*Math.PI*2,a=1+Math.random()*3,o=Math.cos(s)*a,r=Math.sin(s)*a,h=1+Math.random(),c=1+Math.random()*2;this.particles.push(new w(e,t,o,r,h,"#666666",c))}}clear(){this.particles=[]}},G=class{constructor(e,t,i,n=30){this.x=e,this.y=t,this.frames=i,this.currentFrame=0,this.frameTime=1/n,this.elapsed=0,this.active=!0}update(e){this.elapsed+=e,this.elapsed>=this.frameTime&&(this.elapsed=0,this.currentFrame++,this.currentFrame>=this.frames.length&&(this.active=!1))}draw(e){if(!this.active||this.currentFrame>=this.frames.length)return;const t=this.frames[this.currentFrame];e.drawImage(t,this.x-t.width/2,this.y-t.height/2)}};window.Particle=w;window.ParticleSystem=N;window.AnimatedEffect=G;let F=class{constructor(e,t){this.canvas=e,this.ctx=e.getContext("2d"),this.grid=t,this.hexSize=30,this.layout=new HexLayout(this.hexSize,{x:e.width/2,y:e.height/2}),this.camera={x:0,y:0,zoom:1},this.projectiles=[],this.beams=[],this.effects=[],this.particleSystem=new ParticleSystem,this.spriteGenerator=new SpriteGenerator,this.explosionFrames=this.spriteGenerator.generateExplosion(),this.shieldHitFrames=this.spriteGenerator.generateShieldHit(),this.selectedShip=null,this.hoveredHex=null,this.reachableHexes=[],this.selectedWeapon=null,this.driftPaths=new Map,this.resize()}resize(){this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.layout.origin={x:this.canvas.width/2,y:this.canvas.height/2}}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}render(e){if(this.clear(),this.grid.getAllShips().forEach(t=>{t.updateAnimation(e)}),this.drawBackground(),this.drawGrid(),this.selectedShip&&this.reachableHexes.length>0&&this.drawReachableHexes(),this.drawObstacles(e),this.drawShips(),this.drawDriftPaths(),this.selectedShip&&this.selectedWeapon&&(this.drawWeaponRange(this.selectedShip,this.selectedWeapon),this.highlightValidTargets()),this.hoveredHex){const t=this.grid.getShipAt(this.hoveredHex);if(t&&this.selectedWeapon&&t.team==="enemy"){const n=this.canTargetShip(this.selectedShip,t,this.selectedWeapon)?"rgba(68, 255, 68, 0.3)":"rgba(255, 68, 68, 0.3)";this.drawHexHighlight(this.hoveredHex,n)}else this.drawHexHighlight(this.hoveredHex,"rgba(255, 255, 255, 0.2)")}this.updateAndDrawProjectiles(e),this.updateAndDrawBeams(e),this.updateAndDrawEffects(e),this.particleSystem.update(e),this.particleSystem.draw(this.ctx),this.selectedShip&&this.selectedWeapon&&this.drawWeaponRange(this.selectedShip,this.selectedWeapon)}drawBackground(){this.ctx.fillStyle="#0a0e1a",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="rgba(255, 255, 255, 0.3)";for(let e=0;e<100;e++){const t=e*73%this.canvas.width,i=e*137%this.canvas.height,n=e%3+1;this.ctx.fillRect(t,i,n,n)}}drawGrid(){const e=Math.floor(this.grid.width/2),t=Math.floor(this.grid.height/2);this.ctx.strokeStyle="#1a2a3a",this.ctx.lineWidth=1;for(let i=-e;i<=e;i++)for(let n=-t;n<=t;n++){const s=new HexCoord(i,n);this.grid.isValidHex(s)&&this.drawHex(s,null,"#1a2a3a")}}drawHex(e,t=null,i=null){const n=this.layout.hexCorners(e);this.ctx.beginPath(),n.forEach((s,a)=>{a===0?this.ctx.moveTo(s.x,s.y):this.ctx.lineTo(s.x,s.y)}),this.ctx.closePath(),t&&(this.ctx.fillStyle=t,this.ctx.fill()),i&&(this.ctx.strokeStyle=i,this.ctx.stroke())}drawHexHighlight(e,t){this.drawHex(e,t,null)}drawReachableHexes(){this.reachableHexes.forEach(({hex:e,cost:t})=>{const i=1-t/10;this.drawHex(e,`rgba(74, 158, 255, ${.2*i})`,null)})}drawObstacles(e){this.obstacleRotations||(this.obstacleRotations=new Map),(!e||e<=0||e>1)&&(e=.016),this.ctx.fillStyle="#3a3a3a",this.grid.obstacles.forEach(t=>{const i=HexCoord.fromString(t),n=this.layout.hexToPixel(i),s=i.q*1e3+i.r;this.obstacleRotations.has(t)||this.obstacleRotations.set(t,0);const o=.05+s*7919%1e3/1e3*.15;let r=this.obstacleRotations.get(t);r+=o*e,this.obstacleRotations.set(t,r),this.ctx.save(),this.ctx.translate(n.x,n.y),this.ctx.rotate(r),this.ctx.beginPath();for(let h=0;h<8;h++){const c=Math.PI*2*h/8,p=15+((s+h)*9301+49297)%233280/233280*10,u=Math.cos(c)*p,m=Math.sin(c)*p;h===0?this.ctx.moveTo(u,m):this.ctx.lineTo(u,m)}this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()})}drawShips(){this.grid.getAllShips().forEach(t=>{if(t.isDestroyed)return;const i=t.getRenderPosition(),n=this.layout.hexToPixel(i),s=this.hoveredHex&&t.position.equals(this.hoveredHex),a=this.spriteGenerator.generateShipSprite(t.shipClass,t.team);s&&t.team==="enemy"&&(this.ctx.save(),this.ctx.strokeStyle="rgba(255, 255, 100, 0.6)",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(n.x,n.y,28,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()),t.shield>0&&(this.ctx.save(),this.ctx.strokeStyle="rgba(0, 212, 255, 0.5)",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(n.x,n.y,20,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()),this.ctx.drawImage(a,n.x-a.width/2,n.y-a.height/2),this.selectedShip&&this.selectedShip.id===t.id&&(this.ctx.strokeStyle="#ffaa00",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(n.x,n.y,25,0,Math.PI*2),this.ctx.stroke()),this.drawHealthBar(t,n),s&&t.team==="enemy"&&this.drawEnemyInfo(t,n),(t.velocity.q!==0||t.velocity.r!==0)&&this.drawVelocityVector(t,n)})}drawEnemyInfo(e,t){const o=t.x+40,r=t.y-120/2;this.ctx.save(),this.ctx.fillStyle="rgba(20, 20, 40, 0.95)",this.ctx.strokeStyle="#ffff66",this.ctx.lineWidth=2,this.ctx.fillRect(o,r,200,120),this.ctx.strokeRect(o,r,200,120),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px monospace",this.ctx.fillText(e.name,o+10,r+10+14),this.ctx.font="12px monospace",this.ctx.fillStyle="#ff6666",this.ctx.fillText(`Hull: ${Math.floor(e.hull)}/${e.maxHull}`,o+10,r+10+14+18),this.ctx.fillStyle="#66ccff",this.ctx.fillText(`Shield: ${Math.floor(e.shield)}/${e.maxShield}`,o+10,r+10+14+18*2),this.ctx.fillStyle="#cccccc",this.ctx.fillText(`Armor: ${e.armor}`,o+10,r+10+14+18*3),this.ctx.fillStyle="#ffff66",this.ctx.fillText(`AP: ${e.actionPoints}/${e.maxActionPoints}`,o+10,r+10+14+18*4),this.ctx.fillStyle="#66ff66",this.ctx.fillText(`Energy: ${Math.floor(e.energy)}/${e.maxEnergy}`,o+10,r+10+14+18*5),this.ctx.restore()}drawHealthBar(e,t){const s=t.x-15,a=t.y+25;this.ctx.fillStyle="#0a0e1a",this.ctx.fillRect(s,a,30,4);const o=e.hull/e.maxHull;this.ctx.fillStyle="#4a9eff",this.ctx.fillRect(s,a,30*o,4),this.ctx.strokeStyle="#2a3f5f",this.ctx.strokeRect(s,a,30,4)}drawVelocityVector(e,t){const n=e.velocity.q*20,s=e.velocity.r*20;this.ctx.save(),this.ctx.strokeStyle="rgba(255, 170, 0, 0.6)",this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(t.x+n,t.y+s),this.ctx.stroke();const a=Math.atan2(s,n),o=8;this.ctx.setLineDash([]),this.ctx.beginPath(),this.ctx.moveTo(t.x+n,t.y+s),this.ctx.lineTo(t.x+n-o*Math.cos(a-Math.PI/6),t.y+s-o*Math.sin(a-Math.PI/6)),this.ctx.moveTo(t.x+n,t.y+s),this.ctx.lineTo(t.x+n-o*Math.cos(a+Math.PI/6),t.y+s-o*Math.sin(a+Math.PI/6)),this.ctx.stroke(),this.ctx.restore()}drawDriftPaths(){this.driftPaths.forEach((e,t)=>{e.length!==0&&(this.ctx.save(),this.ctx.strokeStyle="rgba(255, 170, 0, 0.3)",this.ctx.lineWidth=2,this.ctx.setLineDash([3,3]),this.ctx.beginPath(),e.forEach((i,n)=>{const s=this.layout.hexToPixel(i);n===0?this.ctx.moveTo(s.x,s.y):this.ctx.lineTo(s.x,s.y)}),this.ctx.stroke(),this.ctx.restore())})}drawWeaponRange(e,t){const i=this.layout.hexToPixel(e.position);this.ctx.save(),this.ctx.strokeStyle="rgba(255, 68, 68, 0.5)",this.ctx.lineWidth=2,this.ctx.setLineDash([8,4]),this.ctx.beginPath(),this.ctx.arc(i.x,i.y,t.maxRange*this.hexSize*1.5,0,Math.PI*2),this.ctx.stroke();const n=Math.floor(this.grid.width/2),s=Math.floor(this.grid.height/2);for(let a=-n;a<=n;a++)for(let o=-s;o<=s;o++){const r=new HexCoord(a,o);if(!this.grid.isValidHex(r))continue;const h=e.position.distance(r);if(h<=t.maxRange&&h>=t.minRange){const c=this.grid.getShipAt(r);c&&c.team!==e.team?this.drawHex(r,"rgba(68, 255, 68, 0.15)",null):c||this.drawHex(r,"rgba(255, 68, 68, 0.05)",null)}else h<t.minRange&&t.minRange>0&&this.drawHex(r,"rgba(255, 170, 0, 0.1)",null)}t.minRange>0&&(this.ctx.strokeStyle="rgba(255, 170, 0, 0.5)",this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.arc(i.x,i.y,t.minRange*this.hexSize*1.5,0,Math.PI*2),this.ctx.stroke()),this.ctx.restore()}updateAndDrawProjectiles(e){for(let t=this.projectiles.length-1;t>=0;t--){const i=this.projectiles[t];i.update(e),i.draw(this.ctx),i.active||this.projectiles.splice(t,1)}}updateAndDrawBeams(e){for(let t=this.beams.length-1;t>=0;t--){const i=this.beams[t];i.update(e),i.draw(this.ctx),i.active||this.beams.splice(t,1)}}updateAndDrawEffects(e){for(let t=this.effects.length-1;t>=0;t--){const i=this.effects[t];i.update(e),i.draw(this.ctx),i.active||this.effects.splice(t,1)}}addProjectile(e,t,i){this.projectiles.push(new Projectile(e,t,i,300))}addBeam(e,t,i){this.beams.push(new Beam(e,t,i,.3))}addExplosion(e){const t=this.layout.hexToPixel(e);this.effects.push(new AnimatedEffect(t.x,t.y,this.explosionFrames,30)),this.particleSystem.createExplosion(t.x,t.y,40)}addShieldHit(e){const t=this.layout.hexToPixel(e);this.effects.push(new AnimatedEffect(t.x,t.y,this.shieldHitFrames,30)),this.particleSystem.createShieldImpact(t.x,t.y,20)}pixelToHex(e,t){return this.layout.pixelToHex({x:e,y:t})}setSelectedShip(e,t=!0){this.selectedShip=e,e&&t?this.reachableHexes=this.grid.getReachableHexes(e):this.reachableHexes=[]}setHoveredHex(e){this.hoveredHex=e}setSelectedWeapon(e){this.selectedWeapon=e}canTargetShip(e,t,i){if(!e||!t||!i)return!1;const n=e.position.distance(t.position);return!(n>i.maxRange||n<i.minRange||!e.canFireWeapon(i,t)||!WeaponSystem.hasLineOfSight(e,t,this.grid))}highlightValidTargets(){if(!this.selectedShip||!this.selectedWeapon)return;this.grid.getShipsByTeam(this.selectedShip.team==="player"?"enemy":"player").forEach(t=>{if(this.canTargetShip(this.selectedShip,t,this.selectedWeapon)){const n=this.layout.hexToPixel(t.position);this.ctx.save(),this.ctx.strokeStyle="rgba(68, 255, 68, 0.6)",this.ctx.lineWidth=3,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.arc(n.x,n.y,28,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()}})}};window.Renderer=F;let V=class{constructor(){this.context=null,this.masterGain=null,this.enabled=!0,this.volume=.3,this.initialized=!1}init(){if(!this.initialized)try{this.context=new(window.AudioContext||window.webkitAudioContext),this.masterGain=this.context.createGain(),this.masterGain.gain.value=this.volume,this.masterGain.connect(this.context.destination),this.initialized=!0,console.log("Sound system initialized")}catch(e){console.warn("Web Audio API not supported:",e),this.enabled=!1}}setVolume(e){this.volume=Math.max(0,Math.min(1,e)),this.masterGain&&(this.masterGain.gain.value=this.volume)}setEnabled(e){this.enabled=e}createOscillator(e,t){const i=this.context.createOscillator();return i.type=e,i.frequency.value=t,i}playClick(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("square",800),t=this.context.createGain();t.gain.value=.1,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.05),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.05)}playMenuTransition(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sine",600),t=this.context.createGain();e.frequency.exponentialRampToValueAtTime(300,this.context.currentTime+.2),t.gain.value=.15,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.2),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.2)}playLaser(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sawtooth",440),t=this.context.createGain();e.frequency.exponentialRampToValueAtTime(110,this.context.currentTime+.1),t.gain.value=.2,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.1),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.1)}playKinetic(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("square",100),t=this.context.createGain();t.gain.value=.25,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.08),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.08)}playMissile(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sawtooth",200),t=this.createOscillator("sine",50),i=this.context.createGain();e.frequency.linearRampToValueAtTime(400,this.context.currentTime+.3),i.gain.value=.15,i.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.3),e.connect(i),t.connect(i),i.connect(this.masterGain),e.start(),t.start(),e.stop(this.context.currentTime+.3),t.stop(this.context.currentTime+.3)}playShieldHit(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sine",600),t=this.context.createGain();e.frequency.exponentialRampToValueAtTime(200,this.context.currentTime+.15),t.gain.value=.2,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.15),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.15)}playHullHit(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("square",150),t=this.context.createGain();t.gain.value=.2,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.12),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.12)}playExplosion(){if(!this.enabled||!this.initialized)return;const e=this.context.sampleRate*.5,t=this.context.createBuffer(1,e,this.context.sampleRate),i=t.getChannelData(0);for(let o=0;o<e;o++)i[o]=Math.random()*2-1;const n=this.context.createBufferSource();n.buffer=t;const s=this.context.createBiquadFilter();s.type="lowpass",s.frequency.value=1e3,s.frequency.exponentialRampToValueAtTime(50,this.context.currentTime+.5);const a=this.context.createGain();a.gain.value=.3,a.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.5),n.connect(s),s.connect(a),a.connect(this.masterGain),n.start(),n.stop(this.context.currentTime+.5)}playEngineThrust(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sawtooth",80),t=this.context.createGain();e.frequency.linearRampToValueAtTime(120,this.context.currentTime+.2),t.gain.value=.1,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.2),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.2)}playTurnStart(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sine",400),t=this.context.createGain();e.frequency.linearRampToValueAtTime(500,this.context.currentTime+.1),t.gain.value=.12,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.1),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.1)}playVictory(){if(!this.enabled||!this.initialized)return;[440,554,659,880].forEach((t,i)=>{const n=this.createOscillator("sine",t),s=this.context.createGain(),a=this.context.currentTime+i*.15;s.gain.value=.2,s.gain.exponentialRampToValueAtTime(.001,a+.3),n.connect(s),s.connect(this.masterGain),n.start(a),n.stop(a+.3)})}playDefeat(){if(!this.enabled||!this.initialized)return;[440,370,330,220].forEach((t,i)=>{const n=this.createOscillator("sine",t),s=this.context.createGain(),a=this.context.currentTime+i*.2;s.gain.value=.15,s.gain.exponentialRampToValueAtTime(.001,a+.4),n.connect(s),s.connect(this.masterGain),n.start(a),n.stop(a+.4)})}};window.SoundSystem=V;let U=class{constructor(e){this.game=e,this.canvas=e.renderer.canvas,this.mousePos={x:0,y:0},this.isMouseDown=!1,this.setupEventListeners()}setupEventListeners(){this.canvas.addEventListener("mousemove",e=>this.onMouseMove(e)),this.canvas.addEventListener("mousedown",e=>this.onMouseDown(e)),this.canvas.addEventListener("mouseup",e=>this.onMouseUp(e)),this.canvas.addEventListener("click",e=>this.onClick(e)),document.addEventListener("keydown",e=>this.onKeyDown(e)),window.addEventListener("resize",()=>this.onResize())}onMouseMove(e){const t=this.canvas.getBoundingClientRect();this.mousePos.x=e.clientX-t.left,this.mousePos.y=e.clientY-t.top;const i=this.game.renderer.pixelToHex(this.mousePos.x,this.mousePos.y);this.game.renderer.setHoveredHex(i)}onMouseDown(e){this.isMouseDown=!0}onMouseUp(e){this.isMouseDown=!1}onClick(e){const t=this.canvas.getBoundingClientRect(),i=e.clientX-t.left,n=e.clientY-t.top,s=this.game.renderer.pixelToHex(i,n),a=this.game.grid.getShipAt(s);a?this.handleShipClick(a):this.handleHexClick(s)}handleShipClick(e){if(e.team==="player"&&!e.isDestroyed)this.game.selectShip(e);else if(e.team==="enemy"&&this.game.selectedShip&&this.game.selectedWeapon){const t=this.game.turnManager.getCurrentShip();t&&t.id===this.game.selectedShip.id&&this.game.attackTarget(e)}}handleHexClick(e){if(this.game.selectedShip){const t=this.game.turnManager.getCurrentShip();t&&t.id===this.game.selectedShip.id&&this.game.renderer.reachableHexes.find(n=>n.hex.equals(e))&&this.game.moveShipTo(e)}}onKeyDown(e){switch(e.key){case"Escape":this.game.deselectShip();break;case" ":case"Enter":this.game.turnManager.isPlayerTurn()&&this.game.endTurn();break;case"1":case"2":case"3":case"4":const t=parseInt(e.key)-1;this.game.selectedShip&&this.game.selectedShip.weapons[t]&&this.game.hud.selectWeapon(t);break}}onResize(){this.game.renderer.resize()}};window.InputHandler=U;let _=class{constructor(e){this.game=e,this.turnNumber=document.getElementById("turn-number"),this.shipName=document.getElementById("ship-name"),this.hullBar=document.getElementById("hull-bar"),this.hullText=document.getElementById("hull-text"),this.shieldBar=document.getElementById("shield-bar"),this.shieldText=document.getElementById("shield-text"),this.energyBar=document.getElementById("energy-bar"),this.energyText=document.getElementById("energy-text"),this.apText=document.getElementById("ap-text"),this.weaponsSlider=document.getElementById("weapons-slider"),this.shieldsSlider=document.getElementById("shields-slider"),this.enginesSlider=document.getElementById("engines-slider"),this.weaponsAlloc=document.getElementById("weapons-alloc"),this.shieldsAlloc=document.getElementById("shields-alloc"),this.enginesAlloc=document.getElementById("engines-alloc"),this.weaponButtons=document.getElementById("weapon-buttons"),this.queueList=document.getElementById("queue-list"),this.lastWeaponUpdateShipId=null,this.setupEventListeners()}setupEventListeners(){this.weaponsSlider.addEventListener("input",()=>this.updateEnergyAllocation()),this.shieldsSlider.addEventListener("input",()=>this.updateEnergyAllocation()),this.enginesSlider.addEventListener("input",()=>this.updateEnergyAllocation())}update(){this.updateTurnInfo(),this.updateShipInfo(),this.updateInitiativeQueue()}updateTurnInfo(){this.turnNumber.textContent=this.game.turnManager.turnNumber}updateShipInfo(){const e=this.game.selectedShip;if(!e){this.shipName.textContent="Select a ship";return}const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.shipName.textContent=e.name+(i?" [ACTIVE]":"");const n=e.hull/e.maxHull*100;this.hullBar.style.width=`${n}%`,this.hullText.textContent=`${Math.floor(e.hull)}/${e.maxHull}`;const s=e.shield/e.maxShield*100;this.shieldBar.style.width=`${s}%`,this.shieldText.textContent=`${Math.floor(e.shield)}/${e.maxShield}`;const a=e.energy/e.maxEnergy*100;this.energyBar.style.width=`${a}%`,this.energyText.textContent=`${Math.floor(e.energy)}/${e.maxEnergy}`,this.apText.textContent=`${e.actionPoints}/${e.maxActionPoints}`,this.updateEnergySliders(e);const o=`${e.id}_${t==null?void 0:t.id}`;this.lastWeaponUpdateShipId!==o?(this.lastWeaponUpdateShipId=o,this.updateWeaponButtons(e)):this.updateWeaponButtonStates(e)}updateEnergySliders(e){this.weaponsSlider.value=e.energyAllocation.weapons,this.shieldsSlider.value=e.energyAllocation.shields,this.enginesSlider.value=e.energyAllocation.engines,this.weaponsAlloc.textContent=`${e.energyAllocation.weapons}`,this.shieldsAlloc.textContent=`${e.energyAllocation.shields}`,this.enginesAlloc.textContent=`${e.energyAllocation.engines}`;const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id,n=e.actionPoints>=1,s=i&&n;this.weaponsSlider.disabled=!s,this.shieldsSlider.disabled=!s,this.enginesSlider.disabled=!s}updateEnergyAllocation(){const e=this.game.selectedShip;if(!e||e.team!=="player")return;const t=parseInt(this.weaponsSlider.value),i=parseInt(this.shieldsSlider.value),n=parseInt(this.enginesSlider.value),s=t+i+n;if(s>0){const a=e.maxAllocationPoints/s,o=Math.round(t*a),r=Math.round(i*a),h=e.maxAllocationPoints-o-r;if(!e.setEnergyAllocation(o,r,h)){this.showMessage("Need 1 AP to change energy allocation!","error",2e3),this.updateEnergySliders(e);return}this.game.combatLog&&this.game.combatLog.logEnergyAllocation(e.name)}this.weaponsAlloc.textContent=e.energyAllocation.weapons,this.shieldsAlloc.textContent=e.energyAllocation.shields,this.enginesAlloc.textContent=e.energyAllocation.engines,this.updateShipInfo()}updateWeaponButtonStates(e){const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.weaponButtons.querySelectorAll(".weapon-btn").forEach((s,a)=>{const o=e.weapons[a];if(!o)return;let r=`${o.name}
`;r+=`⚡${o.energyCost}E  ⏱${o.apCost}AP  📏${o.minRange}-${o.maxRange}`,o.cooldownRemaining>0&&(r+=`  ❄️${o.cooldownRemaining}`),s.textContent=r;const h=e.energy>=o.energyCost&&e.actionPoints>=o.apCost&&o.cooldownRemaining===0;s.classList.toggle("disabled",!h||!i),s.disabled=!i,s.classList.toggle("active",this.game.selectedWeapon===o)})}updateWeaponButtons(e){this.weaponButtons.innerHTML="";const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;e.weapons.forEach((n,s)=>{const a=document.createElement("button");a.className="weapon-btn";let o=`${n.name}
`;o+=`⚡${n.energyCost}E  ⏱${n.apCost}AP  📏${n.minRange}-${n.maxRange}`,n.cooldownRemaining>0&&(o+=`  ❄️${n.cooldownRemaining}`),a.textContent=o,e.energy>=n.energyCost&&e.actionPoints>=n.apCost&&n.cooldownRemaining===0||a.classList.add("disabled"),i||(a.disabled=!0,a.classList.add("disabled")),a.addEventListener("click",h=>{this.selectWeapon(s)}),this.game.selectedWeapon===n&&a.classList.add("active"),this.weaponButtons.appendChild(a)})}selectWeapon(e){const t=this.game.selectedShip;if(!t)return;const i=this.game.turnManager.getCurrentShip();if(!(i&&i.id===t.id)){this.showMessage("It's not this ship's turn!","error",2e3);return}const s=t.weapons[e],a=t.energy>=s.energyCost,o=t.actionPoints>=s.apCost,r=s.cooldownRemaining===0;if(!a||!o||!r){a?o?r||this.showMessage("Weapon on cooldown!","error",2e3):this.showMessage("Not enough AP!","error",2e3):this.showMessage("Not enough energy!","error",2e3);return}const h=this.weaponButtons.querySelectorAll(".weapon-btn");h.forEach(c=>c.classList.remove("active")),this.game.selectedWeapon===s?(this.game.selectedWeapon=null,this.game.renderer.setSelectedWeapon(null),this.showMessage("Weapon deselected","info",1500)):(h[e].classList.add("active"),this.game.selectedWeapon=s,this.game.renderer.setSelectedWeapon(s),this.showMessage(`${s.name} selected - Click enemy to attack`,"success",2e3))}updateInitiativeQueue(){this.queueList.innerHTML="",this.game.turnManager.getInitiativeQueue().forEach(({ship:t,isActive:i})=>{const n=document.createElement("div");n.className="queue-item",i&&n.classList.add("active"),t.team==="enemy"&&n.classList.add("enemy"),n.textContent=`${t.name} (Init: ${t.initiative})`,this.queueList.appendChild(n)})}showMessage(e,t="info",i=3e3){const n=document.getElementById("message-container"),s=document.createElement("div");s.className=`game-message ${t}`,s.textContent=e,n.appendChild(s),setTimeout(()=>{s.remove()},i)}showDamage(e,t){this.showMessage(`${e.name} took ${Math.floor(t)} damage!`,"warning",2e3)}};window.HUD=_;let Q=class{constructor(){this.overlay=document.getElementById("modal-overlay"),this.title=document.getElementById("modal-title"),this.message=document.getElementById("modal-message"),this.confirmBtn=document.getElementById("modal-confirm"),this.cancelBtn=document.getElementById("modal-cancel"),this.resolveCallback=null,this.setupEventListeners()}setupEventListeners(){this.confirmBtn.addEventListener("click",()=>{this.close(!0)}),this.cancelBtn.addEventListener("click",()=>{this.close(!1)}),this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.close(!1)}),document.addEventListener("keydown",e=>{e.key==="Escape"&&this.overlay.style.display!=="none"&&this.close(!1)})}show(e,t,i={}){return new Promise(n=>{this.resolveCallback=n,this.title.textContent=e,this.message.textContent=t,i.showCancel?(this.cancelBtn.style.display="block",this.confirmBtn.textContent=i.confirmText||"OK",this.cancelBtn.textContent=i.cancelText||"Cancel"):(this.cancelBtn.style.display="none",this.confirmBtn.textContent="OK"),this.overlay.style.display="flex"})}close(e){this.overlay.style.display="none",this.resolveCallback&&(this.resolveCallback(e),this.resolveCallback=null)}alert(e,t){return this.show(e,t,{showCancel:!1})}confirm(e,t){return this.show(e,t,{showCancel:!0,confirmText:"Confirm",cancelText:"Cancel"})}};window.ModalManager=Q;let j=class{constructor(){this.container=document.getElementById("combat-log"),this.entriesContainer=document.getElementById("combat-log-entries"),this.toggleBtn=document.getElementById("combat-log-toggle"),this.clearBtn=document.getElementById("combat-log-clear"),this.isCollapsed=!0,this.setupEventListeners()}setupEventListeners(){this.toggleBtn.addEventListener("click",()=>{this.toggle()}),this.clearBtn.addEventListener("click",()=>{this.clear()})}toggle(){this.isCollapsed=!this.isCollapsed,this.isCollapsed?(this.container.classList.add("collapsed"),this.toggleBtn.textContent="▼"):(this.container.classList.remove("collapsed"),this.toggleBtn.textContent="▲")}addEntry(e,t="info"){const i=document.createElement("div");i.className=`log-entry ${t}`;const n=new Date().toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"});i.innerHTML=`
            <span class="log-timestamp">${n}</span>
            <span class="log-message">${e}</span>
        `,this.entriesContainer.appendChild(i),this.entriesContainer.scrollTop=this.entriesContainer.scrollHeight;const s=this.entriesContainer.querySelectorAll(".log-entry");s.length>100&&s[0].remove()}clear(){this.entriesContainer.innerHTML="",this.addEntry("Combat log cleared","info")}logInfo(e){this.addEntry(e,"info")}logSuccess(e){this.addEntry(e,"success")}logWarning(e){this.addEntry(e,"warning")}logError(e){this.addEntry(e,"error")}logEnemy(e){this.addEntry(e,"enemy")}logTurnStart(e,t){this.addEntry(`Turn ${t}: ${e}'s turn begins`,"info")}logMovement(e,t){this.addEntry(`${e} moved ${t} hexes`,"info")}logWeaponFire(e,t,i){this.addEntry(`${e} fires ${t} at ${i}`,"warning")}logDamage(e,t,i){t>0&&i>0?this.addEntry(`${e} took ${Math.floor(t)} shield damage and ${Math.floor(i)} hull damage`,"error"):t>0?this.addEntry(`${e}'s shields absorbed ${Math.floor(t)} damage`,"warning"):i>0&&this.addEntry(`${e} took ${Math.floor(i)} hull damage`,"error")}logDestruction(e){this.addEntry(`💥 ${e} DESTROYED!`,"error")}logEnergyAllocation(e){this.addEntry(`${e} reallocated energy`,"info")}logVictory(){this.addEntry("🎉 VICTORY! All enemy ships destroyed!","success")}logDefeat(){this.addEntry("💀 DEFEAT! All player ships destroyed!","error")}logRoundStart(e){this.addEntry(`═══ Round ${e} ═══`,"info")}};window.CombatLog=j;let Y=class{constructor(e,t,i=null,n=null){this.campaign=e,this.progression=t,this.sound=i,this.modal=n,this.currentScreen="main-menu",this.spriteGenerator=new SpriteGenerator,this.upgradeManager=new UpgradeManager,this.selectedUpgrades=new Map,this.setupEventListeners(),this.updateMainMenu()}setupEventListeners(){document.getElementById("new-campaign-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.startNewCampaign()}),document.getElementById("continue-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.continueCampaign()}),document.getElementById("launch-battle-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.launchBattle()}),document.getElementById("back-to-menu-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.showScreen("main-menu")}),document.getElementById("continue-campaign-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.continueFromBattle()}),document.getElementById("abandon-campaign-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.abandonCampaign()}),document.getElementById("finish-upgrades-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.finishUpgrades()})}showScreen(e){this.sound&&this.sound.playMenuTransition(),document.querySelectorAll(".screen").forEach(t=>{t.classList.remove("active")}),document.getElementById(e).classList.add("active"),this.currentScreen=e}updateMainMenu(){const e=this.campaign.loadCampaign();document.getElementById("continue-btn").disabled=!e}startNewCampaign(){this.campaign.startNewCampaign(),this.showShipyard()}continueCampaign(){this.campaign.loadCampaign()&&this.showShipyard()}showShipyard(){this.showScreen("shipyard-screen"),this.updateShipyard()}updateShipyard(){document.getElementById("credits-display").textContent=this.progression.credits,document.getElementById("battle-number").textContent=this.campaign.battleNumber,this.renderAvailableShips()}renderAvailableShips(){const e=document.getElementById("ship-selection");e.innerHTML="";const t=this.progression.ownedShips;if(t&&t.length>0){const s=document.createElement("h3");s.textContent="⚔️ Your Fleet",s.style.gridColumn="1 / -1",e.appendChild(s),t.forEach((a,o)=>{const r=SHIP_PRESETS[a.shipClass];if(!r)return;const h=new Ship({...r,name:`${a.shipClass.charAt(0).toUpperCase()+a.shipClass.slice(1)} ${o+1}`,position:new HexCoord(0,0),team:"player",hull:a.hull,maxHull:a.maxHull,upgrades:a.upgrades||[]});a.upgrades&&a.upgrades.length>0&&a.upgrades.forEach(d=>{this.upgradeManager.applyUpgrade(h,d)});const c=this.createOwnedShipCard(h,o);e.appendChild(c)})}const i=document.createElement("h3");i.textContent="🛒 Ship Shop",i.style.gridColumn="1 / -1",i.style.marginTop=t&&t.length>0?"40px":"0",e.appendChild(i);const n=this.progression.unlockedShips;if(!t||t.length===0){const s=document.createElement("div");s.style.gridColumn="1 / -1",s.style.padding="40px",s.style.textAlign="center",s.style.color="#6ab9ff",s.style.fontSize="18px",s.style.background="#151923",s.style.borderRadius="10px",s.style.border="2px dashed #2a3f5f",s.style.marginBottom="30px",s.innerHTML="💫 <strong>Welcome, Commander!</strong><br><br>Purchase your first ship below to begin your campaign.",e.appendChild(s)}n.forEach(s=>{const a=SHIP_PRESETS[s];if(!a)return;const o=this.createShopCard(s,a);e.appendChild(o)})}createOwnedShipCard(e,t){const i=this.createShipCard(e,!1);if(e.hull<e.maxHull){const n=Math.ceil((e.maxHull-e.hull)*.5),s=document.createElement("button");s.className="action-btn",s.style.width="100%",s.style.marginTop="10px",s.textContent=`Repair (${n}₡)`,s.addEventListener("click",a=>{a.stopPropagation(),this.progression.repairShip(t,e.maxHull-e.hull)?(this.sound&&this.sound.playClick(),this.updateShipyard()):this.modal&&this.modal.alert("Insufficient Credits","You don't have enough credits to repair this ship.")}),i.appendChild(s)}else{const n=document.createElement("div");n.style.marginTop="10px",n.style.color="#44ff44",n.style.fontWeight="bold",n.textContent="✓ Ready for Battle",i.appendChild(n)}return i}createShopCard(e,t){const i=new Ship({...t,name:`New ${e.charAt(0).toUpperCase()+e.slice(1)}`,position:new HexCoord(0,0),team:"player"}),n=this.createShipCard(i,!1);n.style.opacity="0.8";const s=document.createElement("button");return s.className="action-btn",s.style.width="100%",s.style.marginTop="10px",s.style.background="#2a5f3f",s.style.borderColor="#44ff44",s.textContent=`Buy (${t.creditCost}₡)`,s.addEventListener("click",a=>{a.stopPropagation(),this.progression.buyShip(e)?(this.sound&&this.sound.playClick(),this.updateShipyard()):this.modal&&this.modal.alert("Insufficient Credits",`You need ${t.creditCost}₡ to purchase this ship.`)}),n.appendChild(s),n}createShipCard(e){const t=document.createElement("div");t.className="ship-card",e.hull<e.maxHull*.5&&t.classList.add("damaged");const i=e.hull/e.maxHull*100,n=this.spriteGenerator.generateShipSprite(e.shipClass,e.team),s=document.createElement("div");s.className="ship-illustration",s.appendChild(n),t.innerHTML=`
            <h4>${e.name}</h4>
            <div class="ship-class">${e.shipClass.toUpperCase()}</div>
        `,t.appendChild(s);const a=document.createElement("div");return a.className="ship-stats",a.innerHTML=`
            <div class="ship-stat ${i<50?"low":""}">
                <span>Hull:</span>
                <span class="value">${Math.floor(e.hull)}/${e.maxHull}</span>
            </div>
            <div class="ship-stat">
                <span>Shield:</span>
                <span class="value">${e.maxShield}</span>
            </div>
            <div class="ship-stat">
                <span>Energy:</span>
                <span class="value">${e.maxEnergy}</span>
            </div>
            <div class="ship-stat">
                <span>AP:</span>
                <span class="value">${e.maxActionPoints}</span>
            </div>
            <div class="ship-stat">
                <span>Weapons:</span>
                <span class="value">${e.weapons.length}</span>
            </div>
        `,t.appendChild(a),t}launchBattle(){const e=this.progression.ownedShips;if(!e||e.length===0){this.modal&&this.modal.alert("No Ships","Purchase at least one ship before launching into battle!");return}const t=e.map((i,n)=>{const s=SHIP_PRESETS[i.shipClass],a=new Ship({...s,id:`player${n+1}`,name:`${i.shipClass.charAt(0).toUpperCase()+i.shipClass.slice(1)} ${n+1}`,position:new HexCoord(-5+n*2,n-1),team:"player",hull:i.hull,maxHull:i.maxHull,upgrades:i.upgrades||[]});return i.upgrades&&i.upgrades.length>0&&i.upgrades.forEach(o=>{this.upgradeManager.applyUpgrade(a,o)}),a});this.campaign.setFleet(t),this.showScreen("battle-screen"),window.app&&window.app.startBattle()}showPostBattle(e){this.showScreen("post-battle-screen");const t=document.getElementById("battle-result");if(t.textContent=e?"VICTORY!":"DEFEAT",t.className=e?"victory":"defeat",e){const i=this.campaign.rewards;document.getElementById("rewards-list").innerHTML=`
                <div class="reward-item">
                    Credits: <span class="value">+${i.credits}</span>
                </div>
                <div class="reward-item">
                    Scrap: <span class="value">+${i.scrap}</span>
                </div>
            `;const s=this.campaign.getFleetStatus().map(a=>`
                <div class="fleet-status-item">
                    <span>${a.name}</span>
                    <span style="color: ${a.hullPercent<50?"#ff4444":"#44ff44"}">${a.hullPercent}% Hull</span>
                </div>
            `).join("");document.getElementById("fleet-status").innerHTML=s}else document.getElementById("rewards-list").innerHTML='<p style="color: #ff4444;">Campaign Failed</p>',document.getElementById("fleet-status").innerHTML=""}continueFromBattle(){const t=this.campaign.getFleet().filter(i=>i.hull>0);t.length>0?this.showUpgradeScreen(t):this.finishUpgrades()}showUpgradeScreen(e){this.showScreen("upgrade-screen"),this.selectedUpgrades.clear();const t=document.getElementById("upgrade-ships");t.innerHTML="",e.forEach((i,n)=>{const s=document.createElement("div");s.className="upgrade-ship-section";const a=document.createElement("div");a.className="upgrade-ship-header",a.innerHTML=`
                <h3>${i.name}</h3>
                <div class="upgrade-ship-stats">
                    ${i.hull}/${i.maxHull} HP | ${i.maxActionPoints} AP | ${i.reactorOutput} Energy/turn
                </div>
            `,s.appendChild(a);const o=this.upgradeManager.getUpgradeChoices(i,3),r=document.createElement("div");r.className="upgrade-choices",o.forEach(h=>{const c=document.createElement("div");c.className="upgrade-card",c.innerHTML=`
                    <div class="upgrade-icon">${h.icon}</div>
                    <div class="upgrade-name">${h.name}</div>
                    <div class="upgrade-description">${h.description}</div>
                `,c.addEventListener("click",()=>{r.querySelectorAll(".upgrade-card").forEach(d=>d.classList.remove("selected")),c.classList.add("selected"),this.selectedUpgrades.set(i.id,h.key),this.sound&&this.sound.playClick()}),r.appendChild(c)}),s.appendChild(r),t.appendChild(s)})}finishUpgrades(){const e=this.campaign.getFleet();this.selectedUpgrades.forEach((i,n)=>{const s=e.find(a=>a.id===n);s&&this.upgradeManager.applyUpgrade(s,i)}),this.campaign.nextBattle()?this.showShipyard():this.modal?this.modal.alert("Campaign Complete!","Congratulations, Commander! You have achieved total victory!").then(()=>{this.campaign.reset(),this.showScreen("main-menu"),this.updateMainMenu()}):(this.campaign.reset(),this.showScreen("main-menu"),this.updateMainMenu())}async abandonCampaign(){this.modal?await this.modal.confirm("Abandon Campaign?","Are you sure you want to abandon this campaign? All progress will be lost.")&&(this.campaign.abandonCampaign(),this.showScreen("main-menu"),this.updateMainMenu()):confirm("Are you sure you want to abandon this campaign?")&&(this.campaign.abandonCampaign(),this.showScreen("main-menu"),this.updateMainMenu())}};window.MenuManager=Y;let J=class{constructor(){this.loadProgress()}loadProgress(){const e=localStorage.getItem("stellar_arena_progress");if(e){const t=JSON.parse(e);this.credits=t.credits||0,this.ownedShips=t.ownedShips||[],this.unlockedShips=t.unlockedShips||["interceptor","corvette","destroyer"],this.unlockedWeapons=t.unlockedWeapons||[],this.campaignsCompleted=t.campaignsCompleted||0,this.totalVictories=t.totalVictories||0}else this.credits=500,this.ownedShips=[],this.unlockedShips=["interceptor","corvette","destroyer"],this.unlockedWeapons=[],this.campaignsCompleted=0,this.totalVictories=0}saveProgress(){const e={credits:this.credits,ownedShips:this.ownedShips,unlockedShips:this.unlockedShips,unlockedWeapons:this.unlockedWeapons,campaignsCompleted:this.campaignsCompleted,totalVictories:this.totalVictories};localStorage.setItem("stellar_arena_progress",JSON.stringify(e))}buyShip(e){const t=SHIP_PRESETS[e];return t&&this.spendCredits(t.creditCost)?(this.ownedShips.push({shipClass:e,hull:t.maxHull,maxHull:t.maxHull,upgrades:[]}),this.saveProgress(),!0):!1}repairShip(e,t){const i=this.ownedShips[e];if(!i)return!1;const n=Math.ceil(t*.5);return this.spendCredits(n)?(i.hull=Math.min(i.hull+t,i.maxHull),this.saveProgress(),!0):!1}addCredits(e){this.credits+=e,this.saveProgress()}spendCredits(e){return this.credits>=e?(this.credits-=e,this.saveProgress(),!0):!1}unlockShip(e){return this.unlockedShips.includes(e)?!1:(this.unlockedShips.push(e),this.saveProgress(),!0)}isShipUnlocked(e){return this.unlockedShips.includes(e)}completeCampaign(){this.campaignsCompleted++,this.saveProgress()}addVictory(){this.totalVictories++,this.saveProgress()}reset(){localStorage.removeItem("stellar_arena_progress"),this.loadProgress()}};window.ProgressionSystem=J;let K=class{constructor(e){this.progression=e,this.reset()}reset(){this.isActive=!1,this.battleNumber=0,this.maxBattles=5,this.selectedFleet=[],this.rewards={credits:0,scrap:0}}startNewCampaign(){this.reset(),this.isActive=!0,this.battleNumber=1}loadCampaign(){const e=localStorage.getItem("stellar_arena_campaign");if(e){const t=JSON.parse(e);return this.isActive=t.isActive,this.battleNumber=t.battleNumber,this.maxBattles=t.maxBattles,this.selectedFleet=t.selectedFleet.map(i=>Ship.fromJSON(i)),this.rewards=t.rewards,!0}return!1}saveCampaign(){if(!this.isActive){localStorage.removeItem("stellar_arena_campaign");return}const e={isActive:this.isActive,battleNumber:this.battleNumber,maxBattles:this.maxBattles,selectedFleet:this.selectedFleet.map(t=>t.toJSON()),rewards:this.rewards};localStorage.setItem("stellar_arena_campaign",JSON.stringify(e))}setFleet(e){this.selectedFleet=e,this.saveCampaign()}getFleet(){return this.selectedFleet}nextBattle(){return this.battleNumber++,this.battleNumber>this.maxBattles?(this.completeCampaign(),!1):(this.saveCampaign(),!0)}battleVictory(e,t){this.selectedFleet=e,e.forEach(s=>{const a=this.progression.ownedShips.findIndex(o=>o.shipClass===s.shipClass);a!==-1&&(this.progression.ownedShips[a].hull=s.hull,this.progression.ownedShips[a].maxHull=s.maxHull,this.progression.ownedShips[a].upgrades=s.upgrades||[])}),this.progression.saveProgress();const i=100*this.battleNumber,n=e.every(s=>s.hull===s.maxHull)?100:0;return this.rewards.credits=i+n,this.rewards.scrap=50*this.battleNumber,this.progression.addCredits(this.rewards.credits),this.progression.addVictory(),this.saveCampaign(),{credits:this.rewards.credits,scrap:this.rewards.scrap,fleetStatus:this.getFleetStatus()}}battleDefeat(){this.isActive=!1,this.saveCampaign()}completeCampaign(){return this.progression.completeCampaign(),this.progression.addCredits(500),this.isActive=!1,this.saveCampaign(),{campaignComplete:!0,bonusCredits:500}}getFleetStatus(){return this.selectedFleet.map(e=>({name:e.name,hull:e.hull,maxHull:e.maxHull,isDestroyed:e.isDestroyed,hullPercent:Math.floor(e.hull/e.maxHull*100)}))}abandonCampaign(){this.isActive=!1,this.saveCampaign()}generateEnemyFleet(e){const t=[],i=e,n=Math.min(2+Math.floor((i-1)/2),3);for(let s=0;s<n;s++){let a;if(i===1)a="interceptor";else if(i===2)a=Math.random()>.5?"interceptor":"corvette";else if(i===3){const c=Math.random();c>.7?a="destroyer":c>.4?a="corvette":a="interceptor"}else i===4?a=Math.random()>.3?"destroyer":"corvette":a="destroyer";const o=SHIP_PRESETS[a],r=new Ship({...o,id:`enemy${s+1}`,name:`${a.charAt(0).toUpperCase()+a.slice(1)} ${String.fromCharCode(65+s)}`,position:new HexCoord(5+s*2,-2+s),team:"enemy"}),h=1+(i-1)*.1;r.maxHull=Math.floor(r.maxHull*h),r.hull=r.maxHull,r.maxShield=Math.floor(r.maxShield*h),r.shield=r.maxShield,i>=3&&r.weapons.forEach(c=>{c.damage=Math.floor(c.damage*(1+(i-3)*.08))}),t.push(r)}return t}};window.CampaignManager=K;const v={reinforcedBarrel:{name:"Reinforced Barrel",description:"+10% weapon damage",icon:"🔫",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.damage=Math.floor(e.damage*1.1))}},efficientCapacitors:{name:"Efficient Capacitors",description:"-20% weapon energy cost",icon:"⚡",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.energyCost=Math.max(1,Math.floor(e.energyCost*.8)))}},rapidReloader:{name:"Rapid Reloader",description:"-1 turn cooldown on all weapons",icon:"⏱️",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.cooldown=Math.max(0,e.cooldown-1))}},extendedRange:{name:"Extended Range",description:"+2 weapon range",icon:"📡",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.maxRange+=2)}},reinforcedHull:{name:"Reinforced Hull",description:"+20% max hull",icon:"🛡️",type:"defense",apply:l=>{const e=Math.floor(l.maxHull*.2);l.maxHull+=e,l.hull=Math.min(l.hull+e,l.maxHull)}},shieldBooster:{name:"Shield Booster",description:"+30% max shields",icon:"💠",type:"defense",apply:l=>{const e=Math.floor(l.maxShield*.3);l.maxShield+=e,l.shield=Math.min(l.shield+e,l.maxShield)}},reactiveArmor:{name:"Reactive Armor",description:"+5 armor",icon:"🔰",type:"defense",apply:l=>{l.armor+=5}},thrusterUpgrade:{name:"Thruster Upgrade",description:"+1 action point",icon:"🚀",type:"mobility",apply:l=>{l.maxActionPoints+=1,l.actionPoints+=1}},improvedReactor:{name:"Improved Reactor",description:"+20 max energy & +10 reactor output",icon:"⚙️",type:"mobility",apply:l=>{l.maxEnergy+=20,l.reactorOutput+=10,l.energy=Math.min(l.energy+20,l.maxEnergy)}},agileManeuvers:{name:"Agile Maneuvers",description:"+1 speed",icon:"💨",type:"mobility",apply:l=>{l.maxSpeed+=1}},advancedSensors:{name:"Advanced Sensors",description:"+15 initiative roll",icon:"👁️",type:"utility",apply:l=>{l.sensors+=15}},emergencyRepair:{name:"Emergency Repair",description:"Restore 30% hull",icon:"🔧",type:"utility",apply:l=>{l.hull=Math.min(l.hull+Math.floor(l.maxHull*.3),l.maxHull)}}};let X=class{constructor(){this.availableUpgrades=Object.keys(v)}getUpgradeChoices(e,t=3){const i=[],n=[...this.availableUpgrades];for(let s=0;s<Math.min(t,n.length);s++){const a=Math.floor(Math.random()*n.length),o=n.splice(a,1)[0];i.push({key:o,...v[o]})}return i}applyUpgrade(e,t){const i=v[t];return i?(i.apply(e),e.upgrades||(e.upgrades=[]),e.upgrades.push(t),!0):!1}getShipUpgrades(e){return e.upgrades?e.upgrades.map(t=>v[t]).filter(t=>t):[]}};window.UpgradeManager=X;window.UPGRADE_POOL=v;let Z=class{constructor(e=null,t=null,i=null){M(this,"gameLoop",e=>{this.deltaTime=(e-this.lastTime)/1e3,this.lastTime=e,this.update(this.deltaTime),this.renderer.render(this.deltaTime),requestAnimationFrame(this.gameLoop)});this.modal=t,this.canvas=document.getElementById("game-canvas"),this.sound=e,this.combatLog=i,this.grid=new Grid(15,15),this.renderer=new Renderer(this.canvas,this.grid),this.turnManager=new TurnManager(this.grid,this.combatLog),this.hud=new HUD(this),this.inputHandler=new InputHandler(this),this.selectedShip=null,this.selectedWeapon=null,this.gameOver=!1,this.lastTime=0,this.deltaTime=0,this.setupGame(),this.setupTutorial(),this.start()}setupTutorial(){const e=document.getElementById("tutorial-overlay"),t=document.getElementById("close-tutorial-btn"),i=document.getElementById("dont-show-tutorial");localStorage.getItem("stellar_arena_tutorial_seen")||(e.style.display="flex"),t.addEventListener("click",()=>{e.style.display="none",i.checked&&localStorage.setItem("stellar_arena_tutorial_seen","true")})}setupGame(e=null,t=null){this.grid.clear(),e||(e=[new Ship({...SHIP_PRESETS.corvette,id:"player1",name:"Aurora",position:new HexCoord(-5,2),team:"player"}),new Ship({...SHIP_PRESETS.interceptor,id:"player2",name:"Falcon",position:new HexCoord(-5,-2),team:"player"})]),t||(t=[new Ship({...SHIP_PRESETS.corvette,id:"enemy1",name:"Raider Alpha",position:new HexCoord(5,0),team:"enemy"}),new Ship({...SHIP_PRESETS.destroyer,id:"enemy2",name:"Destroyer Beta",position:new HexCoord(6,-2),team:"enemy"})]),e.forEach(n=>{this.grid.placeShip(n,n.position)}),t.forEach(n=>{this.grid.placeShip(n,n.position)}),this.grid.generateObstacles(10),this.turnManager.startRound();const i=this.grid.getShipsByTeam("player");i.length>0&&this.selectShip(i[0]),this.setupButtons()}setupButtons(){document.getElementById("end-turn-btn").addEventListener("click",()=>{this.endTurn()}),document.getElementById("reset-btn").addEventListener("click",()=>{this.reset()})}start(){this.lastTime=performance.now(),this.gameLoop()}update(e){this.hud.update();const t=this.turnManager.getCurrentShip();!t||this.gameOver||(t.team==="enemy"?t._aiProcessed||(console.log(`[Game Update] Processing AI for ${t.name}, _aiProcessed: ${t._aiProcessed}`),t._aiProcessed=!0,setTimeout(()=>{console.log(`[Game Update] Timeout fired, calling processEnemyTurn for ${t.name}`),this.turnManager.processEnemyTurn(this.renderer)},500)):t.team==="player"&&(t._autoSelected||(t._autoSelected=!0,this.selectShip(t))))}selectShip(e){if(e.isDestroyed)return;this.selectedShip=e,this.selectedWeapon=null;const t=this.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.renderer.setSelectedShip(e,i),this.renderer.setSelectedWeapon(null),this.hud.update()}deselectShip(){this.selectedShip=null,this.selectedWeapon=null,this.renderer.setSelectedShip(null),this.renderer.setSelectedWeapon(null),this.hud.update()}moveShipTo(e){if(!this.selectedShip||!this.turnManager.isPlayerTurn()||this.selectedShip.team!=="player")return;const t=this.grid.findPath(this.selectedShip.position,e,this.selectedShip);t&&t.length>0&&this.selectedShip.move(t,this.grid)&&(this.combatLog&&this.combatLog.logMovement(this.selectedShip.name,t.length),this.renderer.setSelectedShip(this.selectedShip),this.hud.update())}attackTarget(e){if(!this.selectedShip||!this.selectedWeapon){this.hud.showMessage("No weapon selected!","error");return}const t=this.turnManager.getCurrentShip();if(!t||t.id!==this.selectedShip.id){this.hud.showMessage("It's not this ship's turn!","error");return}if(this.selectedShip.team!=="player")return;const i=this.selectedShip.weapons.indexOf(this.selectedWeapon);if(i===-1){this.hud.showMessage("Weapon not found!","error");return}const n=this.selectedShip.position.distance(e.position);if(n>this.selectedWeapon.maxRange){this.hud.showMessage(`Target out of range! (${n} > ${this.selectedWeapon.maxRange})`,"error");return}if(n<this.selectedWeapon.minRange){this.hud.showMessage(`Target too close! (${n} < ${this.selectedWeapon.minRange})`,"error");return}if(!this.selectedShip.canFireWeapon(this.selectedWeapon,e)){this.selectedShip.energy<this.selectedWeapon.energyCost?this.hud.showMessage("Not enough energy!","error"):this.selectedShip.actionPoints<this.selectedWeapon.apCost?this.hud.showMessage("Not enough AP!","error"):this.selectedWeapon.cooldownRemaining>0&&this.hud.showMessage(`Weapon on cooldown! (${this.selectedWeapon.cooldownRemaining} turns)`,"error");return}if(!WeaponSystem.hasLineOfSight(this.selectedShip,e,this.grid)){this.hud.showMessage("No line of sight!","error");return}const s=this.selectedShip.fireWeapon(i,e);if(s){this.combatLog&&this.combatLog.logWeaponFire(this.selectedShip.name,this.selectedWeapon.name,e.name),this.hud.showMessage(`${this.selectedShip.name} fires ${this.selectedWeapon.name}!`,"success",2e3);const a=WeaponSystem.calculateDamage(s);this.sound&&(this.selectedWeapon.type==="energy"?this.sound.playLaser():this.selectedWeapon.type==="missile"?this.sound.playMissile():this.sound.playKinetic());const o=this.renderer.layout.hexToPixel(this.selectedShip.position),r=this.renderer.layout.hexToPixel(e.position);this.selectedWeapon.type==="energy"?this.renderer.addBeam(o,r,this.selectedWeapon):this.renderer.addProjectile(o,r,this.selectedWeapon),setTimeout(()=>{this.combatLog&&this.combatLog.logDamage(e.name,a.shieldDamage,a.hullDamage),a.shieldDamage>0&&(this.renderer.addShieldHit(e.position),this.hud.showMessage(`Shield absorbed ${Math.floor(a.shieldDamage)} damage`,"warning",2e3),this.sound&&this.sound.playShieldHit()),a.hullDamage>0&&(this.hud.showMessage(`${e.name} took ${Math.floor(a.hullDamage)} hull damage!`,"warning",2e3),this.sound&&this.sound.playHullHit()),a.destroyed&&(this.combatLog&&this.combatLog.logDestruction(e.name),this.renderer.addExplosion(e.position),this.grid.removeShip(e.position),this.hud.showMessage(`${e.name} DESTROYED!`,"success",3e3),this.sound&&this.sound.playExplosion(),this.checkWinCondition())},this.selectedWeapon.type==="energy"?100:500),this.selectedShip.weapons.indexOf(this.selectedWeapon)!==-1?this.selectedShip.canFireWeapon(this.selectedWeapon,e)||(this.selectedWeapon=null,this.renderer.setSelectedWeapon(null)):(this.selectedWeapon=null,this.renderer.setSelectedWeapon(null)),this.hud.update()}}endTurn(){this.turnManager.isPlayerTurn()&&(this.deselectShip(),this.turnManager.endCurrentTurn())}checkWinCondition(){const e=this.grid.getShipsByTeam("player"),t=this.grid.getShipsByTeam("enemy");e.length===0?(this.gameOver=!0,this.combatLog&&this.combatLog.logDefeat(),window.app?window.app.onBattleEnd(!1,e,t):this.modal&&this.modal.alert("Defeat","All your ships have been destroyed!")):t.length===0&&(this.gameOver=!0,this.combatLog&&this.combatLog.logVictory(),window.app?window.app.onBattleEnd(!0,e,t):this.modal&&this.modal.alert("Victory","All enemy ships destroyed!"))}reset(){this.gameOver=!1,this.deselectShip(),this.turnManager.reset(),this.renderer.projectiles=[],this.renderer.beams=[],this.renderer.effects=[],this.renderer.particleSystem.clear(),this.setupGame()}};window.Game=Z;class P{constructor(){this.modal=new ModalManager,this.combatLog=new CombatLog,this.progression=new ProgressionSystem,this.campaign=new CampaignManager(this.progression),this.sound=new SoundSystem,this.menuManager=new MenuManager(this.campaign,this.progression,this.sound,this.modal),this.game=null,document.addEventListener("click",()=>{this.sound.init()},{once:!0}),window.app=this,console.log("Stellar Arena initialized")}startBattle(){const e=this.campaign.getFleet(),t=this.campaign.generateEnemyFleet(this.campaign.battleNumber);this.game||(this.game=new Game(this.sound,this.modal,this.combatLog)),this.combatLog.clear(),this.game.setupGame(e,t)}onBattleEnd(e,t,i){if(console.log("Battle ended. Victory:",e),e){this.sound.playVictory();const n=this.campaign.battleVictory(t,i);console.log("Victory results:",n)}else this.sound.playDefeat(),this.campaign.battleDefeat();setTimeout(()=>{this.menuManager.showPostBattle(e)},2e3)}}window.addEventListener("load",()=>{new P});window.App=P;
