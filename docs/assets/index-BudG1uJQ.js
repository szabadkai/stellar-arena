var U=Object.defineProperty;var V=(l,e,t)=>e in l?U(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var D=(l,e,t)=>V(l,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();let O=class I{constructor(e,t){this.q=e,this.r=t}toCube(){return{x:this.q,y:-this.q-this.r,z:this.r}}distance(e){const t=this.toCube(),i=e.toCube();return(Math.abs(t.x-i.x)+Math.abs(t.y-i.y)+Math.abs(t.z-i.z))/2}neighbors(){return[[1,0],[1,-1],[0,-1],[-1,0],[-1,1],[0,1]].map(([t,i])=>new I(this.q+t,this.r+i))}equals(e){return this.q===e.q&&this.r===e.r}toString(){return`${this.q},${this.r}`}static fromString(e){const[t,i]=e.split(",").map(Number);return new I(t,i)}lineTo(e){const t=this.distance(e),i=[];for(let s=0;s<=t;s++){const n=t===0?0:s/t,a=this.q*(1-n)+e.q*n,o=this.r*(1-n)+e.r*n;i.push(this.round(a,o))}return i}round(e,t){let i=e,s=t,n=-i-s,a=Math.round(i),o=Math.round(n),r=Math.round(s);const h=Math.abs(a-i),c=Math.abs(o-n),d=Math.abs(r-s);return h>c&&h>d?a=-o-r:c>d?o=-a-r:r=-a-o,new I(a,r)}},Q=class{constructor(e,t){this.size=e,this.origin=t,this.orientation={f0:3/2,f1:0,f2:Math.sqrt(3)/2,f3:Math.sqrt(3),b0:2/3,b1:0,b2:-1/3,b3:Math.sqrt(3)/3,start_angle:0}}hexToPixel(e){const t=this.orientation,i=(t.f0*e.q+t.f1*e.r)*this.size,s=(t.f2*e.q+t.f3*e.r)*this.size;return{x:i+this.origin.x,y:s+this.origin.y}}pixelToHex(e){const t=this.orientation,i={x:(e.x-this.origin.x)/this.size,y:(e.y-this.origin.y)/this.size},s=t.b0*i.x+t.b1*i.y,n=t.b2*i.x+t.b3*i.y;return new O(0,0).round(s,n)}hexCorners(e){const t=[],i=this.hexToPixel(e);for(let s=0;s<6;s++){const n=2*Math.PI*(this.orientation.start_angle+s)/6;t.push({x:i.x+this.size*Math.cos(n),y:i.y+this.size*Math.sin(n)})}return t}};window.HexCoord=O;window.HexLayout=Q;let Y=class{constructor(e){this.grid=e}findPath(e,t,i,s){const n=new H;n.push(e.toString(),0);const a=new Map,o=new Map;for(a.set(e.toString(),null),o.set(e.toString(),0);!n.isEmpty();){const c=n.pop(),d=HexCoord.fromString(c);if(d.equals(t))break;const u=d.neighbors();for(const g of u){if(!this.grid.isValidHex(g)||this.grid.isOccupied(g))continue;const m=this.getMoveCost(d,g,i),E=o.get(c)+m;if(E>s)continue;const C=g.toString();if(!o.has(C)||E<o.get(C)){o.set(C,E);const k=E+this.heuristic(g,t);n.push(C,k),a.set(C,c)}}}if(!a.has(t.toString()))return null;const r=[];let h=t.toString();for(;h!==null;)r.push(HexCoord.fromString(h)),h=a.get(h);return r.reverse(),r.slice(1)}getReachableHexes(e,t){const i=t.actionPoints,s=new Map,n=new H;for(n.push(e.toString(),0),s.set(e.toString(),0);!n.isEmpty();){const o=n.pop(),r=HexCoord.fromString(o),h=s.get(o),c=r.neighbors();for(const d of c){if(!this.grid.isValidHex(d)||this.grid.isOccupied(d))continue;const u=this.getMoveCost(r,d,t),g=h+u;if(g>i)continue;const m=d.toString();(!s.has(m)||g<s.get(m))&&(s.set(m,g),n.push(m,g))}}const a=[];for(const[o,r]of s.entries())o!==e.toString()&&a.push({hex:HexCoord.fromString(o),cost:r});return a}getMoveCost(e,t,i){let s=1;if(i.velocity){const n=this.getVelocityDirection(i.velocity),a=this.getDirection(e,t);n===a?s*=.5:this.isOppositeDirection(n,a)&&(s*=1.5)}return s}getVelocityDirection(e){const t=Math.atan2(e.r,e.q);return Math.floor((t+Math.PI)/(Math.PI/3))%6}getDirection(e,t){const i=t.q-e.q,s=t.r-e.r,n=[[1,0],[1,-1],[0,-1],[-1,0],[-1,1],[0,1]];for(let a=0;a<n.length;a++)if(n[a][0]===i&&n[a][1]===s)return a;return-1}isOppositeDirection(e,t){return Math.abs(e-t)===3}heuristic(e,t){return e.distance(t)}};class H{constructor(){this.elements=[]}isEmpty(){return this.elements.length===0}push(e,t){this.elements.push({item:e,priority:t}),this.elements.sort((i,s)=>i.priority-s.priority)}pop(){return this.elements.shift().item}}window.PathFinder=Y;window.PriorityQueue=H;let j=class{static calculateDamage(e){const{weapon:t,damage:i,attacker:s,target:n}=e;let a=i;switch(t.damageType){case"kinetic":a*=1.2;break;case"energy":a*=1;break;case"explosive":a*=1.3;break;case"emp":return n.energy=Math.max(0,n.energy-i),{type:"emp",energyDamage:i}}return{type:"damage",...n.takeDamage({damage:a,weapon:t}),totalDamage:a}}static hasLineOfSight(e,t,i){const s=e.position.lineTo(t.position);for(let n=1;n<s.length-1;n++){const a=s[n];if(i.isBlocked(a))return!1}return!0}static getTargetingInfo(e,t,i){const s=e.position.distance(t.position),n=s>=i.minRange&&s<=i.maxRange,a=e.energy>=i.energyCost,o=e.actionPoints>=i.apCost,r=i.cooldownRemaining===0;return{distance:s,inRange:n,hasEnergy:a,hasAP:o,notOnCooldown:r,canFire:n&&a&&o&&r}}},X=class{constructor(e,t,i,s=10){this.start=e,this.end=t,this.position={...e},this.weapon=i,this.speed=s,this.active=!0;const n=t.x-e.x,a=t.y-e.y,o=Math.sqrt(n*n+a*a);this.velocity={x:n/o*s,y:a/o*s},this.lifetime=o/s,this.age=0}update(e){if(this.active){if(this.age+=e,this.age>=this.lifetime){this.active=!1;return}this.position.x+=this.velocity.x*e,this.position.y+=this.velocity.y*e}}draw(e){if(this.active){switch(e.save(),this.weapon.type){case"kinetic":e.fillStyle="#ffaa00",e.beginPath(),e.arc(this.position.x,this.position.y,3,0,Math.PI*2),e.fill(),e.strokeStyle="rgba(255, 170, 0, 0.5)",e.lineWidth=2,e.beginPath(),e.moveTo(this.position.x-this.velocity.x*3,this.position.y-this.velocity.y*3),e.lineTo(this.position.x,this.position.y),e.stroke();break;case"missile":const t=Math.atan2(this.velocity.y,this.velocity.x);e.translate(this.position.x,this.position.y),e.rotate(t),e.fillStyle="#ff4444",e.fillRect(-6,-2,12,4),e.fillStyle="#ffaa00",e.beginPath(),e.moveTo(-6,0),e.lineTo(-10,-3),e.lineTo(-10,3),e.closePath(),e.fill();break}e.restore()}}},K=class{constructor(e,t,i,s=.3){this.start=e,this.end=t,this.weapon=i,this.duration=s,this.age=0,this.active=!0}update(e){this.age+=e,this.age>=this.duration&&(this.active=!1)}draw(e){if(!this.active)return;const t=1-this.age/this.duration;e.save(),e.globalAlpha=t,e.strokeStyle="#00d4ff",e.lineWidth=4,e.shadowBlur=10,e.shadowColor="#00d4ff",e.beginPath(),e.moveTo(this.start.x,this.start.y),e.lineTo(this.end.x,this.end.y),e.stroke(),e.strokeStyle="#ffffff",e.lineWidth=2,e.shadowBlur=0,e.beginPath(),e.moveTo(this.start.x,this.start.y),e.lineTo(this.end.x,this.end.y),e.stroke(),e.restore()}};window.WeaponSystem=j;window.Projectile=X;window.Beam=K;let J=class W{constructor(e){this.id=e.id||Math.random().toString(36),this.name=e.name||"Unknown Ship",this.position=e.position,this.team=e.team||"player",this.shipClass=e.shipClass||"corvette";const t=.5,i=e.maxHull??100,s=e.hull??i,n=e.armor??10;this.maxHull=Math.max(1,Math.floor(i*t)),this.hull=Math.max(1,Math.min(this.maxHull,Math.floor(s*t)));const a=e.maxShield??50,o=e.shield??a;this.maxShield=Math.max(0,Math.floor(a*t)),this.shield=Math.max(0,Math.min(this.maxShield,Math.floor(o*t))),this.armor=Math.max(0,Math.floor(n*t)),this.maxEnergy=e.maxEnergy||100,this.energy=this.maxEnergy,this.reactorOutput=e.reactorOutput||50,this.maxAllocationPoints=10,this.energyAllocation=e.energyAllocation||{weapons:3,shields:3,engines:4},this.maxActionPoints=e.maxActionPoints||3,this.actionPoints=this.maxActionPoints,this.velocity={q:0,r:0},this.maxSpeed=e.maxSpeed||3,this.sensors=e.sensors||50,this.initiative=0,this.weapons=e.weapons||[],this.isDestroyed=!1,this.isActive=!1,this.animationPosition=null,this.animationProgress=1,this.animationStart=null,this.animationEnd=null,this.animationDuration=0;const r=e.statusEffects||{};this.statusEffects={evasiveCharges:r.evasiveCharges||0,overchargeShots:r.overchargeShots||0};const h=e.abilities||[];this.abilities=h.map(c=>ee(c)).filter(Boolean),this.aiProfile=e.aiProfile||"standard"}startTurn(){this.isActive=!0,this.actionPoints=this.maxActionPoints,this._aiProcessed=!1,this._autoSelected=!1,this._aiProcessedAt=null,this._turnStartTimestamp=typeof performance<"u"?performance.now():Date.now(),this.energy=Math.min(this.maxEnergy,this.energy+this.reactorOutput);const t=this.energyAllocation.shields/this.maxAllocationPoints*this.reactorOutput*.5;this.shield=Math.min(this.maxShield,this.shield+t),this.weapons.forEach(i=>{i.cooldownRemaining>0&&i.cooldownRemaining--}),this.abilities.forEach(i=>{i.cooldownRemaining>0&&i.cooldownRemaining--}),this.tickStatusEffects()}endTurn(){this.isActive=!1,(this.velocity.q!==0||this.velocity.r!==0)&&this.applyDrift()}setEnergyAllocation(e,t,i,s=!0){if(e+t+i!==this.maxAllocationPoints)return!1;if(s&&this.isActive){if(this.actionPoints<1)return!1;this.actionPoints-=1}return this.energyAllocation={weapons:e,shields:t,engines:i},!0}move(e,t){if(!e||e.length===0)return!1;const i=e.length;if(i>this.actionPoints)return!1;if(this.animationStart=this.position,this.animationEnd=e[e.length-1],this.animationProgress=0,this.animationDuration=300*e.length,this.animationPosition=this.position,t.removeShip(this.position),this.position=e[e.length-1],t.placeShip(this,this.position),this.actionPoints-=i,e.length>0){const s=this.energyAllocation.engines/this.maxAllocationPoints,n=e[0],a=e[e.length-1],o=(a.q-n.q)*s*.3,r=(a.r-n.r)*s*.3;this.velocity.q+=o,this.velocity.r+=r;const h=Math.sqrt(this.velocity.q**2+this.velocity.r**2);h>this.maxSpeed&&(this.velocity.q=this.velocity.q/h*this.maxSpeed,this.velocity.r=this.velocity.r/h*this.maxSpeed)}return!0}canUseAbility(e){return!(!e||!this.isActive||this.energy<e.energyCost||this.actionPoints<e.apCost||e.cooldownRemaining>0||this.isDestroyed)}useAbility(e,t={}){if(e<0||e>=this.abilities.length)return!1;const i=this.abilities[e];return this.canUseAbility(i)?(this.energy-=i.energyCost,this.actionPoints-=i.apCost,i.cooldownRemaining=i.cooldown,typeof i.activate=="function"&&i.activate({ship:this,game:t.game||null,renderer:t.renderer||null}),!0):!1}tickStatusEffects(){this.statusEffects.overchargeShots>0&&(this.statusEffects.overchargeShots=Math.max(0,this.statusEffects.overchargeShots-1))}updateAnimation(e){if(this.animationProgress>=1)return;(!e||e<=0||e>1)&&(e=.016);const t=e*1e3/this.animationDuration;this.animationProgress=Math.min(1,this.animationProgress+t);const i=this.animationProgress,s=i<.5?2*i*i:-1+(4-2*i)*i;this.animationStart&&this.animationEnd&&(this.animationPosition={q:this.animationStart.q+(this.animationEnd.q-this.animationStart.q)*s,r:this.animationStart.r+(this.animationEnd.r-this.animationStart.r)*s})}getRenderPosition(){return this.animationProgress<1&&this.animationPosition?this.animationPosition:this.position}applyDrift(){const e=Math.round(this.velocity.q),t=Math.round(this.velocity.r);if(e!==0||t!==0){const i=new HexCoord(this.position.q+e,this.position.r+t);this.position=i}this.velocity.q*=.9,this.velocity.r*=.9,Math.abs(this.velocity.q)<.1&&(this.velocity.q=0),Math.abs(this.velocity.r)<.1&&(this.velocity.r=0)}fireWeapon(e,t){if(e<0||e>=this.weapons.length)return null;const i=this.weapons[e];if(!this.canFireWeapon(i,t))return null;const s=this.energyAllocation.weapons/this.maxAllocationPoints;let n=i.damage*s;return this.statusEffects.overchargeShots>0&&(n*=1.25,this.statusEffects.overchargeShots=Math.max(0,this.statusEffects.overchargeShots-1)),this.energy-=i.energyCost,this.actionPoints-=i.apCost,i.cooldownRemaining=i.cooldown,{weapon:i,damage:n,attacker:this,target:t}}canFireWeapon(e,t){if(this.energy<e.energyCost||this.actionPoints<e.apCost||e.cooldownRemaining>0)return!1;const i=this.position.distance(t.position);return!(i>e.maxRange||i<e.minRange)}takeDamage(e){let t=e.damage;this.statusEffects.evasiveCharges>0&&(t*=.7,this.statusEffects.evasiveCharges=Math.max(0,this.statusEffects.evasiveCharges-1));let i=0,s=0;if(this.shield>0&&t>0&&(i=Math.min(this.shield,t),this.shield-=i,t-=i),t>0){const n=this.armor*.5,a=Math.max(1,t-n),o=this.hull;this.hull-=a,s=Math.min(a,o)}return this.hull<=0&&(this.hull=0,this.isDestroyed=!0),{shieldDamage:i,hullDamage:s,destroyed:this.isDestroyed}}rollInitiative(){return this.initiative=this.sensors+Math.floor(Math.random()*20),this.initiative}getColor(){return this.team==="player"?"#4a9eff":"#ff4444"}toJSON(){return{id:this.id,name:this.name,position:{q:this.position.q,r:this.position.r},team:this.team,shipClass:this.shipClass,hull:this.hull,maxHull:this.maxHull,shield:this.shield,maxShield:this.maxShield,armor:this.armor,energy:this.energy,maxEnergy:this.maxEnergy,reactorOutput:this.reactorOutput,energyAllocation:this.energyAllocation,actionPoints:this.actionPoints,maxActionPoints:this.maxActionPoints,velocity:this.velocity,maxSpeed:this.maxSpeed,sensors:this.sensors,weapons:this.weapons,upgrades:this.upgrades||[],abilities:this.abilities.map(e=>({key:e.key,cooldownRemaining:e.cooldownRemaining})),statusEffects:this.statusEffects,aiProfile:this.aiProfile}}static fromJSON(e){return e.position=new HexCoord(e.position.q,e.position.r),Array.isArray(e.abilities)&&(e.abilities=e.abilities.map(t=>({key:t.key,cooldownRemaining:t.cooldownRemaining||0}))),new W(e)}};const Z={interceptor:{shipClass:"interceptor",creditCost:200,maxHull:80,maxShield:40,armor:5,maxEnergy:100,reactorOutput:50,maxActionPoints:4,maxSpeed:4,sensors:60,weapons:[{name:"Needle Beam",type:"energy",damage:18,energyCost:20,apCost:0,cooldown:0,cooldownRemaining:0,maxRange:8,minRange:0,damageType:"energy"},{name:"Flash Cannon",type:"kinetic",damage:28,energyCost:30,apCost:1,cooldown:1,cooldownRemaining:0,maxRange:5,minRange:0,damageType:"kinetic"}],abilities:["evasiveManeuver","weaponOvercharge","burstEngines","empBurst"]},corvette:{shipClass:"corvette",creditCost:400,maxHull:140,maxShield:65,armor:12,maxEnergy:120,reactorOutput:60,maxActionPoints:3,maxSpeed:3,sensors:50,weapons:[{name:"Pulse Cannon",type:"energy",damage:30,energyCost:35,apCost:1,cooldown:0,cooldownRemaining:0,maxRange:6,minRange:0,damageType:"energy"},{name:"Missiles",type:"missile",damage:55,energyCost:50,apCost:1,cooldown:2,cooldownRemaining:0,maxRange:9,minRange:2,damageType:"explosive"}],abilities:["shieldSurge","weaponOvercharge"]},destroyer:{shipClass:"destroyer",creditCost:700,maxHull:200,maxShield:80,armor:25,maxEnergy:140,reactorOutput:70,maxActionPoints:2,maxSpeed:2,sensors:40,weapons:[{name:"Heavy Cannon",type:"kinetic",damage:65,energyCost:60,apCost:1,cooldown:1,cooldownRemaining:0,maxRange:7,minRange:0,damageType:"kinetic"},{name:"Point Defense",type:"energy",damage:15,energyCost:20,apCost:0,cooldown:0,cooldownRemaining:0,maxRange:4,minRange:0,damageType:"energy"}],abilities:["shieldSurge","evasiveManeuver"]}},_={shieldSurge:()=>({key:"shieldSurge",name:"Shield Surge",description:"Spend 1 AP and 20 energy to restore 35% shields.",apCost:1,energyCost:20,cooldown:3,cooldownRemaining:0,icon:"🛡",activate({ship:l,game:e}){const t=Math.floor(l.maxShield*.35);l.shield=Math.min(l.maxShield,l.shield+t),e!=null&&e.renderer&&(e.renderer.addShieldPulse(l.position),e.renderer.addDamageIndicator(l.position,`+${t} Shield`,"#66ddff")),e!=null&&e.hud&&e.hud.showMessage(`${l.name} boosts shields`,"success",2e3)}}),evasiveManeuver:()=>({key:"evasiveManeuver",name:"Evasive Maneuver",description:"Spend 1 AP and 15 energy to gain 30% damage reduction on the next hit.",apCost:1,energyCost:15,cooldown:2,cooldownRemaining:0,icon:"🌀",activate({ship:l,game:e}){l.statusEffects.evasiveCharges=Math.min(l.statusEffects.evasiveCharges+1,2),l.velocity.q*=.6,l.velocity.r*=.6,e!=null&&e.renderer&&(e.renderer.addTrailEffect(l.position,"#7ec7ff"),e.renderer.addDamageIndicator(l.position,"Evasive","#7ec7ff")),e!=null&&e.hud&&e.hud.showMessage(`${l.name} executes evasive maneuvers`,"info",2e3)}}),weaponOvercharge:()=>({key:"weaponOvercharge",name:"Weapon Overcharge",description:"Spend 1 AP and 25 energy to empower the next attack (+25% damage).",apCost:1,energyCost:25,cooldown:3,cooldownRemaining:0,icon:"⚡",activate({ship:l,game:e}){l.statusEffects.overchargeShots=Math.min(l.statusEffects.overchargeShots+1,2),e!=null&&e.renderer&&(e.renderer.addChargeEffect(l.position,"#ffaa00"),e.renderer.addDamageIndicator(l.position,"Overcharge","#ffaa00")),e!=null&&e.hud&&e.hud.showMessage(`${l.name} overcharges weapons`,"success",2e3)}}),burstEngines:()=>({key:"burstEngines",name:"Burst Engines",description:"Spend 0 AP and 20 energy to dash 2 hexes ignoring path costs.",apCost:0,energyCost:20,cooldown:3,cooldownRemaining:0,icon:"💨",activate({ship:l,game:e}){var r,h;const t=(e==null?void 0:e.grid)||((h=(r=window.app)==null?void 0:r.game)==null?void 0:h.grid);if(!t)return;const s=l.position.neighbors().map(c=>({hex:c,score:l.team==="player"?c.distance(te(l,t)):0})).filter(({hex:c})=>t.isValidHex(c)&&!t.isBlocked(c));if(s.length===0)return;let n;l.team==="player"?(s.sort((c,d)=>d.score-c.score),n=s[0].hex):n=s[Math.floor(Math.random()*s.length)].hex,t.removeShip(l.position);const a=new HexCoord((l.position.q+n.q)/2,(l.position.r+n.r)/2),o=[l.position,a,n].map(c=>new HexCoord(Math.round(c.q),Math.round(c.r))).filter((c,d,u)=>d===0||!c.equals(u[d-1]));l.position=o[o.length-1],t.placeShip(l,l.position),e!=null&&e.renderer&&e.renderer.addTrailEffect(l.position,"#66ddff"),e!=null&&e.hud&&e.hud.showMessage(`${l.name} dashes!`,"info",2e3)}}),empBurst:()=>({key:"empBurst",name:"EMP Burst",description:"Once per battle: spend 2 AP and 50 energy to drain 50 energy from all enemies within 3 hexes.",apCost:2,energyCost:50,cooldown:9999,cooldownRemaining:0,icon:"💥",activate({ship:l,game:e}){var h,c;if(l._empUsed)return;l._empUsed=!0;const t=(e==null?void 0:e.grid)||((c=(h=window.app)==null?void 0:h.game)==null?void 0:c.grid);if(!t)return;const i=l.empBurstRadiusBonus||0,s=l.empBurstDrainBonus||0,n=3+i,a=Math.max(10,50+s),o=t.getShipsByTeam(l.team==="player"?"enemy":"player");let r=0;o.forEach(d=>{l.position.distance(d.position)<=n&&!d.isDestroyed&&(d.energy=Math.max(0,d.energy-a),r++,e!=null&&e.renderer&&(e.renderer.addChargeEffect(d.position,"#55ffee"),e.renderer.addDamageIndicator(d.position,`-${a}E`,"#55ffee")))}),this.cooldownRemaining=this.cooldown,e!=null&&e.hud&&e.hud.showMessage(`${l.name} unleashes an EMP blast!`,r>0?"success":"warning",2500)}})};function ee(l){if(!l)return null;const e=typeof l=="string"?l:l.key,t=_[e];if(!t)return null;const i=t();return typeof l=="object"&&typeof l.cooldownRemaining=="number"&&(i.cooldownRemaining=l.cooldownRemaining),i}window.Ship=J;window.SHIP_PRESETS=Z;window.ABILITY_LIBRARY=_;function te(l,e){var i;const t=e.getShipsByTeam(l.team==="player"?"enemy":"player");return t.sort((s,n)=>l.position.distance(s.position)-l.position.distance(n.position)),((i=t[0])==null?void 0:i.position)||l.position}let ie=class{constructor(e,t){this.width=e,this.height=t,this.ships=new Map,this.obstacles=new Set,this.pathfinder=new PathFinder(this)}placeShip(e,t){const i=t.toString();this.ships.set(i,e),e.position=t}removeShip(e){const t=e.toString();this.ships.delete(t)}getShipAt(e){const t=e.toString();return this.ships.get(t)||null}isOccupied(e){return this.ships.has(e.toString())}isBlocked(e){return this.isOccupied(e)||this.obstacles.has(e.toString())}isValidHex(e){const t=Math.floor(this.width/2),i=Math.floor(this.height/2);return e.q>=-t&&e.q<=t&&e.r>=-i&&e.r<=i}getAllShips(){return Array.from(this.ships.values())}getShipsByTeam(e){return this.getAllShips().filter(t=>t.team===e&&!t.isDestroyed)}findPath(e,t,i){return this.pathfinder.findPath(e,t,i,i.actionPoints)}getReachableHexes(e){return this.pathfinder.getReachableHexes(e.position,e)}addObstacle(e){this.obstacles.add(e.toString())}clear(){this.ships.clear(),this.obstacles.clear()}generateObstacles(e){const t=Math.floor(this.width/2),i=Math.floor(this.height/2);for(let s=0;s<e;s++){const n=Math.floor(Math.random()*this.width)-t,a=Math.floor(Math.random()*this.height)-i,o=new HexCoord(n,a);!this.isOccupied(o)&&this.isValidHex(o)&&this.addObstacle(o)}}};window.Grid=ie;let se=class{constructor(e,t=null){this.grid=e,this.combatLog=t,this.turnNumber=1,this.initiativeQueue=[],this.currentShipIndex=0,this.phase="initiative",this.immediateMode=!1}startRound(){this.phase="initiative",this.initiativeQueue=[],this.currentShipIndex=0,this.combatLog&&this.combatLog.logRoundStart(this.turnNumber),this.grid.getAllShips().filter(t=>!t.isDestroyed).forEach(t=>{t.rollInitiative(),this.initiativeQueue.push(t)}),this.initiativeQueue.sort((t,i)=>i.initiative-t.initiative),this.nextTurn()}nextTurn(){if(console.log(`nextTurn() called. Current index: ${this.currentShipIndex}, Queue length: ${this.initiativeQueue.length}`),this.currentShipIndex<this.initiativeQueue.length){const t=this.initiativeQueue[this.currentShipIndex];t&&(console.log(`Ending turn for ${t.name}`),t.endTurn())}if(this.currentShipIndex++,console.log(`Incremented index to: ${this.currentShipIndex}`),this.currentShipIndex>=this.initiativeQueue.length){console.log("Round is over, calling endRound()"),this.endRound();return}const e=this.getCurrentShip();console.log(`Next ship: ${e?e.name:"null"}, Team: ${e?e.team:"null"}`),e&&(this.combatLog&&this.combatLog.logTurnStart(e.name,this.turnNumber),e.startTurn(),this.phase="action",console.log(`Started turn for ${e.name}, phase: ${this.phase}`))}endRound(){this.phase="end",this.turnNumber++;const e=this.grid.getShipsByTeam("player"),t=this.grid.getShipsByTeam("enemy");return e.length===0?{gameOver:!0,winner:"enemy"}:t.length===0?{gameOver:!0,winner:"player"}:(this.immediateMode?this.startRound():setTimeout(()=>{this.startRound()},500),{gameOver:!1})}getCurrentShip(){return this.currentShipIndex>=0&&this.currentShipIndex<this.initiativeQueue.length?this.initiativeQueue[this.currentShipIndex]:null}getInitiativeQueue(){return this.initiativeQueue.map((e,t)=>({ship:e,isActive:t===this.currentShipIndex}))}endCurrentTurn(){const e=this.getCurrentShip();e&&e.team==="player"&&this.nextTurn()}isPlayerTurn(){const e=this.getCurrentShip();return e&&e.team==="player"}processEnemyTurn(e,t=null){var a,o,r,h;const i=this.getCurrentShip();if(!i||i.team!=="enemy"){console.warn("processEnemyTurn called but no valid enemy ship");return}const s=i.aiProfile||"standard";if(this._processingAI){console.warn("Already processing AI turn, skipping");return}this._processingAI=!0,console.log(`AI processing turn for ${i.name}`);const n=t||(typeof window<"u"&&window.app?window.app.game:null);try{const c=this.grid.getShipsByTeam("player");if(c.length===0){console.log("No player ships found, ending turn"),this.nextTurn();return}let d=this.chooseBestTarget(i,c);console.log(`Best target: ${d.name}`),this._lastFocusTargetId=d.id;const u=this.chooseEnemyAbility(i,d);if(u!==null){const f=i.abilities[u];i.useAbility(u,{game:n,renderer:e})&&(console.log(`Enemy uses ability ${f.name}`),n&&(n.recordAbilityUse(i),(a=n.hud)==null||a.showMessage(`${i.name} activates ${f.name}`,"warning",1500),(o=n.combatLog)==null||o.logEnemy(`${i.name} activates ${f.name}`),(r=n.hud)==null||r.update()))}let g=this.grid.getShipsByTeam("player");if(g.length===0){this._processingAI=!1,this.nextTurn();return}if(d=this.chooseBestTarget(i,g),!d){this._processingAI=!1,this.nextTurn();return}this._lastFocusTargetId=d.id;const m=i.weapons[0];let E=!1;if(m){const f=i.position.distance(d.position);E=f>=m.minRange&&f<=m.maxRange}const C=i.maxHull>0?i.hull/i.maxHull:1,k=i.maxShield>0?i.shield/i.maxShield:0,N=s==="aggressive"?.22:s==="anchor"?.45:s==="cautious"?.55:.35,F=s==="aggressive"?.25:.4,T=C<N&&k<F,G=T||!E||i.actionPoints>=4;if(m&&d&&G&&i.actionPoints>1){const f=i.position.distance(d.position),p=m.minRange+Math.floor((m.maxRange-m.minRange)/2),$=T?f<=m.maxRange-1:f>m.maxRange||f<m.minRange,R=T?f<=m.maxRange&&i.actionPoints>=2:Math.abs(f-p)>2&&i.actionPoints>=4;if($||R){const M=this.grid.getReachableHexes(i);if(M.length>0){let S=null,w=-1/0;if(M.forEach(({hex:x,cost:b})=>{const v=x.distance(d.position);let y=0;v>=m.minRange&&v<=m.maxRange?(y+=100,y-=Math.abs(v-p)*12):v<m.maxRange+2?y+=45-(v-m.maxRange)*18:y-=v*6,!T&&f>m.maxRange&&(y+=(f-v)*(s==="aggressive"?22:15)),T&&(y+=(v-f)*20,v<=m.maxRange&&(y-=(m.maxRange-v)*25)),s==="flanker"&&(y-=Math.abs(v-p)*5,y-=this.computeClusterPenalty(x,d.position)),s==="anchor"&&(y-=v*3),i.actionPoints-b<m.apCost&&(y-=50),y>w&&(w=y,S=x)}),S&&!S.equals(i.position)){const x=this.grid.findPath(i.position,S,i);if(x&&x.length>0){console.log(`Moving to better position (${S.q}, ${S.r})`);let b=x.slice(0,i.actionPoints);b.length===0&&x.length>0&&(b=[x[0]]),i.move(b,this.grid)?console.log(` -> new position: ${i.position.toString()}`):console.log(` -> movement failed (needed ${b.length} AP, had ${i.actionPoints})`)}}}}}if(g=this.grid.getShipsByTeam("player"),g.length===0){this._processingAI=!1,this.nextTurn();return}d=this.chooseBestTarget(i,g);let A=0;const z=10;for(;i.actionPoints>0&&i.energy>0&&A<z;){const f=this.selectBestAttack(i);if(!f){if(console.log("No viable attack plan"),this.forceAdvanceTowardsTarget(i)){console.log("Fallback movement executed, re-evaluating attack");continue}console.log("Unable to advance, ending attack phase");break}const{target:p,weaponChoice:$}=f;if(!p||p.isDestroyed)break;const R=$.index,M=i.weapons[R];console.log(`Attacking ${p.name} with ${M.name} (AP: ${i.actionPoints}, Energy: ${i.energy})`);const S=i.fireWeapon(R,p);if(S){const w=WeaponSystem.calculateDamage(S);console.log(`Dealt ${w.hullDamage+w.shieldDamage} damage`);const x=e.layout.hexToPixel(i.position),b=e.layout.hexToPixel(p.position);M.type==="energy"?e.addBeam(x,b,M):e.addProjectile(x,b,M);const v=Math.floor((w.shieldDamage||0)+(w.hullDamage||0));if(v>0&&e.addDamageIndicator(p.position,`-${v}`,"#ff9966"),n&&(n.recordDamage(i,p,w),n.combatLog&&n.combatLog.logEnemy(`${i.name} hits ${p.name}`)),A++,p.isDestroyed){console.log(`Target ${p.name} destroyed!`),this._lastFocusTargetId===p.id&&(this._lastFocusTargetId=null),e.addExplosion(p.position),this.grid.removeShip(p.position),n!=null&&n.hud&&n.hud.showMessage(`${p.name} destroyed!`,"error",2500),n!=null&&n.combatLog&&n.combatLog.logDestruction(p.name);const y=this.grid.getShipsByTeam("player");if(y.length===0)break;d=this.chooseBestTarget(i,y)}(h=n==null?void 0:n.hud)==null||h.update()}else{console.log("Attack failed");break}}A===0&&(!d||!this.selectBestAttack(i))?console.log("AI turn: no actions possible, forcing end turn"):console.log(`AI turn complete: ${A} attacks made`)}catch(c){console.error("Error in enemy AI:",c)}finally{this.immediateMode?(console.log("Ending enemy turn (immediate mode)"),this._processingAI=!1,this.nextTurn()):(console.log("Scheduling turn end"),setTimeout(()=>{console.log("Ending enemy turn"),this._processingAI=!1,this.nextTurn()},1e3))}}chooseBestTarget(e,t){let i=null,s=-1/0;return t.forEach(n=>{if(n.isDestroyed)return;const a=this.evaluateTargetScore(e,n);a>s&&(s=a,i=n)}),i||t[0]}chooseBestWeapon(e,t){let i=null,s=-1/0;return e.weapons.forEach((n,a)=>{const o=e.position.distance(t.position);if(o>n.maxRange||o<n.minRange){console.log(`${n.name} out of range: ${o} (needs ${n.minRange}-${n.maxRange})`);return}if(!e.canFireWeapon(n,t)){console.log(`${n.name} cannot fire: AP=${e.actionPoints}/${n.apCost}, Energy=${e.energy}/${n.energyCost}, CD=${n.cooldownRemaining}`);return}const{score:r,expectedDamage:h}=this.evaluateWeaponChoice(e,t,n);r>s&&(s=r,i={index:a,score:r,expectedDamage:h})}),i}evaluateWeaponChoice(e,t,i){let s=0;const n=i.damage||0,a=t.shield||0,o=t.hull||0,r=e.aiProfile||"standard";let h=n;switch(i.type==="energy"?h*=a>0?1.1:.85:i.type==="kinetic"?h*=a>0?.75:1.2:(i.type==="missile"||i.type==="explosive")&&(h*=1.05),a>0&&(h=Math.min(h,a+o)),s+=h*1.4,s-=i.energyCost*.4,s-=i.apCost*1.5,s+=Math.max(0,e.actionPoints-i.apCost)*3,h>=o&&o>0&&(s+=35),e.hull/e.maxHull<.3&&e.actionPoints-i.apCost<=0&&(s-=25),i.cooldownRemaining===0&&(s+=8),r){case"aggressive":s+=h*.2,s-=i.apCost*.5;break;case"cautious":s-=h*.1,s-=i.energyCost*.3;break;case"skirmisher":case"flanker":s+=(i.maxRange-i.minRange)*.5,h>o&&i.apCost<=1&&(s+=10);break;case"anchor":i.type==="energy"&&(s+=12);break;case"vanguard":s+=i.apCost<=1?6:0;break}return{score:s,expectedDamage:Math.max(0,h)}}evaluateTargetScore(e,t){let i=0;const s=t.hull/Math.max(1,t.maxHull),n=t.shield/Math.max(1,t.maxShield||1),a=e.aiProfile||"standard";i+=(1-s)*120,t.shield===0&&(i+=25);const o=this.estimateTargetThreat(t,e);i+=o*.5;const r=e.position.distance(t.position);i-=r*1.8,WeaponSystem.hasLineOfSight(e,t,this.grid)||(i-=45);const c=this.countWeaponsInRange(e,t);switch(c.available===0?i-=30+c.rangeGap*5:i+=c.available*18,this._lastFocusTargetId&&t.id===this._lastFocusTargetId&&(i+=25),e.shield<e.maxShield*.2&&t.shield>0&&(i+=10),o<10&&r>4&&(i-=15),a){case"aggressive":i+=(1-s)*35,i+=o*.2,i-=r*.5;break;case"cautious":i-=(1-n)*20,i-=r>4?10:0,t.shield===0&&(i+=15);break;case"flanker":case"skirmisher":i-=Math.abs(r-4)*8,i+=c.available*5;break;case"anchor":i+=n*10,i-=r*2;break;case"vanguard":case"opportunist":i+=(1-s)*20+o*.3;break}return i}estimateTargetThreat(e,t){let i=0;const s=e.position.distance(t.position);return e.weapons.forEach(n=>{const a=(e.actionPoints||e.maxActionPoints||0)>=n.apCost,o=(e.energy||e.maxEnergy||0)>=n.energyCost;if(!a||!o||n.cooldownRemaining>0||s>n.maxRange||s<n.minRange)return;let r=n.damage||0;n.type==="energy"&&t.shield>0?r*=1.1:n.type==="kinetic"&&t.shield===0&&(r*=1.2),i+=r}),i}countWeaponsInRange(e,t){const i=e.position.distance(t.position);let s=0,n=1/0;return e.weapons.forEach(a=>{const o=i>a.maxRange?i-a.maxRange:a.minRange-i;n=Math.min(n,Math.max(0,o)),i<=a.maxRange&&i>=a.minRange&&e.canFireWeapon(a,t)&&(s+=1)}),isFinite(n)||(n=5),{available:s,rangeGap:n}}selectBestAttack(e){const t=this.grid.getShipsByTeam("player").filter(n=>!n.isDestroyed);let i=null,s=-1/0;return t.forEach(n=>{const a=this.chooseBestWeapon(e,n);if(!a)return;const o=this.evaluateTargetScore(e,n),r=a.score+o*.35;r>s&&(s=r,i={target:n,weaponChoice:a,totalScore:r})}),i}computeClusterPenalty(e,t){if(!e||!t)return 0;const i=e.distance(t);return i>=3?0:(3-i)*12}forceAdvanceTowardsTarget(e){if(e.actionPoints<=0)return!1;const t=this.grid.getShipsByTeam("player").filter(r=>!r.isDestroyed);if(t.length===0)return!1;const i=this.chooseBestTarget(e,t)||t[0];if(!i)return!1;let s=this.grid.findPath(e.position,i.position,e);if(!s||s.length===0){let r=null,h=1/0;i.position.neighbors().forEach(c=>{if(!this.grid.isValidHex(c)||this.grid.isBlocked(c))return;const d=this.grid.findPath(e.position,c,e);d&&d.length>0&&d.length<h&&(h=d.length,r=d)}),s=r}if(!s||s.length===0)return!1;const n=Math.min(e.actionPoints,Math.max(1,Math.floor(s.length/2))),a=s.slice(0,n);if(a.length===0)return!1;console.log(`AI fallback moving ${e.name} toward ${i.name}`);const o=e.move(a,this.grid);return o&&console.log(` -> ${e.name} new position: ${e.position.toString()}`),!!o}chooseEnemyAbility(e,t){if(!e.abilities||e.abilities.length===0)return null;const i=e.abilities,s=e.maxHull>0?e.hull/e.maxHull:1,n=e.maxShield>0?e.shield/e.maxShield:0;t&&t.maxShield>0&&t.shield/t.maxShield;const a=e.aiProfile||"standard",o=d=>i.findIndex(u=>u.key===d&&e.canUseAbility(u)),r=o("shieldSurge");if(r!==-1&&(n<.4||s<.5||a==="anchor"))return r;const h=o("evasiveManeuver");if(h!==-1&&(s<(a==="cautious"?.55:.35)||t&&t.weapons&&t.weapons.some(d=>(d.damage||0)>45)))return h;const c=o("weaponOvercharge");if(c!==-1&&a!=="cautious"&&s>.4&&e.energy>e.maxEnergy*.4){const d=e.abilities[c],u=e.actionPoints-d.apCost,g=this.countWeaponsInRange(e,t).available;if(u>=1&&(g>0||u>=2))return c}return null}reset(){this.turnNumber=1,this.initiativeQueue=[],this.currentShipIndex=0,this.phase="initiative"}removeShipFromQueue(e){const t=this.initiativeQueue.findIndex(i=>i.id===e);t!==-1&&(this.initiativeQueue.splice(t,1),t<this.currentShipIndex?this.currentShipIndex=Math.max(0,this.currentShipIndex-1):this.currentShipIndex>=this.initiativeQueue.length&&(this.currentShipIndex=Math.max(0,this.initiativeQueue.length-1)))}};window.TurnManager=se;let ne=class{constructor(){this.cache=new Map}generateShipSprite(e,t){const i=`${e}_${t}`;if(this.cache.has(i))return this.cache.get(i);const s=32,n=document.createElement("canvas");n.width=s,n.height=s;const a=n.getContext("2d"),o=t==="player"?"#4a9eff":"#ff4444",r=t==="player"?"#2a5f9f":"#aa2222",h=t==="player"?"#6ab9ff":"#ff6666";switch(a.imageSmoothingEnabled=!1,e){case"interceptor":this.drawInterceptor(a,s,o,r,h);break;case"corvette":this.drawCorvette(a,s,o,r,h);break;case"destroyer":this.drawDestroyer(a,s,o,r,h);break;default:this.drawCorvette(a,s,o,r,h)}return this.cache.set(i,n),n}drawInterceptor(e,t,i,s,n){const a=t/2,o=t/2;e.fillStyle=i,e.beginPath(),e.moveTo(a,o-10),e.lineTo(a+6,o+6),e.lineTo(a,o+4),e.lineTo(a-6,o+6),e.closePath(),e.fill(),e.fillStyle=s,e.fillRect(a-8,o,3,8),e.fillRect(a+5,o,3,8),e.fillStyle=n,e.fillRect(a-1,o-6,2,4),e.fillStyle="#ffaa00",e.fillRect(a-1,o+6,2,2)}drawCorvette(e,t,i,s,n){const a=t/2,o=t/2;e.fillStyle=i,e.fillRect(a-4,o-8,8,16),e.beginPath(),e.moveTo(a,o-12),e.lineTo(a+4,o-8),e.lineTo(a-4,o-8),e.closePath(),e.fill(),e.fillStyle=s,e.fillRect(a-8,o-2,4,10),e.fillRect(a+4,o-2,4,10),e.fillStyle=n,e.fillRect(a-2,o-4,4,3),e.fillStyle="#ffaa00",e.fillRect(a-3,o+8,2,2),e.fillRect(a+1,o+8,2,2)}drawDestroyer(e,t,i,s,n){const a=t/2,o=t/2;e.fillStyle=i,e.fillRect(a-6,o-10,12,20),e.fillStyle=s,e.fillRect(a-6,o-10,12,4),e.fillStyle=s,e.fillRect(a-10,o-4,4,8),e.fillRect(a+6,o-4,4,8),e.fillStyle=n,e.fillRect(a-3,o-6,6,6),e.fillStyle="#ffaa00",e.fillRect(a-5,o+10,2,2),e.fillRect(a-1,o+10,2,2),e.fillRect(a+3,o+10,2,2)}generateExplosion(){const e=[];for(let i=0;i<12;i++){const s=document.createElement("canvas");s.width=64,s.height=64;const n=s.getContext("2d"),a=i/12,o=a*30,r=64/2,h=64/2,c=n.createRadialGradient(r,h,0,r,h,o);if(c.addColorStop(0,`rgba(255, 255, 200, ${1-a})`),c.addColorStop(.3,`rgba(255, 150, 0, ${.8-a*.8})`),c.addColorStop(.6,`rgba(255, 50, 0, ${.5-a*.5})`),c.addColorStop(1,"rgba(100, 0, 0, 0)"),n.fillStyle=c,n.fillRect(0,0,64,64),a<.5){const d=(.5-a)*20,u=n.createRadialGradient(r,h,0,r,h,d);u.addColorStop(0,"rgba(255, 255, 255, 1)"),u.addColorStop(1,"rgba(255, 255, 200, 0)"),n.fillStyle=u,n.fillRect(0,0,64,64)}e.push(s)}return e}generateShieldHit(){const e=[];for(let i=0;i<8;i++){const s=document.createElement("canvas");s.width=48,s.height=48;const n=s.getContext("2d"),a=i/8,o=48/2,r=48/2;n.strokeStyle=`rgba(0, 212, 255, ${1-a})`,n.lineWidth=3;const h=15+a*10;n.beginPath();for(let c=0;c<6;c++){const d=Math.PI/3*c,u=o+h*Math.cos(d),g=r+h*Math.sin(d);c===0?n.moveTo(u,g):n.lineTo(u,g)}n.closePath(),n.stroke(),e.push(s)}return e}};window.SpriteGenerator=ne;class P{constructor(e,t,i,s,n,a,o){this.x=e,this.y=t,this.vx=i,this.vy=s,this.life=n,this.maxLife=n,this.color=a,this.size=o,this.alpha=1}update(e){this.x+=this.vx*e,this.y+=this.vy*e,this.life-=e,this.alpha=this.life/this.maxLife,this.vy+=.1,this.vx*=.99,this.vy*=.99}draw(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.beginPath(),e.arc(this.x,this.y,this.size,0,Math.PI*2),e.fill(),e.restore()}isDead(){return this.life<=0}}let ae=class{constructor(){this.particles=[]}update(e){for(let t=this.particles.length-1;t>=0;t--)this.particles[t].update(e),this.particles[t].isDead()&&this.particles.splice(t,1)}draw(e){this.particles.forEach(t=>t.draw(e))}createExplosion(e,t,i=30,s="#ff6600"){for(let n=0;n<i;n++){const a=Math.random()*Math.PI*2,o=2+Math.random()*4,r=Math.cos(a)*o,h=Math.sin(a)*o,c=.5+Math.random()*.5,d=2+Math.random()*3,u=[s,"#ffaa00","#ff4444","#ffff00"],g=u[Math.floor(Math.random()*u.length)];this.particles.push(new P(e,t,r,h,c,g,d))}}createEngineTrail(e,t,i,s=5){for(let n=0;n<s;n++){const o=-Math.cos(i)*2+(Math.random()-.5)*.3,r=-Math.sin(i)*2+(Math.random()-.5)*.3,h=.3+Math.random()*.2,c=1+Math.random()*2;this.particles.push(new P(e,t,o,r,h,"#ffaa00",c))}}createShieldImpact(e,t,i=15){for(let s=0;s<i;s++){const n=Math.random()*Math.PI*2,a=1+Math.random()*2,o=Math.cos(n)*a,r=Math.sin(n)*a,h=.3+Math.random()*.3,c=1+Math.random()*2;this.particles.push(new P(e,t,o,r,h,"#00d4ff",c))}}createDebris(e,t,i=20){for(let s=0;s<i;s++){const n=Math.random()*Math.PI*2,a=1+Math.random()*3,o=Math.cos(n)*a,r=Math.sin(n)*a,h=1+Math.random(),c=1+Math.random()*2;this.particles.push(new P(e,t,o,r,h,"#666666",c))}}clear(){this.particles=[]}},oe=class{constructor(e,t,i,s=30){this.x=e,this.y=t,this.frames=i,this.currentFrame=0,this.frameTime=1/s,this.elapsed=0,this.active=!0}update(e){this.elapsed+=e,this.elapsed>=this.frameTime&&(this.elapsed=0,this.currentFrame++,this.currentFrame>=this.frames.length&&(this.active=!1))}draw(e){if(!this.active||this.currentFrame>=this.frames.length)return;const t=this.frames[this.currentFrame];e.drawImage(t,this.x-t.width/2,this.y-t.height/2)}};window.Particle=P;window.ParticleSystem=ae;window.AnimatedEffect=oe;let re=class{constructor(e,t){this.canvas=e,this.ctx=e.getContext("2d"),this.grid=t,this.hexSize=30,this.layout=new HexLayout(this.hexSize,{x:e.width/2,y:e.height/2}),this.camera={x:0,y:0,zoom:1},this.scrollDirection={x:0,y:0},this.scrollSpeed=250,this.edgeScrollMargin=60,this.projectiles=[],this.beams=[],this.effects=[],this.particleSystem=new ParticleSystem,this.spriteGenerator=new SpriteGenerator,this.explosionFrames=this.spriteGenerator.generateExplosion(),this.shieldHitFrames=this.spriteGenerator.generateShieldHit(),this.selectedShip=null,this.hoveredHex=null,this.reachableHexes=[],this.selectedWeapon=null,this.driftPaths=new Map,this.damageIndicators=[],this.obstacleRotations=new Map,this.obstacleSpeeds=new Map,this.resize(),this.worldBounds=this.computeWorldBounds()}resize(){this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.layout.origin={x:this.canvas.width/2,y:this.canvas.height/2},this.worldBounds=this.computeWorldBounds(),this.clampCamera()}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}render(e){if(this.clear(),this.updateCamera(e),this.grid.getAllShips().forEach(t=>{t.updateAnimation(e)}),this.drawBackground(),this.ctx.save(),this.ctx.translate(this.camera.x,this.camera.y),this.drawGrid(),this.selectedShip&&this.reachableHexes.length>0&&this.drawReachableHexes(),this.drawObstacles(e),this.drawShips(),this.drawDriftPaths(),this.selectedShip&&this.selectedWeapon&&(this.drawWeaponRange(this.selectedShip,this.selectedWeapon),this.highlightValidTargets()),this.hoveredHex){const t=this.grid.getShipAt(this.hoveredHex);if(t&&this.selectedWeapon&&t.team==="enemy"){const s=this.canTargetShip(this.selectedShip,t,this.selectedWeapon)?"rgba(68, 255, 68, 0.3)":"rgba(255, 68, 68, 0.3)";this.drawHexHighlight(this.hoveredHex,s)}else this.drawHexHighlight(this.hoveredHex,"rgba(255, 255, 255, 0.2)")}this.updateAndDrawProjectiles(e),this.updateAndDrawBeams(e),this.updateAndDrawEffects(e),this.particleSystem.update(e),this.particleSystem.draw(this.ctx),this.updateAndDrawDamageIndicators(e),this.selectedShip&&this.selectedWeapon&&this.drawWeaponRange(this.selectedShip,this.selectedWeapon),this.ctx.restore()}drawBackground(){this.ctx.fillStyle="#0a0e1a",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="rgba(255, 255, 255, 0.3)";for(let e=0;e<100;e++){const t=e*73%this.canvas.width,i=e*137%this.canvas.height,s=e%3+1;this.ctx.fillRect(t,i,s,s)}}drawGrid(){const e=Math.floor(this.grid.width/2),t=Math.floor(this.grid.height/2);this.ctx.strokeStyle="#1a2a3a",this.ctx.lineWidth=1;for(let i=-e;i<=e;i++)for(let s=-t;s<=t;s++){const n=new HexCoord(i,s);this.grid.isValidHex(n)&&this.drawHex(n,null,"#1a2a3a")}}drawHex(e,t=null,i=null){const s=this.layout.hexCorners(e);this.ctx.beginPath(),s.forEach((n,a)=>{a===0?this.ctx.moveTo(n.x,n.y):this.ctx.lineTo(n.x,n.y)}),this.ctx.closePath(),t&&(this.ctx.fillStyle=t,this.ctx.fill()),i&&(this.ctx.strokeStyle=i,this.ctx.stroke())}drawHexHighlight(e,t){this.drawHex(e,t,null)}computeWorldBounds(){const e=Math.floor(this.grid.width/2),t=Math.floor(this.grid.height/2);let i=1/0,s=-1/0,n=1/0,a=-1/0;for(let o=-e;o<=e;o++)for(let r=-t;r<=t;r++){const h=new HexCoord(o,r);if(!this.grid.isValidHex(h))continue;this.layout.hexCorners(h).forEach(d=>{d.x<i&&(i=d.x),d.x>s&&(s=d.x),d.y<n&&(n=d.y),d.y>a&&(a=d.y)})}return{minX:i,maxX:s,minY:n,maxY:a}}clampCamera(){if(!this.worldBounds)return;const e=40,{minX:t,maxX:i,minY:s,maxY:n}=this.worldBounds;let a=e-t,o=this.canvas.width-e-i,r=e-s,h=this.canvas.height-e-n;o>a&&(o=a=(o+a)/2),h>r&&(h=r=(h+r)/2),this.camera.x=Math.min(a,Math.max(o,this.camera.x)),this.camera.y=Math.min(r,Math.max(h,this.camera.y))}updateCamera(e){if(!e)return;const t=this.scrollSpeed;this.camera.x+=this.scrollDirection.x*t*e,this.camera.y+=this.scrollDirection.y*t*e,this.clampCamera()}updateEdgeScroll(e,t){const i=this.edgeScrollMargin;let s=0,n=0;e<i?s=1:e>this.canvas.width-i&&(s=-1),t<i?n=1:t>this.canvas.height-i&&(n=-1),this.scrollDirection={x:s,y:n}}resetEdgeScroll(){this.scrollDirection={x:0,y:0}}drawReachableHexes(){this.reachableHexes.forEach(({hex:e,cost:t})=>{const i=1-t/10;this.drawHex(e,`rgba(74, 158, 255, ${.2*i})`,null)})}drawObstacles(e){this.obstacleRotations||(this.obstacleRotations=new Map),(!e||e<=0||e>1)&&(e=.016),this.ctx.fillStyle="#3a3a3a",this.grid.obstacles.forEach(t=>{const i=HexCoord.fromString(t),s=this.layout.hexToPixel(i),n=i.q*1e3+i.r;if(this.obstacleRotations.has(t)||this.obstacleRotations.set(t,0),this.obstacleSpeeds||(this.obstacleSpeeds=new Map),!this.obstacleSpeeds.has(t)){const h=.08+n*7919%1e3/1e3*.18;this.obstacleSpeeds.set(t,h)}let a=this.obstacleRotations.get(t);const o=this.obstacleSpeeds.get(t);a+=o*e,this.obstacleRotations.set(t,a),this.ctx.save(),this.ctx.translate(s.x,s.y),this.ctx.rotate(a),this.ctx.beginPath();for(let r=0;r<8;r++){const h=Math.PI*2*r/8,d=15+((n+r)*9301+49297)%233280/233280*10,u=Math.cos(h)*d,g=Math.sin(h)*d;r===0?this.ctx.moveTo(u,g):this.ctx.lineTo(u,g)}this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()})}drawShips(){this.grid.getAllShips().forEach(t=>{if(t.isDestroyed)return;const i=t.getRenderPosition(),s=this.layout.hexToPixel(i),n=this.hoveredHex&&t.position.equals(this.hoveredHex),a=this.spriteGenerator.generateShipSprite(t.shipClass,t.team);n&&t.team==="enemy"&&(this.ctx.save(),this.ctx.strokeStyle="rgba(255, 255, 100, 0.6)",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(s.x,s.y,28,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()),t.shield>0&&(this.ctx.save(),this.ctx.strokeStyle="rgba(0, 212, 255, 0.5)",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(s.x,s.y,20,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()),this.ctx.drawImage(a,s.x-a.width/2,s.y-a.height/2),this.selectedShip&&this.selectedShip.id===t.id&&(this.ctx.strokeStyle="#ffaa00",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(s.x,s.y,25,0,Math.PI*2),this.ctx.stroke()),this.drawHealthBar(t,s),n&&t.team==="enemy"&&this.drawEnemyInfo(t,s),(t.velocity.q!==0||t.velocity.r!==0)&&this.drawVelocityVector(t,s)})}drawEnemyInfo(e,t){const o=t.x+40,r=t.y-120/2;this.ctx.save(),this.ctx.fillStyle="rgba(20, 20, 40, 0.95)",this.ctx.strokeStyle="#ffff66",this.ctx.lineWidth=2,this.ctx.fillRect(o,r,200,120),this.ctx.strokeRect(o,r,200,120),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px monospace",this.ctx.fillText(e.name,o+10,r+10+14),this.ctx.font="12px monospace",this.ctx.fillStyle="#ff6666",this.ctx.fillText(`Hull: ${Math.floor(e.hull)}/${e.maxHull}`,o+10,r+10+14+18),this.ctx.fillStyle="#66ccff",this.ctx.fillText(`Shield: ${Math.floor(e.shield)}/${e.maxShield}`,o+10,r+10+14+18*2),this.ctx.fillStyle="#cccccc",this.ctx.fillText(`Armor: ${e.armor}`,o+10,r+10+14+18*3),this.ctx.fillStyle="#ffff66",this.ctx.fillText(`AP: ${e.actionPoints}/${e.maxActionPoints}`,o+10,r+10+14+18*4),this.ctx.fillStyle="#66ff66",this.ctx.fillText(`Energy: ${Math.floor(e.energy)}/${e.maxEnergy}`,o+10,r+10+14+18*5),this.ctx.restore()}drawHealthBar(e,t){const n=t.x-15,a=t.y+25;this.ctx.fillStyle="#0a0e1a",this.ctx.fillRect(n,a,30,4);const o=e.hull/e.maxHull;this.ctx.fillStyle="#4a9eff",this.ctx.fillRect(n,a,30*o,4),this.ctx.strokeStyle="#2a3f5f",this.ctx.strokeRect(n,a,30,4)}drawVelocityVector(e,t){const s=e.velocity.q*20,n=e.velocity.r*20;this.ctx.save(),this.ctx.strokeStyle="rgba(255, 170, 0, 0.6)",this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(t.x+s,t.y+n),this.ctx.stroke();const a=Math.atan2(n,s),o=8;this.ctx.setLineDash([]),this.ctx.beginPath(),this.ctx.moveTo(t.x+s,t.y+n),this.ctx.lineTo(t.x+s-o*Math.cos(a-Math.PI/6),t.y+n-o*Math.sin(a-Math.PI/6)),this.ctx.moveTo(t.x+s,t.y+n),this.ctx.lineTo(t.x+s-o*Math.cos(a+Math.PI/6),t.y+n-o*Math.sin(a+Math.PI/6)),this.ctx.stroke(),this.ctx.restore()}drawDriftPaths(){this.driftPaths.forEach((e,t)=>{e.length!==0&&(this.ctx.save(),this.ctx.strokeStyle="rgba(255, 170, 0, 0.3)",this.ctx.lineWidth=2,this.ctx.setLineDash([3,3]),this.ctx.beginPath(),e.forEach((i,s)=>{const n=this.layout.hexToPixel(i);s===0?this.ctx.moveTo(n.x,n.y):this.ctx.lineTo(n.x,n.y)}),this.ctx.stroke(),this.ctx.restore())})}drawWeaponRange(e,t){const i=this.layout.hexToPixel(e.position);this.ctx.save(),this.ctx.strokeStyle="rgba(255, 68, 68, 0.5)",this.ctx.lineWidth=2,this.ctx.setLineDash([8,4]),this.ctx.beginPath(),this.ctx.arc(i.x,i.y,t.maxRange*this.hexSize*1.5,0,Math.PI*2),this.ctx.stroke();const s=Math.floor(this.grid.width/2),n=Math.floor(this.grid.height/2);for(let a=-s;a<=s;a++)for(let o=-n;o<=n;o++){const r=new HexCoord(a,o);if(!this.grid.isValidHex(r))continue;const h=e.position.distance(r);if(h<=t.maxRange&&h>=t.minRange){const c=this.grid.getShipAt(r);c&&c.team!==e.team?this.drawHex(r,"rgba(68, 255, 68, 0.15)",null):c||this.drawHex(r,"rgba(255, 68, 68, 0.05)",null)}else h<t.minRange&&t.minRange>0&&this.drawHex(r,"rgba(255, 170, 0, 0.1)",null)}t.minRange>0&&(this.ctx.strokeStyle="rgba(255, 170, 0, 0.5)",this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.arc(i.x,i.y,t.minRange*this.hexSize*1.5,0,Math.PI*2),this.ctx.stroke()),this.ctx.restore()}updateAndDrawProjectiles(e){for(let t=this.projectiles.length-1;t>=0;t--){const i=this.projectiles[t];i.update(e),i.draw(this.ctx),i.active||this.projectiles.splice(t,1)}}updateAndDrawBeams(e){for(let t=this.beams.length-1;t>=0;t--){const i=this.beams[t];i.update(e),i.draw(this.ctx),i.active||this.beams.splice(t,1)}}updateAndDrawEffects(e){for(let t=this.effects.length-1;t>=0;t--){const i=this.effects[t];i.update(e),i.draw(this.ctx),i.active||this.effects.splice(t,1)}}addProjectile(e,t,i){this.projectiles.push(new Projectile(e,t,i,300))}addBeam(e,t,i){this.beams.push(new Beam(e,t,i,.3))}addExplosion(e){const t=this.layout.hexToPixel(e);this.effects.push(new AnimatedEffect(t.x,t.y,this.explosionFrames,30)),this.particleSystem.createExplosion(t.x,t.y,40)}addShieldHit(e){const t=this.layout.hexToPixel(e);this.effects.push(new AnimatedEffect(t.x,t.y,this.shieldHitFrames,30)),this.particleSystem.createShieldImpact(t.x,t.y,20)}addShieldPulse(e){const t=this.layout.hexToPixel(e);this.particleSystem.createShieldImpact(t.x,t.y,30),this.addDamageIndicator(e,"Shield Surge","#66ddff")}addTrailEffect(e,t="#7ec7ff"){const i=this.layout.hexToPixel(e),s=Math.random()*Math.PI*2;this.particleSystem.createEngineTrail(i.x,i.y,s,12)}addChargeEffect(e,t="#ffaa00"){const i=this.layout.hexToPixel(e);this.particleSystem.createExplosion(i.x,i.y,15,t)}addDamageIndicator(e,t,i="#ffffff"){const s=this.layout.hexToPixel(e);this.damageIndicators.push({text:t,color:i,position:{x:s.x,y:s.y},elapsed:0,duration:1.2})}updateAndDrawDamageIndicators(e){for(let t=this.damageIndicators.length-1;t>=0;t--){const i=this.damageIndicators[t];i.elapsed+=e,i.position.y-=25*e;const s=1-i.elapsed/i.duration;if(s<=0){this.damageIndicators.splice(t,1);continue}this.ctx.save(),this.ctx.globalAlpha=Math.max(0,s),this.ctx.fillStyle=i.color,this.ctx.font='16px "Courier New", monospace',this.ctx.textAlign="center",this.ctx.fillText(i.text,i.position.x,i.position.y),this.ctx.restore()}}pixelToHex(e,t){return this.layout.pixelToHex({x:e-this.camera.x,y:t-this.camera.y})}setSelectedShip(e,t=!0){this.selectedShip=e,e&&t?this.reachableHexes=this.grid.getReachableHexes(e):this.reachableHexes=[]}setHoveredHex(e){this.hoveredHex=e}setSelectedWeapon(e){this.selectedWeapon=e}canTargetShip(e,t,i){if(!e||!t||!i)return!1;const s=e.position.distance(t.position);return!(s>i.maxRange||s<i.minRange||!e.canFireWeapon(i,t)||!WeaponSystem.hasLineOfSight(e,t,this.grid))}highlightValidTargets(){if(!this.selectedShip||!this.selectedWeapon)return;this.grid.getShipsByTeam(this.selectedShip.team==="player"?"enemy":"player").forEach(t=>{if(this.canTargetShip(this.selectedShip,t,this.selectedWeapon)){const s=this.layout.hexToPixel(t.position);this.ctx.save(),this.ctx.strokeStyle="rgba(68, 255, 68, 0.6)",this.ctx.lineWidth=3,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.arc(s.x,s.y,28,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()}})}};window.Renderer=re;let le=class{constructor(){this.context=null,this.masterGain=null,this.enabled=!0,this.volume=.3,this.initialized=!1}init(){if(!this.initialized)try{this.context=new(window.AudioContext||window.webkitAudioContext),this.masterGain=this.context.createGain(),this.masterGain.gain.value=this.volume,this.masterGain.connect(this.context.destination),this.initialized=!0,console.log("Sound system initialized")}catch(e){console.warn("Web Audio API not supported:",e),this.enabled=!1}}setVolume(e){this.volume=Math.max(0,Math.min(1,e)),this.masterGain&&(this.masterGain.gain.value=this.volume)}setEnabled(e){this.enabled=e}createOscillator(e,t){const i=this.context.createOscillator();return i.type=e,i.frequency.value=t,i}playClick(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("square",800),t=this.context.createGain();t.gain.value=.1,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.05),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.05)}playMenuTransition(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sine",600),t=this.context.createGain();e.frequency.exponentialRampToValueAtTime(300,this.context.currentTime+.2),t.gain.value=.15,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.2),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.2)}playLaser(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sawtooth",440),t=this.context.createGain();e.frequency.exponentialRampToValueAtTime(110,this.context.currentTime+.1),t.gain.value=.2,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.1),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.1)}playKinetic(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("square",100),t=this.context.createGain();t.gain.value=.25,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.08),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.08)}playMissile(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sawtooth",200),t=this.createOscillator("sine",50),i=this.context.createGain();e.frequency.linearRampToValueAtTime(400,this.context.currentTime+.3),i.gain.value=.15,i.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.3),e.connect(i),t.connect(i),i.connect(this.masterGain),e.start(),t.start(),e.stop(this.context.currentTime+.3),t.stop(this.context.currentTime+.3)}playShieldHit(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sine",600),t=this.context.createGain();e.frequency.exponentialRampToValueAtTime(200,this.context.currentTime+.15),t.gain.value=.2,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.15),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.15)}playHullHit(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("square",150),t=this.context.createGain();t.gain.value=.2,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.12),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.12)}playExplosion(){if(!this.enabled||!this.initialized)return;const e=this.context.sampleRate*.5,t=this.context.createBuffer(1,e,this.context.sampleRate),i=t.getChannelData(0);for(let o=0;o<e;o++)i[o]=Math.random()*2-1;const s=this.context.createBufferSource();s.buffer=t;const n=this.context.createBiquadFilter();n.type="lowpass",n.frequency.value=1e3,n.frequency.exponentialRampToValueAtTime(50,this.context.currentTime+.5);const a=this.context.createGain();a.gain.value=.3,a.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.5),s.connect(n),n.connect(a),a.connect(this.masterGain),s.start(),s.stop(this.context.currentTime+.5)}playEngineThrust(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sawtooth",80),t=this.context.createGain();e.frequency.linearRampToValueAtTime(120,this.context.currentTime+.2),t.gain.value=.1,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.2),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.2)}playTurnStart(){if(!this.enabled||!this.initialized)return;const e=this.createOscillator("sine",400),t=this.context.createGain();e.frequency.linearRampToValueAtTime(500,this.context.currentTime+.1),t.gain.value=.12,t.gain.exponentialRampToValueAtTime(.001,this.context.currentTime+.1),e.connect(t),t.connect(this.masterGain),e.start(),e.stop(this.context.currentTime+.1)}playVictory(){if(!this.enabled||!this.initialized)return;[440,554,659,880].forEach((t,i)=>{const s=this.createOscillator("sine",t),n=this.context.createGain(),a=this.context.currentTime+i*.15;n.gain.value=.2,n.gain.exponentialRampToValueAtTime(.001,a+.3),s.connect(n),n.connect(this.masterGain),s.start(a),s.stop(a+.3)})}playDefeat(){if(!this.enabled||!this.initialized)return;[440,370,330,220].forEach((t,i)=>{const s=this.createOscillator("sine",t),n=this.context.createGain(),a=this.context.currentTime+i*.2;n.gain.value=.15,n.gain.exponentialRampToValueAtTime(.001,a+.4),s.connect(n),n.connect(this.masterGain),s.start(a),s.stop(a+.4)})}};window.SoundSystem=le;let he=class{constructor(e){this.game=e,this.canvas=e.renderer.canvas,this.mousePos={x:0,y:0},this.isMouseDown=!1,this.setupEventListeners()}setupEventListeners(){this.canvas.addEventListener("mousemove",e=>this.onMouseMove(e)),this.canvas.addEventListener("mousedown",e=>this.onMouseDown(e)),this.canvas.addEventListener("mouseup",e=>this.onMouseUp(e)),this.canvas.addEventListener("click",e=>this.onClick(e)),this.canvas.addEventListener("mouseleave",()=>this.onMouseLeave()),document.addEventListener("keydown",e=>this.onKeyDown(e)),window.addEventListener("resize",()=>this.onResize())}onMouseMove(e){const t=this.canvas.getBoundingClientRect();this.mousePos.x=e.clientX-t.left,this.mousePos.y=e.clientY-t.top;const i=this.game.renderer.pixelToHex(this.mousePos.x,this.mousePos.y);this.game.renderer.setHoveredHex(i),this.game.renderer.updateEdgeScroll(this.mousePos.x,this.mousePos.y)}onMouseDown(e){this.isMouseDown=!0}onMouseUp(e){this.isMouseDown=!1}onMouseLeave(){this.game.renderer.resetEdgeScroll()}onClick(e){const t=this.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top,n=this.game.renderer.pixelToHex(i,s),a=this.game.grid.getShipAt(n);a?this.handleShipClick(a):this.handleHexClick(n)}handleShipClick(e){if(e.team==="player"&&!e.isDestroyed)this.game.selectShip(e);else if(e.team==="enemy"&&this.game.selectedShip&&this.game.selectedWeapon){const t=this.game.turnManager.getCurrentShip();t&&t.id===this.game.selectedShip.id&&this.game.attackTarget(e)}}handleHexClick(e){if(this.game.selectedShip){const t=this.game.turnManager.getCurrentShip();t&&t.id===this.game.selectedShip.id&&this.game.renderer.reachableHexes.find(s=>s.hex.equals(e))&&this.game.moveShipTo(e)}}onKeyDown(e){switch(e.key){case"Escape":this.game.deselectShip();break;case" ":case"Enter":this.game.turnManager.isPlayerTurn()&&this.game.endTurn();break;case"1":case"2":case"3":case"4":const t=parseInt(e.key)-1;this.game.selectedShip&&this.game.selectedShip.weapons[t]&&this.game.hud.selectWeapon(t);break}}onResize(){this.game.renderer.resize()}};window.InputHandler=he;let ce=class{constructor(e){this.game=e,this.turnNumber=document.getElementById("turn-number"),this.shipName=document.getElementById("ship-name"),this.hullBar=document.getElementById("hull-bar"),this.hullText=document.getElementById("hull-text"),this.shieldBar=document.getElementById("shield-bar"),this.shieldText=document.getElementById("shield-text"),this.energyBar=document.getElementById("energy-bar"),this.energyText=document.getElementById("energy-text"),this.apText=document.getElementById("ap-text"),this.weaponsSlider=document.getElementById("weapons-slider"),this.shieldsSlider=document.getElementById("shields-slider"),this.enginesSlider=document.getElementById("engines-slider"),this.weaponsAlloc=document.getElementById("weapons-alloc"),this.shieldsAlloc=document.getElementById("shields-alloc"),this.enginesAlloc=document.getElementById("engines-alloc"),this.weaponButtons=document.getElementById("weapon-buttons"),this.abilityButtons=document.getElementById("ability-buttons"),this.queueList=document.getElementById("queue-list"),this.lastWeaponUpdateShipId=null,this.lastAbilityUpdateShipId=null,this.setupEventListeners()}setupEventListeners(){this.weaponsSlider.addEventListener("input",()=>this.updateEnergyAllocation()),this.shieldsSlider.addEventListener("input",()=>this.updateEnergyAllocation()),this.enginesSlider.addEventListener("input",()=>this.updateEnergyAllocation())}update(){this.updateTurnInfo(),this.updateShipInfo(),this.updateInitiativeQueue()}updateTurnInfo(){this.turnNumber.textContent=this.game.turnManager.turnNumber}updateShipInfo(){const e=this.game.selectedShip;if(!e){this.shipName.textContent="Select a ship";return}const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.shipName.textContent=e.name+(i?" [ACTIVE]":"");const s=e.hull/e.maxHull*100;this.hullBar.style.width=`${s}%`,this.hullText.textContent=`${Math.floor(e.hull)}/${e.maxHull}`;const n=e.shield/e.maxShield*100;this.shieldBar.style.width=`${n}%`,this.shieldText.textContent=`${Math.floor(e.shield)}/${e.maxShield}`;const a=e.energy/e.maxEnergy*100;this.energyBar.style.width=`${a}%`,this.energyText.textContent=`${Math.floor(e.energy)}/${e.maxEnergy}`,this.apText.textContent=`${e.actionPoints}/${e.maxActionPoints}`,this.updateEnergySliders(e);const o=`${e.id}_${t==null?void 0:t.id}`;this.lastWeaponUpdateShipId!==o?(this.lastWeaponUpdateShipId=o,this.updateWeaponButtons(e)):this.updateWeaponButtonStates(e);const r=`${e.id}_${t==null?void 0:t.id}_${e.abilities.length}`;this.lastAbilityUpdateShipId!==r?(this.lastAbilityUpdateShipId=r,this.updateAbilityButtons(e)):this.updateAbilityButtonStates(e)}updateEnergySliders(e){this.weaponsSlider.value=e.energyAllocation.weapons,this.shieldsSlider.value=e.energyAllocation.shields,this.enginesSlider.value=e.energyAllocation.engines,this.weaponsAlloc.textContent=`${e.energyAllocation.weapons}`,this.shieldsAlloc.textContent=`${e.energyAllocation.shields}`,this.enginesAlloc.textContent=`${e.energyAllocation.engines}`;const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id,s=e.actionPoints>=1,n=i&&s;this.weaponsSlider.disabled=!n,this.shieldsSlider.disabled=!n,this.enginesSlider.disabled=!n}updateEnergyAllocation(){const e=this.game.selectedShip;if(!e||e.team!=="player")return;const t=parseInt(this.weaponsSlider.value),i=parseInt(this.shieldsSlider.value),s=parseInt(this.enginesSlider.value),n=t+i+s;if(n>0){const a=e.maxAllocationPoints/n,o=Math.round(t*a),r=Math.round(i*a),h=e.maxAllocationPoints-o-r;if(!e.setEnergyAllocation(o,r,h)){this.showMessage("Need 1 AP to change energy allocation!","error",2e3),this.updateEnergySliders(e);return}this.game.combatLog&&this.game.combatLog.logEnergyAllocation(e.name)}this.weaponsAlloc.textContent=e.energyAllocation.weapons,this.shieldsAlloc.textContent=e.energyAllocation.shields,this.enginesAlloc.textContent=e.energyAllocation.engines,this.updateShipInfo()}updateWeaponButtonStates(e){const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.weaponButtons.querySelectorAll(".weapon-btn").forEach((n,a)=>{const o=e.weapons[a];if(!o)return;let r=`${o.name}
`;r+=`⚡${o.energyCost}E  ⏱${o.apCost}AP  📏${o.minRange}-${o.maxRange}`,o.cooldownRemaining>0&&(r+=`  ❄️${o.cooldownRemaining}`),n.textContent=r;const h=e.energy>=o.energyCost&&e.actionPoints>=o.apCost&&o.cooldownRemaining===0;n.classList.toggle("disabled",!h||!i),n.disabled=!i,n.classList.toggle("active",this.game.selectedWeapon===o)})}updateWeaponButtons(e){this.weaponButtons.innerHTML="";const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;e.weapons.forEach((s,n)=>{const a=document.createElement("button");a.className="weapon-btn";let o=`${s.name}
`;o+=`⚡${s.energyCost}E  ⏱${s.apCost}AP  📏${s.minRange}-${s.maxRange}`,s.cooldownRemaining>0&&(o+=`  ❄️${s.cooldownRemaining}`),a.textContent=o,e.energy>=s.energyCost&&e.actionPoints>=s.apCost&&s.cooldownRemaining===0||a.classList.add("disabled"),i||(a.disabled=!0,a.classList.add("disabled")),a.addEventListener("click",h=>{this.selectWeapon(n)}),this.game.selectedWeapon===s&&a.classList.add("active"),this.weaponButtons.appendChild(a)})}updateAbilityButtons(e){if(this.abilityButtons.innerHTML="",!e.abilities||e.abilities.length===0){const t=document.createElement("div");t.className="ability-empty",t.textContent="No tactical abilities available.",this.abilityButtons.appendChild(t);return}e.abilities.forEach((t,i)=>{const s=document.createElement("button");s.className="ability-btn",s.dataset.index=i,s.title=t.description;let n=`${t.icon||"♦️"} ${t.name}
`;n+=`⚡${t.energyCost}E  ⏱${t.apCost}AP`,t.cooldownRemaining>0&&(n+=`  ❄️${t.cooldownRemaining}`),s.textContent=n,s.addEventListener("click",()=>{this.game.useAbility(i)}),this.abilityButtons.appendChild(s)}),this.updateAbilityButtonStates(e)}updateAbilityButtonStates(e){const t=this.game.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.abilityButtons.querySelectorAll(".ability-btn").forEach((n,a)=>{const o=e.abilities[a];if(!o)return;const r=e.energy>=o.energyCost,h=e.actionPoints>=o.apCost,c=o.cooldownRemaining===0;let d=`${o.icon||"♦️"} ${o.name}
`;d+=`⚡${o.energyCost}E  ⏱${o.apCost}AP`,c||(d+=`  ❄️${o.cooldownRemaining}`),n.textContent=d;const u=i&&r&&h&&c;n.classList.toggle("disabled",!u),n.disabled=!u,r?h?c?n.title=o.description:n.title=`${o.description}
Cooling down (${o.cooldownRemaining} turn${o.cooldownRemaining===1?"":"s"})`:n.title=`${o.description}
Requires ${o.apCost} AP`:n.title=`${o.description}
Requires ${o.energyCost} energy`})}selectWeapon(e){const t=this.game.selectedShip;if(!t)return;const i=this.game.turnManager.getCurrentShip();if(!(i&&i.id===t.id)){this.showMessage("It's not this ship's turn!","error",2e3);return}const n=t.weapons[e],a=t.energy>=n.energyCost,o=t.actionPoints>=n.apCost,r=n.cooldownRemaining===0;if(!a||!o||!r){a?o?r||this.showMessage("Weapon on cooldown!","error",2e3):this.showMessage("Not enough AP!","error",2e3):this.showMessage("Not enough energy!","error",2e3);return}const h=this.weaponButtons.querySelectorAll(".weapon-btn");h.forEach(c=>c.classList.remove("active")),this.game.selectedWeapon===n?(this.game.selectedWeapon=null,this.game.renderer.setSelectedWeapon(null),this.showMessage("Weapon deselected","info",1500)):(h[e].classList.add("active"),this.game.selectedWeapon=n,this.game.renderer.setSelectedWeapon(n),this.showMessage(`${n.name} selected - Click enemy to attack`,"success",2e3))}updateInitiativeQueue(){this.queueList.innerHTML="",this.game.turnManager.getInitiativeQueue().forEach(({ship:t,isActive:i})=>{const s=document.createElement("div");s.className="queue-item",i&&s.classList.add("active"),t.team==="enemy"&&s.classList.add("enemy"),s.textContent=`${t.name} (Init: ${t.initiative})`,this.queueList.appendChild(s)})}showMessage(e,t="info",i=3e3){const s=document.getElementById("message-container"),n=document.createElement("div");n.className=`game-message ${t}`,n.textContent=e,s.appendChild(n),setTimeout(()=>{n.remove()},i)}showDamage(e,t){this.showMessage(`${e.name} took ${Math.floor(t)} damage!`,"warning",2e3)}};window.HUD=ce;let de=class{constructor(){this.overlay=document.getElementById("modal-overlay"),this.title=document.getElementById("modal-title"),this.message=document.getElementById("modal-message"),this.confirmBtn=document.getElementById("modal-confirm"),this.cancelBtn=document.getElementById("modal-cancel"),this.resolveCallback=null,this.setupEventListeners()}setupEventListeners(){this.confirmBtn.addEventListener("click",()=>{this.close(!0)}),this.cancelBtn.addEventListener("click",()=>{this.close(!1)}),this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.close(!1)}),document.addEventListener("keydown",e=>{e.key==="Escape"&&this.overlay.style.display!=="none"&&this.close(!1)})}show(e,t,i={}){return new Promise(s=>{this.resolveCallback=s,this.title.textContent=e,this.message.textContent=t,i.showCancel?(this.cancelBtn.style.display="block",this.confirmBtn.textContent=i.confirmText||"OK",this.cancelBtn.textContent=i.cancelText||"Cancel"):(this.cancelBtn.style.display="none",this.confirmBtn.textContent="OK"),this.overlay.style.display="flex"})}close(e){this.overlay.style.display="none",this.resolveCallback&&(this.resolveCallback(e),this.resolveCallback=null)}alert(e,t){return this.show(e,t,{showCancel:!1})}confirm(e,t){return this.show(e,t,{showCancel:!0,confirmText:"Confirm",cancelText:"Cancel"})}};window.ModalManager=de;let ue=class{constructor(){this.container=document.getElementById("combat-log"),this.entriesContainer=document.getElementById("combat-log-entries"),this.toggleBtn=document.getElementById("combat-log-toggle"),this.clearBtn=document.getElementById("combat-log-clear"),this.isCollapsed=!0,this.setupEventListeners()}setupEventListeners(){this.toggleBtn.addEventListener("click",()=>{this.toggle()}),this.clearBtn.addEventListener("click",()=>{this.clear()})}toggle(){this.isCollapsed=!this.isCollapsed,this.isCollapsed?(this.container.classList.add("collapsed"),this.toggleBtn.textContent="▼"):(this.container.classList.remove("collapsed"),this.toggleBtn.textContent="▲")}addEntry(e,t="info"){const i=document.createElement("div");i.className=`log-entry ${t}`;const s=new Date().toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"});i.innerHTML=`
            <span class="log-timestamp">${s}</span>
            <span class="log-message">${e}</span>
        `,this.entriesContainer.appendChild(i),this.entriesContainer.scrollTop=this.entriesContainer.scrollHeight;const n=this.entriesContainer.querySelectorAll(".log-entry");n.length>100&&n[0].remove()}clear(){this.entriesContainer.innerHTML="",this.addEntry("Combat log cleared","info")}logInfo(e){this.addEntry(e,"info")}logSuccess(e){this.addEntry(e,"success")}logWarning(e){this.addEntry(e,"warning")}logError(e){this.addEntry(e,"error")}logEnemy(e){this.addEntry(e,"enemy")}logTurnStart(e,t){this.addEntry(`Turn ${t}: ${e}'s turn begins`,"info")}logMovement(e,t){this.addEntry(`${e} moved ${t} hexes`,"info")}logWeaponFire(e,t,i){this.addEntry(`${e} fires ${t} at ${i}`,"warning")}logAbilityUse(e,t){this.addEntry(`${e} uses ${t}`,"info")}logDamage(e,t,i){t>0&&i>0?this.addEntry(`${e} took ${Math.floor(t)} shield damage and ${Math.floor(i)} hull damage`,"error"):t>0?this.addEntry(`${e}'s shields absorbed ${Math.floor(t)} damage`,"warning"):i>0&&this.addEntry(`${e} took ${Math.floor(i)} hull damage`,"error")}logDestruction(e){this.addEntry(`💥 ${e} DESTROYED!`,"error")}logEnergyAllocation(e){this.addEntry(`${e} reallocated energy`,"info")}logVictory(){this.addEntry("🎉 VICTORY! All enemy ships destroyed!","success")}logDefeat(){this.addEntry("💀 DEFEAT! All player ships destroyed!","error")}logRoundStart(e){this.addEntry(`═══ Round ${e} ═══`,"info")}};window.CombatLog=ue;let ge=class{constructor(e,t,i=null,s=null){this.campaign=e,this.progression=t,this.sound=i,this.modal=s,this.currentScreen="main-menu",this.spriteGenerator=new SpriteGenerator,this.upgradeManager=new UpgradeManager,this.selectedUpgrades=new Map,this.setupEventListeners(),this.updateMainMenu()}setupEventListeners(){document.getElementById("new-campaign-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.startNewCampaign()}),document.getElementById("continue-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.continueCampaign()}),document.getElementById("launch-battle-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.launchBattle()}),document.getElementById("back-to-menu-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.showScreen("main-menu")}),document.getElementById("continue-campaign-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.continueFromBattle()}),document.getElementById("abandon-campaign-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.abandonCampaign()}),document.getElementById("finish-upgrades-btn").addEventListener("click",()=>{this.sound&&this.sound.playClick(),this.finishUpgrades()})}showScreen(e){this.sound&&this.sound.playMenuTransition(),document.querySelectorAll(".screen").forEach(t=>{t.classList.remove("active")}),document.getElementById(e).classList.add("active"),this.currentScreen=e}updateMainMenu(){const e=this.campaign.loadCampaign();document.getElementById("continue-btn").disabled=!e}startNewCampaign(){this.campaign.startNewCampaign(),this.showShipyard()}continueCampaign(){this.campaign.loadCampaign()&&this.showShipyard()}showShipyard(){this.showScreen("shipyard-screen"),this.updateShipyard()}updateShipyard(){document.getElementById("credits-display").textContent=this.progression.credits,document.getElementById("battle-number").textContent=this.campaign.battleNumber,this.renderAvailableShips()}renderAvailableShips(){const e=document.getElementById("ship-selection");e.innerHTML="";const t=this.progression.ownedShips;if(t&&t.length>0){const n=document.createElement("h3");n.textContent="⚔️ Your Fleet",n.style.gridColumn="1 / -1",e.appendChild(n),t.forEach((a,o)=>{const r=SHIP_PRESETS[a.shipClass];if(!r)return;const h=new Ship({...r,name:`${a.shipClass.charAt(0).toUpperCase()+a.shipClass.slice(1)} ${o+1}`,position:new HexCoord(0,0),team:"player",hull:a.hull,maxHull:a.maxHull,upgrades:a.upgrades||[]});a.upgrades&&a.upgrades.length>0&&a.upgrades.forEach(d=>{this.upgradeManager.applyUpgrade(h,d)});const c=this.createOwnedShipCard(h,o);e.appendChild(c)})}const i=document.createElement("h3");i.textContent="🛒 Ship Shop",i.style.gridColumn="1 / -1",i.style.marginTop=t&&t.length>0?"40px":"0",e.appendChild(i);const s=this.progression.unlockedShips;if(!t||t.length===0){const n=document.createElement("div");n.style.gridColumn="1 / -1",n.style.padding="40px",n.style.textAlign="center",n.style.color="#6ab9ff",n.style.fontSize="18px",n.style.background="#151923",n.style.borderRadius="10px",n.style.border="2px dashed #2a3f5f",n.style.marginBottom="30px",n.innerHTML="💫 <strong>Welcome, Commander!</strong><br><br>Purchase your first ship below to begin your campaign.",e.appendChild(n)}s.forEach(n=>{const a=SHIP_PRESETS[n];if(!a)return;const o=this.createShopCard(n,a);e.appendChild(o)})}createOwnedShipCard(e,t){const i=this.createShipCard(e,!1);if(e.hull<e.maxHull){const s=Math.ceil((e.maxHull-e.hull)*.5),n=document.createElement("button");n.className="action-btn",n.style.width="100%",n.style.marginTop="10px",n.textContent=`Repair (${s}₡)`,n.addEventListener("click",a=>{a.stopPropagation(),this.progression.repairShip(t,e.maxHull-e.hull)?(this.sound&&this.sound.playClick(),this.updateShipyard()):this.modal&&this.modal.alert("Insufficient Credits","You don't have enough credits to repair this ship.")}),i.appendChild(n)}else{const s=document.createElement("div");s.style.marginTop="10px",s.style.color="#44ff44",s.style.fontWeight="bold",s.textContent="✓ Ready for Battle",i.appendChild(s)}return i}createShopCard(e,t){const i=new Ship({...t,name:`New ${e.charAt(0).toUpperCase()+e.slice(1)}`,position:new HexCoord(0,0),team:"player"}),s=this.createShipCard(i,!1);s.style.opacity="0.8";const n=document.createElement("button");return n.className="action-btn",n.style.width="100%",n.style.marginTop="10px",n.style.background="#2a5f3f",n.style.borderColor="#44ff44",n.textContent=`Buy (${t.creditCost}₡)`,n.addEventListener("click",a=>{a.stopPropagation(),this.progression.buyShip(e)?(this.sound&&this.sound.playClick(),this.updateShipyard()):this.modal&&this.modal.alert("Insufficient Credits",`You need ${t.creditCost}₡ to purchase this ship.`)}),s.appendChild(n),s}createShipCard(e){const t=document.createElement("div");t.className="ship-card",e.hull<e.maxHull*.5&&t.classList.add("damaged");const i=e.hull/e.maxHull*100,s=this.spriteGenerator.generateShipSprite(e.shipClass,e.team),n=document.createElement("div");n.className="ship-illustration",n.appendChild(s),t.innerHTML=`
            <h4>${e.name}</h4>
            <div class="ship-class">${e.shipClass.toUpperCase()}</div>
        `,t.appendChild(n);const a=document.createElement("div");return a.className="ship-stats",a.innerHTML=`
            <div class="ship-stat ${i<50?"low":""}">
                <span>Hull:</span>
                <span class="value">${Math.floor(e.hull)}/${e.maxHull}</span>
            </div>
            <div class="ship-stat">
                <span>Shield:</span>
                <span class="value">${e.maxShield}</span>
            </div>
            <div class="ship-stat">
                <span>Energy:</span>
                <span class="value">${e.maxEnergy}</span>
            </div>
            <div class="ship-stat">
                <span>AP:</span>
                <span class="value">${e.maxActionPoints}</span>
            </div>
            <div class="ship-stat">
                <span>Weapons:</span>
                <span class="value">${e.weapons.length}</span>
            </div>
        `,t.appendChild(a),t}launchBattle(){const e=this.progression.ownedShips;if(!e||e.length===0){this.modal&&this.modal.alert("No Ships","Purchase at least one ship before launching into battle!");return}const t=e.map((i,s)=>{const n=SHIP_PRESETS[i.shipClass],a=new Ship({...n,id:`player${s+1}`,name:`${i.shipClass.charAt(0).toUpperCase()+i.shipClass.slice(1)} ${s+1}`,position:new HexCoord(-5+s*2,s-1),team:"player",hull:i.hull,maxHull:i.maxHull,upgrades:i.upgrades||[]});return i.upgrades&&i.upgrades.length>0&&i.upgrades.forEach(o=>{this.upgradeManager.applyUpgrade(a,o)}),a});this.campaign.setFleet(t),this.showScreen("battle-screen"),window.app&&window.app.startBattle()}showPostBattle(e,t=null){this.showScreen("post-battle-screen"),this.currentBattleVictory=e,this.currentBattleSummary=t;const i=document.getElementById("battle-result");i.textContent=e?"VICTORY!":"DEFEAT",i.className=e?"victory":"defeat";const s=document.getElementById("post-battle-summary");t?(s.innerHTML=`Turns: <span>${t.turnsElapsed}</span> &nbsp;|&nbsp; Damage Dealt: <span>${Math.floor(t.damageDealt)}</span> &nbsp;|&nbsp; Damage Taken: <span>${Math.floor(t.damageTaken)}</span> &nbsp;|&nbsp; Abilities Used: <span>${t.abilitiesUsed}</span>`,s.classList.remove("hidden")):(s.innerHTML="",s.classList.add("hidden")),this.renderRewards(e),this.renderFleetStatus(),this.renderPostBattleEvent(e)}renderRewards(e){if(!e){document.getElementById("rewards-list").innerHTML='<p style="color: #ff4444;">Campaign Failed</p>';return}const t=this.campaign.rewards;document.getElementById("rewards-list").innerHTML=`
            <div class="reward-item">
                Credits: <span class="value">+${t.credits}</span>
            </div>
            <div class="reward-item">
                Scrap: <span class="value">+${t.scrap}</span>
            </div>
        `}renderFleetStatus(){const t=this.campaign.getFleetStatus().map(i=>`
            <div class="fleet-status-item">
                <span>${i.name}</span>
                <span style="color: ${i.hullPercent<50?"#ff4444":"#44ff44"}">${i.hullPercent}% Hull</span>
            </div>
        `).join("");document.getElementById("fleet-status").innerHTML=t}renderPostBattleEvent(e){const t=document.getElementById("post-battle-event"),i=document.getElementById("event-title"),s=document.getElementById("event-description"),n=document.getElementById("event-choices"),a=document.getElementById("event-message"),o=document.getElementById("continue-campaign-btn"),r=e?this.campaign.pendingEvent:null;n.innerHTML="",a.textContent="",r?(t.classList.remove("hidden"),i.textContent=r.title,s.textContent=r.description,o.disabled=!0,r.choices.forEach(h=>{const c=document.createElement("button");c.className="event-choice-btn";let d=h.label;h.costCredits>0&&(d+=` (Cost: ${h.costCredits}₡)`),c.textContent=d,c.addEventListener("click",()=>{this.handleEventChoice(h.id,c,a,o)}),n.appendChild(c)})):(t.classList.add("hidden"),o.disabled=!1)}handleEventChoice(e,t,i,s){if(!this.campaign.pendingEvent)return;const n=this.campaign.resolvePendingEvent(e);n.success?(i.textContent=n.message,document.querySelectorAll("#event-choices .event-choice-btn").forEach(o=>{o.disabled=!0,o.classList.add("disabled")}),s.disabled=!1,this.renderFleetStatus(),this.renderRewards(this.currentBattleVictory)):i.textContent=n.message}continueFromBattle(){const t=this.campaign.getFleet().filter(i=>i.hull>0);t.length>0?this.showUpgradeScreen(t):this.finishUpgrades()}showUpgradeScreen(e){this.showScreen("upgrade-screen"),this.selectedUpgrades.clear();const t=document.getElementById("upgrade-ships");t.innerHTML="",e.forEach((i,s)=>{const n=document.createElement("div");n.className="upgrade-ship-section";const a=document.createElement("div");a.className="upgrade-ship-header",a.innerHTML=`
                <h3>${i.name}</h3>
                <div class="upgrade-ship-stats">
                    ${i.hull}/${i.maxHull} HP | ${i.maxActionPoints} AP | ${i.reactorOutput} Energy/turn
                </div>
            `,n.appendChild(a);const o=this.upgradeManager.getUpgradeChoices(i,3),r=document.createElement("div");r.className="upgrade-choices",o.forEach(h=>{const c=document.createElement("div");c.className="upgrade-card",c.innerHTML=`
                    <div class="upgrade-icon">${h.icon}</div>
                    <div class="upgrade-name">${h.name}</div>
                    <div class="upgrade-description">${h.description}</div>
                `,c.addEventListener("click",()=>{r.querySelectorAll(".upgrade-card").forEach(d=>d.classList.remove("selected")),c.classList.add("selected"),this.selectedUpgrades.set(i.id,h.key),this.sound&&this.sound.playClick()}),r.appendChild(c)}),n.appendChild(r),t.appendChild(n)})}finishUpgrades(){const e=this.campaign.getFleet();this.selectedUpgrades.forEach((i,s)=>{const n=e.find(a=>a.id===s);n&&this.upgradeManager.applyUpgrade(n,i)}),this.campaign.nextBattle()?this.showShipyard():this.modal?this.modal.alert("Campaign Complete!","Congratulations, Commander! You have achieved total victory!").then(()=>{this.campaign.reset(),this.showScreen("main-menu"),this.updateMainMenu()}):(this.campaign.reset(),this.showScreen("main-menu"),this.updateMainMenu())}async abandonCampaign(){this.modal?await this.modal.confirm("Abandon Campaign?","Are you sure you want to abandon this campaign? All progress will be lost.")&&(this.campaign.abandonCampaign(),this.showScreen("main-menu"),this.updateMainMenu()):confirm("Are you sure you want to abandon this campaign?")&&(this.campaign.abandonCampaign(),this.showScreen("main-menu"),this.updateMainMenu())}};window.MenuManager=ge;let me=class{constructor(){this.loadProgress()}loadProgress(){const e=localStorage.getItem("stellar_arena_progress");if(e){const t=JSON.parse(e);this.credits=t.credits||0,this.ownedShips=t.ownedShips||[],this.unlockedShips=t.unlockedShips||["interceptor","corvette","destroyer"],this.unlockedWeapons=t.unlockedWeapons||[],this.campaignsCompleted=t.campaignsCompleted||0,this.totalVictories=t.totalVictories||0}else this.credits=500,this.ownedShips=[],this.unlockedShips=["interceptor","corvette","destroyer"],this.unlockedWeapons=[],this.campaignsCompleted=0,this.totalVictories=0}saveProgress(){const e={credits:this.credits,ownedShips:this.ownedShips,unlockedShips:this.unlockedShips,unlockedWeapons:this.unlockedWeapons,campaignsCompleted:this.campaignsCompleted,totalVictories:this.totalVictories};localStorage.setItem("stellar_arena_progress",JSON.stringify(e))}buyShip(e){const t=SHIP_PRESETS[e];return t&&this.spendCredits(t.creditCost)?(this.ownedShips.push({shipClass:e,hull:t.maxHull,maxHull:t.maxHull,upgrades:[]}),this.saveProgress(),!0):!1}repairShip(e,t){const i=this.ownedShips[e];if(!i)return!1;const s=Math.ceil(t*.5);return this.spendCredits(s)?(i.hull=Math.min(i.hull+t,i.maxHull),this.saveProgress(),!0):!1}addCredits(e){this.credits+=e,this.saveProgress()}spendCredits(e){return this.credits>=e?(this.credits-=e,this.saveProgress(),!0):!1}unlockShip(e){return this.unlockedShips.includes(e)?!1:(this.unlockedShips.push(e),this.saveProgress(),!0)}isShipUnlocked(e){return this.unlockedShips.includes(e)}completeCampaign(){this.campaignsCompleted++,this.saveProgress()}addVictory(){this.totalVictories++,this.saveProgress()}reset(){localStorage.removeItem("stellar_arena_progress"),this.loadProgress()}};window.ProgressionSystem=me;let pe=class{constructor(e){this.progression=e,this.reset()}reset(){this.isActive=!1,this.battleNumber=0,this.maxBattles=5,this.selectedFleet=[],this.rewards={credits:0,scrap:0},this.pendingEvent=null}startNewCampaign(){this.reset(),this.isActive=!0,this.battleNumber=1}loadCampaign(){const e=localStorage.getItem("stellar_arena_campaign");if(e){const t=JSON.parse(e);return this.isActive=t.isActive,this.battleNumber=t.battleNumber,this.maxBattles=t.maxBattles,this.selectedFleet=t.selectedFleet.map(i=>Ship.fromJSON(i)),this.rewards=t.rewards,this.pendingEvent=t.pendingEvent||null,!0}return!1}saveCampaign(){if(!this.isActive){localStorage.removeItem("stellar_arena_campaign");return}const e={isActive:this.isActive,battleNumber:this.battleNumber,maxBattles:this.maxBattles,selectedFleet:this.selectedFleet.map(t=>t.toJSON()),rewards:this.rewards,pendingEvent:this.pendingEvent};localStorage.setItem("stellar_arena_campaign",JSON.stringify(e))}setFleet(e){this.selectedFleet=e,this.saveCampaign()}getFleet(){return this.selectedFleet}nextBattle(){return this.battleNumber++,this.battleNumber>this.maxBattles?(this.completeCampaign(),!1):(this.saveCampaign(),!0)}battleVictory(e,t){this.selectedFleet=e,e.forEach(n=>{const a=this.progression.ownedShips.findIndex(o=>o.shipClass===n.shipClass);a!==-1&&(this.progression.ownedShips[a].hull=n.hull,this.progression.ownedShips[a].maxHull=n.maxHull,this.progression.ownedShips[a].upgrades=n.upgrades||[])}),this.progression.saveProgress();const i=100*this.battleNumber,s=e.every(n=>n.hull===n.maxHull)?100:0;return this.rewards.credits=i+s,this.rewards.scrap=50*this.battleNumber,this.progression.addCredits(this.rewards.credits),this.progression.addVictory(),this.battleNumber<this.maxBattles?this.pendingEvent=this.generatePostBattleEvent(this.battleNumber):this.pendingEvent=null,this.saveCampaign(),{credits:this.rewards.credits,scrap:this.rewards.scrap,fleetStatus:this.getFleetStatus()}}battleDefeat(){this.isActive=!1,this.pendingEvent=null,this.saveCampaign()}completeCampaign(){return this.progression.completeCampaign(),this.progression.addCredits(500),this.isActive=!1,this.saveCampaign(),{campaignComplete:!0,bonusCredits:500}}getFleetStatus(){return this.selectedFleet.map(e=>({name:e.name,hull:e.hull,maxHull:e.maxHull,isDestroyed:e.isDestroyed,hullPercent:Math.floor(e.hull/e.maxHull*100)}))}abandonCampaign(){this.isActive=!1,this.pendingEvent=null,this.saveCampaign()}generatePostBattleEvent(e){const t=fe.filter(o=>e>=o.minBattle);if(t.length===0)return null;const i=.6+e*.05;if(Math.random()>Math.min(i,.9))return null;const s=t.reduce((o,r)=>o+(r.weight||1),0);let n=Math.random()*s,a=t[0];for(const o of t)if(n-=o.weight||1,n<=0){a=o;break}return this.instantiateEvent(a)}instantiateEvent(e){return e?{id:e.id,title:e.title,description:e.description,choices:e.choices.map(t=>({id:t.id,label:t.label,description:t.description,resultText:t.resultText,effects:t.effects||{},costCredits:t.costCredits||0})),resolved:!1}:null}resolvePendingEvent(e){if(!this.pendingEvent)return{success:!1,message:"No event to resolve."};if(this.pendingEvent.resolved)return{success:!1,message:"Event already resolved."};const t=this.pendingEvent.choices.find(s=>s.id===e);if(!t)return{success:!1,message:"Invalid choice."};if(t.costCredits>0&&this.progression.credits<t.costCredits)return{success:!1,message:"Not enough credits for that option."};if(t.costCredits>0&&!this.progression.spendCredits(t.costCredits))return{success:!1,message:"Unable to spend credits."};this.applyEventEffects(t.effects||{}),this.pendingEvent.resolved=!0;const i=t.resultText||"Outcome applied.";return this.pendingEvent=null,this.saveCampaign(),{success:!0,message:i}}applyEventEffects(e){if(e){if(typeof e.credits=="number"&&e.credits!==0&&(e.credits>0?this.progression.addCredits(e.credits):this.progression.spendCredits(Math.abs(e.credits))),typeof e.repairPercent=="number"&&this.selectedFleet.length>0&&this.selectedFleet.forEach(t=>{const i=Math.floor(t.maxHull*e.repairPercent);t.hull=Math.min(t.maxHull,t.hull+i)}),typeof e.damagePercent=="number"&&this.selectedFleet.length>0){const t=this.selectedFleet.filter(i=>i.hull>0);if(t.length>0){const i=t[Math.floor(Math.random()*t.length)],s=Math.max(1,Math.floor(i.maxHull*e.damagePercent));i.hull=Math.max(1,i.hull-s)}}e.unlockShip&&this.progression.unlockShip(e.unlockShip),e.reactorBoostPercent&&this.selectedFleet.length>0&&this.selectedFleet.forEach(t=>{const i=Math.round(t.reactorOutput*e.reactorBoostPercent);t.reactorOutput+=i}),this.selectedFleet.forEach(t=>{const i=this.progression.ownedShips.findIndex(s=>s.shipClass===t.shipClass);i!==-1&&(this.progression.ownedShips[i].hull=t.hull,this.progression.ownedShips[i].maxHull=t.maxHull,this.progression.ownedShips[i].upgrades=t.upgrades||[])}),this.progression.saveProgress()}}generateEnemyFleet(e){const t=[],i=e;let s;i<=1?s=1:i===2?s=2:s=Math.min(2+Math.floor((i-2)/2),3);for(let n=0;n<s;n++){let a;i===1||i===2?a="interceptor":i===3?a=n===0?"corvette":"destroyer":i===4?a=["interceptor","corvette","destroyer"][Math.min(n,2)]:a=n===0?"corvette":"destroyer";const o=SHIP_PRESETS[a],r=new Ship({...o,id:`enemy${n+1}`,name:`${a.charAt(0).toUpperCase()+a.slice(1)} ${String.fromCharCode(65+n)}`,position:new HexCoord(3+n*2,-2+n),team:"enemy",aiProfile:this.determineAIProfile(i,a,n)}),h=1+(i-1)*.06;r.maxHull=Math.floor(r.maxHull*h),r.hull=r.maxHull,r.maxShield=Math.floor(r.maxShield*h),r.shield=r.maxShield,i>=3&&r.weapons.forEach(c=>{c.damage=Math.floor(c.damage*(1+(i-3)*.08))}),t.push(r)}return t}determineAIProfile(e,t,i=0){if(e<=1||e===2)return t==="interceptor"?"skirmisher":"cautious";if(e===3)return t==="interceptor"?"flanker":t==="corvette"?"vanguard":"anchor";if(e===4)return t==="destroyer"?"aggressive":"vanguard";const s=t==="destroyer"?["aggressive","anchor"]:["aggressive","vanguard","flanker"];return s[i%s.length]}};window.CampaignManager=pe;const fe=[{id:"derelict-freighter",title:"Derelict Freighter",description:"Sensors pick up a drifting commerce freighter. Its holds might still be full of alloy crates—or ambushes.",minBattle:1,weight:2,choices:[{id:"salvage",label:"Dispatch salvage crews (+180₡, risk hull damage)",description:"Board the freighter and secure anything valuable. Time is hull.",resultText:"Your crews haul back crates of alloys, but shrapnel tears into a hull plate.",effects:{credits:180,damagePercent:.15}},{id:"rescue",label:"Search for survivors (+60₡, repair fleet)",description:"Stabilise the freighter and escort any survivors. They might repay the kindness.",resultText:"Grateful survivors patch hull breaches and transfer a small stipend.",effects:{credits:60,repairPercent:.25}},{id:"move_on",label:"Stay on course (+40₡)",description:"Sweep the wreck from a distance and keep momentum.",resultText:"You scoop up loose cargo and keep the fleet moving.",effects:{credits:40}}]},{id:"distress-signal",title:"Distress Signal",description:"A frontier mining rig pleads for escort—their gravity drives are failing.",minBattle:2,weight:1.5,choices:[{id:"assist",label:"Divert escorts (-100₡, major repairs)",description:"Commit resources to stabilise the rig. Expect gratitude.",resultText:"The miners share refined plating, restoring much of your fleet.",costCredits:100,effects:{repairPercent:.35}},{id:"negotiate",label:"Provide remote guidance (+120₡)",description:"Offer navigation advice—for a fee.",resultText:"The rig limps away while transferring a consultancy payment.",effects:{credits:120}},{id:"ignore",label:"Maintain radio silence",description:"Stay focused on the campaign objective.",resultText:"You leave the miners to their fate. Morale dips, but momentum holds.",effects:{}}]},{id:"ancient-beacon",title:"Ancient Beacon",description:"An archeotech beacon flares nearby, saturated with dormant energy.",minBattle:3,weight:1,choices:[{id:"tap",label:"Tap the field (+reactor output, minor hull stress)",description:"Channel the beacon's energy into your reactors.",resultText:"Reactors surge with power, though one hull groans under the strain.",effects:{reactorBoostPercent:.1,damagePercent:.1}},{id:"study",label:"Study the relic (+140₡)",description:"Sell telemetry data to researchers.",resultText:"Archivists pay handsomely for the beacon's readings.",effects:{credits:140}},{id:"dismantle",label:"Dismantle and sell it (+220₡, hull wear)",description:"Strip the beacon and trade the components.",resultText:"The salvage sells well, but the disassembly rattles your plating.",effects:{credits:220,damagePercent:.08}}]}],B={reinforcedBarrel:{name:"Reinforced Barrel",description:"+10% weapon damage",icon:"🔫",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.damage=Math.floor(e.damage*1.1))}},efficientCapacitors:{name:"Efficient Capacitors",description:"-20% weapon energy cost",icon:"⚡",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.energyCost=Math.max(1,Math.floor(e.energyCost*.8)))}},rapidReloader:{name:"Rapid Reloader",description:"-1 turn cooldown on all weapons",icon:"⏱️",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.cooldown=Math.max(0,e.cooldown-1))}},extendedRange:{name:"Extended Range",description:"+2 weapon range",icon:"📡",type:"weapon",apply:l=>{l.weapons.forEach(e=>e.maxRange+=2)}},needleArray:{name:"Needle Array",description:"Needle Beam +6 damage, +1 range (interceptor only)",icon:"🎯",type:"weapon",apply:l=>{l.shipClass==="interceptor"&&l.weapons.forEach(e=>{e.name==="Needle Beam"&&(e.damage+=6,e.maxRange+=1)})}},flashCondensers:{name:"Flash Condensers",description:"Flash Cannon +10 damage and cooldown reduced to 0 (interceptor only)",icon:"🔥",type:"weapon",apply:l=>{l.shipClass==="interceptor"&&l.weapons.forEach(e=>{e.name==="Flash Cannon"&&(e.damage+=10,e.cooldown=0,e.cooldownRemaining=0)})}},reinforcedHull:{name:"Reinforced Hull",description:"+20% max hull",icon:"🛡️",type:"defense",apply:l=>{const e=Math.floor(l.maxHull*.2);l.maxHull+=e,l.hull=Math.min(l.hull+e,l.maxHull)}},shieldBooster:{name:"Shield Booster",description:"+30% max shields",icon:"💠",type:"defense",apply:l=>{const e=Math.floor(l.maxShield*.3);l.maxShield+=e,l.shield=Math.min(l.shield+e,l.maxShield)}},reactiveArmor:{name:"Reactive Armor",description:"+5 armor",icon:"🔰",type:"defense",apply:l=>{l.armor+=5}},thrusterUpgrade:{name:"Thruster Upgrade",description:"+1 action point",icon:"🚀",type:"mobility",apply:l=>{l.maxActionPoints+=1,l.actionPoints+=1}},improvedReactor:{name:"Improved Reactor",description:"+20 max energy & +10 reactor output",icon:"⚙️",type:"mobility",apply:l=>{l.maxEnergy+=20,l.reactorOutput+=10,l.energy=Math.min(l.energy+20,l.maxEnergy)}},agileManeuvers:{name:"Agile Maneuvers",description:"+1 speed",icon:"💨",type:"mobility",apply:l=>{l.maxSpeed+=1}},advancedSensors:{name:"Advanced Sensors",description:"+15 initiative roll",icon:"👁️",type:"utility",apply:l=>{l.sensors+=15}},emergencyRepair:{name:"Emergency Repair",description:"Restore 30% hull",icon:"🔧",type:"utility",apply:l=>{l.hull=Math.min(l.hull+Math.floor(l.maxHull*.3),l.maxHull)}},empCapacitors:{name:"EMP Capacitors",description:"EMP Burst costs 15 less energy and +1 radius (interceptor only)",icon:"💥",type:"utility",apply:l=>{l.shipClass==="interceptor"&&(l.empBurstRadiusBonus=(l.empBurstRadiusBonus||0)+1,l.abilities&&l.abilities.forEach(e=>{e.key==="empBurst"&&(e.energyCost=Math.max(20,e.energyCost-15))}))}}};let ye=class{constructor(){this.availableUpgrades=Object.keys(B)}getUpgradeChoices(e,t=3){const i=[],s=[...this.availableUpgrades];for(let n=0;n<Math.min(t,s.length);n++){const a=Math.floor(Math.random()*s.length),o=s.splice(a,1)[0];i.push({key:o,...B[o]})}return i}applyUpgrade(e,t){const i=B[t];return i?(i.apply(e),e.upgrades||(e.upgrades=[]),e.upgrades.push(t),!0):!1}getShipUpgrades(e){return e.upgrades?e.upgrades.map(t=>B[t]).filter(t=>t):[]}};window.UpgradeManager=ye;window.UPGRADE_POOL=B;let ve=class{constructor(e=null,t=null,i=null){D(this,"gameLoop",e=>{this.deltaTime=(e-this.lastTime)/1e3,this.lastTime=e,this.update(this.deltaTime),this.renderer.render(this.deltaTime),requestAnimationFrame(this.gameLoop)});this.modal=t,this.canvas=document.getElementById("game-canvas"),this.sound=e,this.combatLog=i,this.gameOverOverlay=document.getElementById("game-over-overlay"),this.gameOverTitle=document.getElementById("game-over-title"),this.gameOverMessage=document.getElementById("game-over-message"),this.gameOverRetryBtn=document.getElementById("game-over-retry-btn"),this.gameOverExitBtn=document.getElementById("game-over-exit-btn"),this.battleEventOverlay=document.getElementById("battle-event-overlay"),this.battleEventTitle=document.getElementById("battle-event-title"),this.battleEventDescription=document.getElementById("battle-event-description"),this.battleEventChoices=document.getElementById("battle-event-choices"),this.battleEventMessage=document.getElementById("battle-event-message"),this.battleEventContinueBtn=document.getElementById("battle-event-continue-btn"),this.grid=new Grid(21,17),this.renderer=new Renderer(this.canvas,this.grid),this.turnManager=new TurnManager(this.grid,this.combatLog),this.hud=new HUD(this),this.inputHandler=new InputHandler(this),this.selectedShip=null,this.selectedWeapon=null,this.gameOver=!1,this.battleStats=this.createBattleStats(),this.buttonsInitialized=!1,this._shortcutsBound=!1,this.battleEventsTriggered=0,this.maxBattleEvents=2,this.pendingBattleEvent=null,this.isResolvingEvent=!1,this.lastBattleEventTurn=0,this.skipTurnAfterEvent=!1,this.eventContextShip=null,this.battleEventsSeen=new Set,this.lastTime=0,this.deltaTime=0,this.setupGame(),this.setupTutorial(),this.initializeBattleEventUI(),this.setupShortcuts(),this.start()}setupTutorial(){const e=document.getElementById("tutorial-overlay"),t=document.getElementById("close-tutorial-btn"),i=document.getElementById("dont-show-tutorial");localStorage.getItem("stellar_arena_tutorial_seen")||(e.style.display="flex"),t.addEventListener("click",()=>{e.style.display="none",i.checked&&localStorage.setItem("stellar_arena_tutorial_seen","true")})}setupGame(e=null,t=null){this.grid.clear(),this.hideGameOverOverlay(),this.selectedWeapon=null,this.selectedShip=null,this.battleStats=this.createBattleStats(),this.battleEventsTriggered=0,this.lastBattleEventTurn=0,this.pendingBattleEvent=null,this.isResolvingEvent=!1,this.skipTurnAfterEvent=!1,this.eventContextShip=null,this.battleEventsSeen.clear(),this.hideBattleEventOverlay(),e||(e=[new Ship({...SHIP_PRESETS.corvette,id:"player1",name:"Aurora",position:new HexCoord(-5,2),team:"player"}),new Ship({...SHIP_PRESETS.interceptor,id:"player2",name:"Falcon",position:new HexCoord(-5,-2),team:"player"})]),t||(t=[new Ship({...SHIP_PRESETS.corvette,id:"enemy1",name:"Raider Alpha",position:new HexCoord(3,0),team:"enemy",aiProfile:"cautious"})]),e.forEach(s=>{s._empUsed=!1,this.grid.placeShip(s,s.position)}),t.forEach(s=>{s._empUsed=!1,this.grid.placeShip(s,s.position)}),this.grid.generateObstacles(6),this.turnManager.startRound();const i=this.grid.getShipsByTeam("player");i.length>0&&this.selectShip(i[0]),this.setupButtons()}setupButtons(){if(this.buttonsInitialized)return;this.buttonsInitialized=!0,document.getElementById("end-turn-btn").addEventListener("click",()=>{this.endTurn()}),document.getElementById("reset-btn").addEventListener("click",()=>{this.reset()}),this.gameOverRetryBtn&&this.gameOverRetryBtn.addEventListener("click",()=>{this.hideGameOverOverlay(),this.reset()}),this.gameOverExitBtn&&this.gameOverExitBtn.addEventListener("click",()=>{this.hideGameOverOverlay(),window.app&&(typeof window.app.showPostBattleImmediately=="function"?window.app.showPostBattleImmediately(!1):window.app.menuManager.showPostBattle(!1))})}maybeTriggerBattleEvent(e){if(!e||this.isResolvingEvent||this.gameOver||(this.maxBattleEvents=Math.min(5,L.length),this.battleEventsTriggered>=this.maxBattleEvents))return;const t=this.grid.getShipsByTeam("enemy");if(t.length===0||this.lastBattleEventTurn===this.turnManager.turnNumber)return;const i=L.filter(r=>!(r.minTurn&&this.turnManager.turnNumber<r.minTurn||r.maxTurn&&this.turnManager.turnNumber>r.maxTurn||typeof r.condition=="function"&&!r.condition({game:this,ship:e,enemies:t})||this.battleEventsSeen.has(r.id)));if(i.length===0)return;const s=Math.min(.35+this.battleEventsTriggered*.15,.75);if(Math.random()>s)return;const n=i.reduce((r,h)=>r+(h.weight||1),0);let a=Math.random()*n,o=i[0];for(const r of i)if(a-=r.weight||1,a<=0){o=r;break}this.triggerBattleEvent(o,e)}triggerBattleEvent(e,t){!e||!this.battleEventOverlay||(this.pendingBattleEvent={def:e,resolved:!1,shipId:t.id},this.eventContextShip=t,this.isResolvingEvent=!0,this.battleEventsTriggered+=1,this.lastBattleEventTurn=this.turnManager.turnNumber,this.skipTurnAfterEvent=!1,this.battleEventsSeen.add(e.id),this.battleEventTitle&&(this.battleEventTitle.textContent=e.title),this.battleEventDescription&&(this.battleEventDescription.textContent=e.description),this.battleEventMessage&&(this.battleEventMessage.textContent=""),this.battleEventContinueBtn&&(this.battleEventContinueBtn.classList.add("hidden"),this.battleEventContinueBtn.disabled=!1),this.battleEventChoices&&(this.battleEventChoices.innerHTML="",e.choices.forEach(i=>{const s=document.createElement("button");s.className="battle-event-choice-btn",s.textContent=i.label,s.addEventListener("click",()=>{this.resolveBattleEventChoice(i)}),this.battleEventChoices.appendChild(s)})),this.combatLog&&this.combatLog.logInfo(`Event: ${e.title}`),this.showBattleEventOverlay())}resolveBattleEventChoice(e){if(!this.pendingBattleEvent||!e||this.pendingBattleEvent.resolved)return;const t=this.eventContextShip&&!this.eventContextShip.isDestroyed?this.eventContextShip:this.getShipById(this.pendingBattleEvent.shipId);if(!t){this.battleEventMessage.textContent="Unable to resolve event.";return}this.applyBattleEventEffects(t,e.effects||{}),this.battleEventChoices&&this.battleEventChoices.querySelectorAll(".battle-event-choice-btn").forEach(i=>{i.disabled=!0,i.classList.add("disabled")}),this.battleEventMessage&&(this.battleEventMessage.textContent=e.resultText||"Outcome applied."),this.battleEventContinueBtn&&this.battleEventContinueBtn.classList.remove("hidden"),this.pendingBattleEvent.resolved=!0,this.combatLog&&this.combatLog.logInfo(e.resultText||"Event resolved.")}applyBattleEventEffects(e,t){if(!t)return;const i=this.renderer;if(t.restoreEnergy){const s=e.energy;e.energy=Math.min(e.maxEnergy,e.energy+t.restoreEnergy),i&&i.addDamageIndicator(e.position,`+${e.energy-s}E`,"#ffaa00")}if(t.restoreHullPercent){const s=Math.floor(e.maxHull*t.restoreHullPercent);e.hull=Math.min(e.maxHull,e.hull+s),i&&s>0&&i.addDamageIndicator(e.position,`+${s} Hull`,"#66ff88")}if(t.restoreShieldPercent){const s=Math.floor(e.maxShield*t.restoreShieldPercent);e.shield=Math.min(e.maxShield,e.shield+s),i&&s>0&&i.addDamageIndicator(e.position,`+${s} Shield`,"#66ddff")}if(t.apAdjust&&(e.actionPoints=Math.max(0,Math.min(e.maxActionPoints+2,e.actionPoints+t.apAdjust)),this.hud.showMessage(`${e.name} action points adjusted`,t.apAdjust>0?"success":"warning",2e3)),t.overchargeShots&&(e.statusEffects.overchargeShots=Math.min(3,e.statusEffects.overchargeShots+t.overchargeShots),this.hud.showMessage(`${e.name} weapons overcharged`,"success",2e3)),t.evasiveCharges&&(e.statusEffects.evasiveCharges=Math.min(3,e.statusEffects.evasiveCharges+t.evasiveCharges),this.hud.showMessage(`${e.name} executes evasive protocols`,"info",2e3)),t.enemyRetreat&&(this.forceEnemyRetreat()||this.hud.showMessage("No enemy vessels fled.","warning",2e3)),t.enemyDamagePercent&&this.damageRandomEnemyPercent(t.enemyDamagePercent),t.enemyPanic&&this.applyEnemyPanic(t.enemyPanic),t.playerDamagePercent&&this.damageShipPercent(e,t.playerDamagePercent),t.skipTurn&&(this.skipTurnAfterEvent=!0),t.restoreEnergyAllies&&this.grid.getShipsByTeam("player").forEach(s=>{s.energy=Math.min(s.maxEnergy,s.energy+t.restoreEnergyAllies)}),t.enemyEnergyDrain&&(this.grid.getShipsByTeam("enemy").forEach(s=>{s.energy=Math.max(0,s.energy-t.enemyEnergyDrain)}),t.enemyEnergyDrain>0&&this.hud.showMessage("Enemy reactors sputter!","success",2e3)),t.alliesEvasiveCharges&&(this.grid.getShipsByTeam("player").forEach(s=>{s.statusEffects.evasiveCharges=Math.min(3,s.statusEffects.evasiveCharges+t.alliesEvasiveCharges)}),this.hud.showMessage("Fleet evasion boosted!","info",2e3)),t.resetCooldowns&&(e.weapons.forEach(s=>{s.cooldownRemaining=0}),this.hud.showMessage(`${e.name} weapons recalibrated`,"success",2e3)),t.resetAbilityCooldowns&&e.abilities.forEach(s=>{s.cooldownRemaining=0}),t.playerEnergyDrain){const s=e.energy;e.energy=Math.max(0,e.energy-t.playerEnergyDrain),s!==e.energy&&this.renderer.addDamageIndicator(e.position,`-${s-e.energy}E`,"#ff9966")}e.isDestroyed?this.selectedShip&&this.selectedShip.id===e.id&&this.deselectShip():(this.renderer.setSelectedShip(e,!0),this.renderer.setSelectedWeapon(this.selectedWeapon)),this.hud.update(),this.checkWinCondition()}forceEnemyRetreat(){const e=this.grid.getShipsByTeam("enemy");if(e.length===0)return!1;const t=e[Math.floor(Math.random()*e.length)],i=t.position,s=this.renderer.layout.hexToPixel(i);return this.renderer.addDamageIndicator(i,"Retreat!","#ffaa00"),this.renderer.particleSystem.createEngineTrail(s.x,s.y,Math.random()*Math.PI*2,25),this.turnManager.removeShipFromQueue(t.id),this.grid.removeShip(i),t.isDestroyed=!0,this.hud.showMessage(`${t.name} retreats from battle!`,"success",2500),this.sound&&this.sound.playVictory(),this.battleStats.kills+=1,!0}damageRandomEnemyPercent(e){const t=this.grid.getShipsByTeam("enemy");if(t.length===0)return;const i=t[Math.floor(Math.random()*t.length)];this.damageShipPercent(i,e),this.hud.showMessage(`${i.name} suffers structural damage`,"success",2e3),i.isDestroyed&&(this.turnManager.removeShipFromQueue(i.id),this.grid.removeShip(i.position),this.renderer.addExplosion(i.position),this.battleStats.kills+=1,this.checkWinCondition())}applyEnemyPanic(e){const t=this.grid.getShipsByTeam("enemy");t.forEach(i=>{i.actionPoints=Math.max(0,i.actionPoints-e)}),t.length>0&&this.hud.showMessage("Enemy crews panic, losing coordination!","success",2500)}damageShipPercent(e,t){var a;if(!e||e.isDestroyed)return;const i=Math.max(1,Math.floor(e.maxHull*t)),s=e.takeDamage({damage:i,weapon:{damageType:"event"}});this.renderer.addDamageIndicator(e.position,`-${i}`,"#ff6666");const n=((s==null?void 0:s.hullDamage)||0)+((s==null?void 0:s.shieldDamage)||0);e.team==="player"?this.battleStats.damageTaken+=n:this.battleStats.damageDealt+=n,e.isDestroyed&&(this.renderer.addExplosion(e.position),this.grid.removeShip(e.position),this.turnManager.removeShipFromQueue(e.id),this.selectedShip&&this.selectedShip.id===e.id&&this.deselectShip(),e.team==="player"?this.battleStats.losses+=1:(this.battleStats.kills+=1,((a=this.turnManager.getCurrentShip())==null?void 0:a.id)===e.id&&this.turnManager.nextTurn()))}getShipById(e){return this.grid.getAllShips().find(t=>t.id===e)||null}initializeBattleEventUI(){var e;this.battleEventOverlay&&((e=this.battleEventContinueBtn)==null||e.addEventListener("click",()=>{this.closeBattleEventOverlay()}))}setupShortcuts(){this._shortcutsBound||(this._shortcutsBound=!0,window.addEventListener("keydown",e=>{if(this.gameOver)return;const t=document.activeElement;if(t&&["INPUT","TEXTAREA"].includes(t.tagName))return;const i=this.turnManager.getCurrentShip();if(!(!i||i.team!=="player"))if(e.code.startsWith("Digit")){const s=parseInt(e.key,10)-1;!Number.isNaN(s)&&s>=0&&(e.preventDefault(),this.hud.selectWeapon(s))}else if(e.code==="KeyQ"||e.code==="KeyE"){const s=e.code==="KeyQ"?0:1;e.preventDefault(),this.useAbility(s)}else e.code==="Space"&&(e.preventDefault(),this.endTurn())}))}start(){this.lastTime=performance.now(),this.gameLoop()}update(e){this.hud.update();const t=this.turnManager.getCurrentShip();if(!(!t||this.gameOver)&&!this.isResolvingEvent)if(t.team==="enemy"){if(!t._aiProcessed)console.log(`[Game Update] Processing AI for ${t.name}, _aiProcessed: ${t._aiProcessed}`),t._aiProcessed=!0,t._aiProcessedAt=typeof performance<"u"?performance.now():Date.now(),setTimeout(()=>{console.log(`[Game Update] Timeout fired, calling processEnemyTurn for ${t.name}`),this.turnManager.processEnemyTurn(this.renderer,this)},500);else if(!this.turnManager._processingAI){const i=typeof performance<"u"?performance.now():Date.now();i-(t._aiProcessedAt||i)>2e3&&(console.warn(`AI safeguard re-triggered for ${t.name}`),t._aiProcessed=!1,t._aiProcessedAt=i)}}else t.team==="player"&&(t._autoSelected||(t._autoSelected=!0,this.selectShip(t)),this.maybeTriggerBattleEvent(t))}selectShip(e){if(e.isDestroyed)return;this.selectedShip=e,this.selectedWeapon=null;const t=this.turnManager.getCurrentShip(),i=t&&t.id===e.id;this.renderer.setSelectedShip(e,i),this.renderer.setSelectedWeapon(null),this.hud.update()}deselectShip(){this.selectedShip=null,this.selectedWeapon=null,this.renderer.setSelectedShip(null),this.renderer.setSelectedWeapon(null),this.hud.update()}moveShipTo(e){if(!this.selectedShip||!this.turnManager.isPlayerTurn())return;if(this.isResolvingEvent){this.hud.showMessage("Resolve the event first!","warning",2e3);return}if(this.selectedShip.team!=="player")return;const t=this.grid.findPath(this.selectedShip.position,e,this.selectedShip);t&&t.length>0&&this.selectedShip.move(t,this.grid)&&(this.combatLog&&this.combatLog.logMovement(this.selectedShip.name,t.length),this.renderer.setSelectedShip(this.selectedShip),this.hud.update())}useAbility(e){const t=this.selectedShip;if(!t){this.hud.showMessage("Select a ship first!","error",2e3);return}if(this.isResolvingEvent){this.hud.showMessage("Resolve the event first!","warning",2e3);return}if(t.team!=="player"){this.hud.showMessage("Only player ships can use abilities.","error",2e3);return}const i=this.turnManager.getCurrentShip();if(!i||i.id!==t.id){this.hud.showMessage("It's not this ship's turn!","error",2e3);return}if(!t.abilities||!t.abilities[e]){this.hud.showMessage("Ability unavailable.","error",2e3);return}const s=t.abilities[e];if(!t.canUseAbility(s)){s.cooldownRemaining>0?this.hud.showMessage(`Ability cooling down (${s.cooldownRemaining})`,"warning",2e3):t.energy<s.energyCost?this.hud.showMessage("Not enough energy!","error",2e3):t.actionPoints<s.apCost?this.hud.showMessage("Not enough AP!","error",2e3):this.hud.showMessage("Ability unavailable.","error",2e3);return}t.useAbility(e,{game:this,renderer:this.renderer})&&(this.combatLog&&this.combatLog.logAbilityUse(t.name,s.name),this.recordAbilityUse(t),this.hud.update())}attackTarget(e){if(!this.selectedShip||!this.selectedWeapon){this.hud.showMessage("No weapon selected!","error");return}if(this.isResolvingEvent){this.hud.showMessage("Resolve the event first!","warning");return}const t=this.turnManager.getCurrentShip();if(!t||t.id!==this.selectedShip.id){this.hud.showMessage("It's not this ship's turn!","error");return}if(this.selectedShip.team!=="player")return;const i=this.selectedShip.weapons.indexOf(this.selectedWeapon);if(i===-1){this.hud.showMessage("Weapon not found!","error");return}const s=this.selectedShip.position.distance(e.position);if(s>this.selectedWeapon.maxRange){this.hud.showMessage(`Target out of range! (${s} > ${this.selectedWeapon.maxRange})`,"error");return}if(s<this.selectedWeapon.minRange){this.hud.showMessage(`Target too close! (${s} < ${this.selectedWeapon.minRange})`,"error");return}if(!this.selectedShip.canFireWeapon(this.selectedWeapon,e)){this.selectedShip.energy<this.selectedWeapon.energyCost?this.hud.showMessage("Not enough energy!","error"):this.selectedShip.actionPoints<this.selectedWeapon.apCost?this.hud.showMessage("Not enough AP!","error"):this.selectedWeapon.cooldownRemaining>0&&this.hud.showMessage(`Weapon on cooldown! (${this.selectedWeapon.cooldownRemaining} turns)`,"error");return}if(!WeaponSystem.hasLineOfSight(this.selectedShip,e,this.grid)){this.hud.showMessage("No line of sight!","error");return}const n=this.selectedShip.fireWeapon(i,e);if(n){this.combatLog&&this.combatLog.logWeaponFire(this.selectedShip.name,this.selectedWeapon.name,e.name),this.hud.showMessage(`${this.selectedShip.name} fires ${this.selectedWeapon.name}!`,"success",2e3);const a=WeaponSystem.calculateDamage(n);this.sound&&(this.selectedWeapon.type==="energy"?this.sound.playLaser():this.selectedWeapon.type==="missile"?this.sound.playMissile():this.sound.playKinetic());const o=this.renderer.layout.hexToPixel(this.selectedShip.position),r=this.renderer.layout.hexToPixel(e.position);this.selectedWeapon.type==="energy"?this.renderer.addBeam(o,r,this.selectedWeapon):this.renderer.addProjectile(o,r,this.selectedWeapon),setTimeout(()=>{const c=Math.floor((a.shieldDamage||0)+(a.hullDamage||0));c>0&&this.renderer.addDamageIndicator(e.position,`-${c}`,"#ff6666"),this.recordDamage(this.selectedShip,e,a),this.combatLog&&this.combatLog.logDamage(e.name,a.shieldDamage,a.hullDamage),a.shieldDamage>0&&(this.renderer.addShieldHit(e.position),this.hud.showMessage(`Shield absorbed ${Math.floor(a.shieldDamage)} damage`,"warning",2e3),this.sound&&this.sound.playShieldHit()),a.hullDamage>0&&(this.hud.showMessage(`${e.name} took ${Math.floor(a.hullDamage)} hull damage!`,"warning",2e3),this.sound&&this.sound.playHullHit()),a.destroyed&&(this.combatLog&&this.combatLog.logDestruction(e.name),this.renderer.addExplosion(e.position),this.grid.removeShip(e.position),this.hud.showMessage(`${e.name} DESTROYED!`,"success",3e3),this.sound&&this.sound.playExplosion(),this.checkWinCondition())},this.selectedWeapon.type==="energy"?100:500),this.selectedShip.weapons.indexOf(this.selectedWeapon)!==-1?this.selectedShip.canFireWeapon(this.selectedWeapon,e)||(this.selectedWeapon=null,this.renderer.setSelectedWeapon(null)):(this.selectedWeapon=null,this.renderer.setSelectedWeapon(null)),this.hud.update()}}endTurn(){if(this.turnManager.isPlayerTurn()){if(this.isResolvingEvent){this.hud.showMessage("Resolve the event first!","warning",2e3);return}this.deselectShip(),this.turnManager.endCurrentTurn()}}checkWinCondition(){const e=this.grid.getShipsByTeam("player"),t=this.grid.getShipsByTeam("enemy");e.length===0?(this.gameOver=!0,this.showGameOverOverlay("defeat"),this.battleStats.turnsElapsed=Math.max(1,this.turnManager.turnNumber),this.combatLog&&this.combatLog.logDefeat(),window.app?window.app.onBattleEnd(!1,e,t,this.getBattleSummary()):this.modal&&this.modal.alert("Defeat","All your ships have been destroyed!")):t.length===0&&(this.gameOver=!0,this.battleStats.turnsElapsed=Math.max(1,this.turnManager.turnNumber),this.combatLog&&this.combatLog.logVictory(),window.app?window.app.onBattleEnd(!0,e,t,this.getBattleSummary()):this.modal&&this.modal.alert("Victory","All enemy ships destroyed!"))}reset(){this.gameOver=!1,this.hideGameOverOverlay(),this.deselectShip(),this.turnManager.reset(),this.renderer.projectiles=[],this.renderer.beams=[],this.renderer.effects=[],this.renderer.particleSystem.clear(),this.setupGame()}recordDamage(e,t,i){if(!i)return;const s=(i.shieldDamage||0)+(i.hullDamage||0);e.team==="player"&&(this.battleStats.damageDealt+=s,i.destroyed&&(this.battleStats.kills+=1)),t.team==="player"&&(this.battleStats.damageTaken+=s,i.destroyed&&(this.battleStats.losses+=1))}recordAbilityUse(e){e.team==="player"&&(this.battleStats.abilitiesUsed+=1)}createBattleStats(){return{turnsElapsed:0,damageDealt:0,damageTaken:0,abilitiesUsed:0,kills:0,losses:0}}getBattleSummary(){return{...this.battleStats,turnsElapsed:Math.max(1,this.turnManager.turnNumber)}}showGameOverOverlay(e="defeat"){if(this.gameOverOverlay){if(this.gameOverTitle&&(this.gameOverTitle.textContent=e==="defeat"?"Defeat":"Battle Complete"),this.gameOverMessage&&(this.gameOverMessage.textContent=e==="defeat"?"All player ships have been destroyed.":"Enemy fleet neutralized."),this.gameOverRetryBtn){const t=!window.app;this.gameOverRetryBtn.style.display=t?"inline-flex":"none"}this.gameOverExitBtn&&(this.gameOverExitBtn.textContent=window.app?"View Results":"Close"),this.gameOverOverlay.classList.remove("hidden")}}hideGameOverOverlay(){this.gameOverOverlay&&this.gameOverOverlay.classList.add("hidden")}showBattleEventOverlay(){this.battleEventOverlay&&this.battleEventOverlay.classList.remove("hidden")}hideBattleEventOverlay(){var e;this.battleEventOverlay&&(this.battleEventOverlay.classList.add("hidden"),(e=this.battleEventChoices)==null||e.replaceChildren(),this.battleEventMessage&&(this.battleEventMessage.textContent=""),this.battleEventContinueBtn&&(this.battleEventContinueBtn.classList.add("hidden"),this.battleEventContinueBtn.disabled=!1),this.isResolvingEvent=!1,this.pendingBattleEvent=null,this.eventContextShip=null,this.skipTurnAfterEvent=!1)}closeBattleEventOverlay(){this.hideBattleEventOverlay(),this.skipTurnAfterEvent&&(this.skipTurnAfterEvent=!1,this.turnManager.isPlayerTurn()&&this.endTurn())}};const L=[{id:"enemy_break",title:"Morale Fracture",description:"Enemy comms spike with panic. Their formation wavers as one captain begs for extraction.",minTurn:2,weight:1.2,condition:({game:l})=>l.grid.getShipsByTeam("enemy").length>1,choices:[{id:"offer-passage",label:"Offer a withdrawal corridor (one enemy retreats)",resultText:"A wounded enemy cruiser jumps to safety, leaving the rest exposed.",effects:{enemyRetreat:!0}},{id:"press-advantage",label:"Press the advantage (gain overcharge, enemies lose AP)",resultText:"Your fleet surges forward as enemy crews scramble to respond.",effects:{overchargeShots:1,enemyPanic:1}}]},{id:"power_cache",title:"Power Relay Cache",description:"Scans flag a dormant relay buoy loaded with spare capacitors drifting alongside the battle.",minTurn:1,weight:1,choices:[{id:"divert-power",label:"Tap the cache (+40 energy, +15% shields)",resultText:"Fresh power floods your systems, restoring crucial reserves.",effects:{restoreEnergy:40,restoreShieldPercent:.15}},{id:"share-grid",label:"Feed the grid (allies gain +25 energy)",resultText:"Fleet-wide relays hum as your allies recharge.",effects:{restoreEnergyAllies:25}}]},{id:"system_glitch",title:"Subsystem Glitch",description:"A surge rattles through your ship’s flight computer. Diagnostics warn of cascading faults.",minTurn:3,weight:.9,choices:[{id:"reboot",label:"Hard reboot (skip turn, restore 20% hull)",resultText:"Systems reboot cleanly, patching critical plating but costing precious time.",effects:{restoreHullPercent:.2,skipTurn:!0}},{id:"ride-out",label:"Ride it out (-12% hull, gain evasive charge)",resultText:"You muscle through the glitches, rerouting to emergency thrusters.",effects:{playerDamagePercent:.12,evasiveCharges:1}}]},{id:"salvage_drone",title:"Salvage Drone Rendezvous",description:"An old Alliance drone offers docking clamps and a patch kit—if you take the time to interface.",minTurn:1,weight:1.1,choices:[{id:"dock-drone",label:"Dock and refit (+18% hull, +25 energy)",resultText:"Micro-welders swarm your hull, sealing fractures while capacitors recharge.",effects:{restoreHullPercent:.18,restoreEnergy:25}},{id:"strip-drone",label:"Strip its cores (enemies lose 25 energy, gain overcharge)",resultText:"You siphon the drone’s cores, leaving the enemy short on reserves.",effects:{enemyEnergyDrain:25,overchargeShots:1}}]},{id:"minefield_drift",title:"Minefield Drift",description:"A forgotten mine cluster tumbles between the fleets, unstable but bristling with explosives.",minTurn:2,weight:1,choices:[{id:"detonate",label:"Trigger safely (random enemy takes 18% hull damage)",resultText:"A chain reaction tears through an enemy vessel’s plating.",effects:{enemyDamagePercent:.18}},{id:"thread",label:"Thread the gap (-8% hull, gain evasive stacks)",resultText:"You weave through the mines, sustaining glancing hits but gaining momentum.",effects:{playerDamagePercent:.08,evasiveCharges:2}}]},{id:"solar_flare",title:"Solar Flare Surge",description:"A coronal wave sweeps the grid. Shield harmonics spike and weapon capacitors crackle.",minTurn:3,maxTurn:6,weight:1.1,choices:[{id:"brace",label:"Brace the shields (+20% shield, allies gain evasive)",resultText:"You bleed the flare into your deflectors, bolstering the fleet.",effects:{restoreShieldPercent:.2,alliesEvasiveCharges:1}},{id:"amplify",label:"Amplify weapon banks (reset cooldowns, enemies lose 20 energy)",resultText:"Weapon coils howl as you channel the flare outward.",effects:{resetCooldowns:!0,enemyEnergyDrain:20}}]},{id:"encrypted_signal",title:"Encrypted Signal",description:"A hidden ally beams a coded burst. Deciphering it mid-fight could grant an edge.",minTurn:2,weight:.8,choices:[{id:"decode",label:"Decode fully (reset ability cooldowns, +1 AP)",resultText:"You crack the cipher, unlocking tactical subroutines.",effects:{resetAbilityCooldowns:!0,apAdjust:1}},{id:"spoof",label:"Spoof the signal (enemies lose AP, gain evasive)",resultText:"Enemy decks light up with false orders while your helm executes evasive rolls.",effects:{enemyPanic:1,evasiveCharges:1}}]},{id:"escape_pod",title:"Cryo Pod Distress",description:"A battered escape pod pings for rescue, promising veteran expertise in return.",minTurn:1,weight:.9,choices:[{id:"rescue",label:"Tractor the pod (+15% hull, enemies lose AP)",resultText:"You reel the pod in; the grateful pilot feeds you enemy vectors.",effects:{restoreHullPercent:.15,enemyPanic:1}},{id:"plunder",label:"Plunder the pod (-10% hull, gain overcharge & evasive)",resultText:"Experimental munitions inside supercharge your weapons—at a moral cost.",effects:{playerDamagePercent:.1,overchargeShots:2,evasiveCharges:1}}]},{id:"reactor_leak",title:"Auxiliary Reactor Leak",description:"Reactor alarms scream. Venting plasma could save the ship—or fuel your cannons.",minTurn:4,weight:.7,choices:[{id:"vent",label:"Vent plasma (lose 30 energy, enemies take 14% damage)",resultText:"Vent streams slash across the grid, scorching enemy hulls.",effects:{playerEnergyDrain:30,enemyDamagePercent:.14}},{id:"contain",label:"Contain leak (+25 energy, gain evasive)",resultText:"Engineers plug the leak, channeling the overflow back to the coil banks.",effects:{restoreEnergy:25,evasiveCharges:1}}]},{id:"drifting_arsenal",title:"Drifting Arsenal",description:"Crates of munitions float nearby, still sealed and surprisingly intact.",minTurn:1,weight:1,choices:[{id:"arm-up",label:"Arm up (reset weapon cooldowns, +1 AP)",resultText:"Fresh ammo slides into place; crews stand ready.",effects:{resetCooldowns:!0,apAdjust:1}},{id:"rig-traps",label:"Rig mines (random enemy takes 15% damage, enemies lose AP)",resultText:"Makeshift charges detonate under an enemy frigate, sowing chaos.",effects:{enemyDamagePercent:.15,enemyPanic:1}}]},{id:"grav_surge",title:"Gravity Surge",description:"A gravity well flickers alive, threatening to drag ships off course.",minTurn:2,weight:.9,choices:[{id:"anchor",label:"Anchor thrusters (-12% hull, gain evasive to all allies)",resultText:"You burn stabilizers, keeping formation intact at a cost.",effects:{playerDamagePercent:.12,alliesEvasiveCharges:1}},{id:"shove_enemies",label:"Shove enemies (enemies take 10% damage, lose AP)",resultText:"You ride the surge, slamming opponents out of position.",effects:{enemyDamagePercent:.1,enemyPanic:1}}]}];window.Game=ve;class q{constructor(){this.modal=new ModalManager,this.combatLog=new CombatLog,this.progression=new ProgressionSystem,this.campaign=new CampaignManager(this.progression),this.sound=new SoundSystem,this.menuManager=new MenuManager(this.campaign,this.progression,this.sound,this.modal),this.game=null,this._postBattleTimer=null,this.lastBattleSummary=null,document.addEventListener("click",()=>{this.sound.init()},{once:!0}),window.app=this,console.log("Stellar Arena initialized")}startBattle(){const e=this.campaign.getFleet(),t=this.campaign.generateEnemyFleet(this.campaign.battleNumber);this.game||(this.game=new Game(this.sound,this.modal,this.combatLog)),this.combatLog.clear(),this.lastBattleSummary=null,this.game.setupGame(e,t)}onBattleEnd(e,t,i,s=null){if(console.log("Battle ended. Victory:",e),this.lastBattleSummary=s,e){this.sound.playVictory();const n=this.campaign.battleVictory(t,i);console.log("Victory results:",n)}else this.sound.playDefeat(),this.campaign.battleDefeat();this._postBattleTimer&&clearTimeout(this._postBattleTimer),this._postBattleTimer=setTimeout(()=>{this.menuManager.showPostBattle(e,this.lastBattleSummary),this._postBattleTimer=null},2e3)}showPostBattleImmediately(e){this._postBattleTimer&&(clearTimeout(this._postBattleTimer),this._postBattleTimer=null),this.menuManager.showPostBattle(e,this.lastBattleSummary)}}window.addEventListener("load",()=>{new q});window.App=q;
